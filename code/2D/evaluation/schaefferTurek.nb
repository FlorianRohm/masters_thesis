(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    207134,       4060]
NotebookOptionsPosition[    206008,       4018]
NotebookOutlinePosition[    206347,       4033]
CellTagsIndexPosition[    206304,       4030]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\n", 
 RowBox[{"SetDirectory", "[", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ParentDirectory", "[", 
      RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", "\"\<out\>\"", ",",
      " ", "\"\<schaeferTurek\>\""}], "}"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.672580864567045*^9, 3.672580918227888*^9}, {
  3.6727427728111067`*^9, 3.672742773818266*^9}, {3.673092250885898*^9, 
  3.6730922623248997`*^9}, {3.6730966099364223`*^9, 3.673096615247209*^9}, {
  3.673414915406108*^9, 3.673414940636346*^9}, {3.6734150082024508`*^9, 
  3.673415009611857*^9}}],

Cell[BoxData["\<\"/home/florian/Projects/university/masters_thesis/code/2D/\
out/schaeferTurek\"\>"], "Output",
 CellChangeTimes->{
  3.672580921609523*^9, 3.672742774503965*^9, 3.673092266565982*^9, 
   3.673092399911118*^9, 3.67309487776821*^9, 3.673096534000791*^9, {
   3.6730966112621403`*^9, 3.673096615646462*^9}, 3.673097538981443*^9, 
   3.673106763312909*^9, 3.6731068132105923`*^9, 3.673178281306225*^9, {
   3.673179627189455*^9, 3.673179639411016*^9}, {3.673253865153414*^9, 
   3.6732538810343*^9}, {3.67325394072723*^9, 3.673253956731461*^9}, 
   3.673254009404447*^9, 3.673414522560265*^9, 3.67341494249117*^9, 
   3.6734150101194*^9, 3.673436191195548*^9, 3.6740168969399853`*^9, 
   3.6740170934208813`*^9, 3.6740253034367857`*^9, 3.674025413771181*^9, 
   3.6740300250242443`*^9, 3.674046488813065*^9, 3.674046681248114*^9, 
   3.6742075172203627`*^9, 3.6751579447231703`*^9, 3.67533343153972*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"srts", " ", "=", " ", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"FileNames", "[", "]"}], ",", " ", 
     RowBox[{"FileNames", "[", "\"\<*time\>\"", "]"}], ",", " ", 
     RowBox[{"FileNames", "[", "\"\<cumulant*\>\"", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cumulants", " ", "=", " ", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"FileNames", "[", "]"}], ",", " ", 
     RowBox[{"FileNames", "[", "\"\<*time\>\"", "]"}], ",", " ", 
     RowBox[{"FileNames", "[", "\"\<srt*\>\"", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"srtAuxiliary", " ", "=", " ", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"FileNames", "[", "\"\<*time\>\"", "]"}], ",", " ", 
     RowBox[{"FileNames", "[", "\"\<cumulant*\>\"", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cumulantAuxiliary", " ", "=", " ", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"FileNames", "[", "\"\<*time\>\"", "]"}], ",", " ", 
     RowBox[{"FileNames", "[", "\"\<srt*\>\"", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getSizes", "[", "thelist_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Read", "[", 
      RowBox[{
       RowBox[{"StringToStream", "[", "#", "]"}], ",", "Number"}], "]"}], 
     "&"}], "/@", 
    RowBox[{"Flatten", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"StringDrop", "[", 
        RowBox[{"#", ",", "4"}], "]"}], " ", "&"}], "/@", 
      RowBox[{"StringCases", "[", 
       RowBox[{"thelist", ",", " ", 
        RowBox[{"RegularExpression", "[", "\"\<size([0-9]*)\>\"", "]"}]}], 
       "]"}]}], "]"}]}]}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sizes", " ", "=", " ", 
   RowBox[{"getSizes", "[", "srts", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"permutations", " ", "=", " ", 
   RowBox[{"Ordering", "[", "sizes", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"permutationsAuxiliary", " ", "=", " ", 
   RowBox[{"Ordering", "[", 
    RowBox[{"getSizes", "[", "srtAuxiliary", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sizes", " ", "=", " ", 
   RowBox[{"sizes", "[", 
    RowBox[{"[", "permutations", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cumulants", " ", "=", " ", 
   RowBox[{"cumulants", "[", 
    RowBox[{"[", "permutations", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"srts", " ", "=", " ", 
   RowBox[{"srts", "[", 
    RowBox[{"[", "permutations", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cumulantAuxiliary", " ", "=", " ", 
   RowBox[{"cumulantAuxiliary", "[", 
    RowBox[{"[", "permutationsAuxiliary", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"srtAuxiliary", " ", "=", " ", 
   RowBox[{"srtAuxiliary", "[", 
    RowBox[{"[", "permutationsAuxiliary", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.673092281613497*^9, 3.673092290876423*^9}, 
   3.673094976793765*^9, {3.6730964378285418`*^9, 3.6730964379402227`*^9}, {
   3.673096595270143*^9, 3.6730967006344633`*^9}, {3.67309673412918*^9, 
   3.67309677047873*^9}, {3.673096848697874*^9, 3.673096928431641*^9}, {
   3.673097156474986*^9, 3.67309722552532*^9}, 3.673097270216393*^9, {
   3.673097354487135*^9, 3.673097414369615*^9}, {3.6730974465690536`*^9, 
   3.6730974555206947`*^9}, {3.673179096289462*^9, 3.673179104703719*^9}, {
   3.673415053109758*^9, 3.673415069168283*^9}, {3.673436278736169*^9, 
   3.673436292696931*^9}, {3.673436336923253*^9, 3.673436338273733*^9}, {
   3.67343637332915*^9, 3.67343637734184*^9}, {3.674017340727767*^9, 
   3.674017391977125*^9}, 3.674017468595125*^9, {3.674017512411669*^9, 
   3.674017541958827*^9}, {3.674017596957387*^9, 3.674017611338052*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dragData", "[", "input_", "]"}], " ", ":=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", "3"}], "]"}], "&"}], ",", "input"}], "]"}], ",", 
     "00"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"liftData", "[", "input_", "]"}], " ", ":=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", "2"}], "]"}], "&"}], ",", "input"}], "]"}], ",", 
     "00"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"valuesOnly", "[", "data_", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Delete", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}], ",", "data"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"myImport", "[", "list_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Drop", "[", 
         RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
       RowBox[{"Import", " ", "/@", " ", "list"}]}], ")"}], "*", 
     RowBox[{"sizes", "/", 
      RowBox[{"(", 
       RowBox[{"sizes", "-", "1"}], ")"}]}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"correcting", " ", "factor", " ", "at", " ", "the", " ", "end"}], 
    ",", " ", 
    RowBox[{
    "because", " ", "I", " ", "did", " ", "not", " ", "incorporate", " ", 
     "the", " ", "real", " ", "size", " ", "of", " ", "the", " ", "sphere", 
     " ", "in", " ", "the", " ", 
     RowBox[{"code", "."}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dataFrequency", "[", "list_", "]"}], " ", ":=", " ", 
    RowBox[{"Abs", "[", 
     RowBox[{"Fourier", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", "list"}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maximaPositions", "[", "list_", "]"}], " ", ":=", 
   RowBox[{"1", "+", 
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{"Differences", "[", 
       RowBox[{"Sign", "[", 
        RowBox[{"Differences", "[", 
         RowBox[{"list", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
      
      RowBox[{"-", "2"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"minimaPositions", "[", "list_", "]"}], " ", ":=", 
   RowBox[{"1", "+", 
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{"Differences", "[", 
       RowBox[{"Sign", "[", 
        RowBox[{"Differences", "[", 
         RowBox[{"list", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
      "2"}], "]"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lastWavelimits", "[", "data_", "]"}], ":=", 
   RowBox[{"Flatten", "[", " ", 
    RowBox[{"Take", "[", 
     RowBox[{
      RowBox[{"maximaPositions", "[", "data", "]"}], ",", 
      RowBox[{"-", "2"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"lastWavelength", "[", "data_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Differences", "[", 
      RowBox[{"lastWavelimits", "[", "data", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lastWave", "[", "data_", "]"}], "  ", ":=", " ", 
   RowBox[{"Take", "[", 
    RowBox[{"data", ",", 
     RowBox[{"lastWavelimits", "[", "data", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dragResult", " ", "=", " ", "5.8190"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"liftResult", " ", "=", " ", "0.0110"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"schaefferTurekX", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1314720", ",", "332640", ",", "85140"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"schaefferTurekDrag", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"5.8190", ",", "5.7740", ",", "5.7890"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"schaefferTurekLift", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0.0110", ",", "0.0030", ",", 
      RowBox[{"-", "0.0060"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"means", "[", "datas_", "]"}], " ", ":=", " ", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Mean", "[", 
        RowBox[{"valuesOnly", "[", "#", "]"}], "]"}], "&"}], ",", "datas"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"liftMeansCumulant", " ", ":=", " ", 
   RowBox[{"means", "[", 
    RowBox[{"lastWave", " ", "/@", 
     RowBox[{"liftData", " ", "/@", 
      RowBox[{"myImport", "[", "cumulants", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"liftMeansSRT", " ", ":=", " ", 
   RowBox[{"means", "[", 
    RowBox[{"lastWave", " ", "/@", 
     RowBox[{"liftData", " ", "/@", 
      RowBox[{"myImport", "[", "srts", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dragMeansCumulant", " ", ":=", " ", 
   RowBox[{"means", "[", 
    RowBox[{"lastWave", " ", "/@", 
     RowBox[{"dragData", " ", "/@", 
      RowBox[{"myImport", "[", "cumulants", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dragMeansSRT", " ", ":=", " ", 
    RowBox[{"means", "[", 
     RowBox[{"lastWave", " ", "/@", 
      RowBox[{"dragData", " ", "/@", 
       RowBox[{"myImport", "[", "srts", "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"cumulantSizes", " ", ":=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Drop", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
      RowBox[{"Import", "[", 
       RowBox[{"#", ",", "\"\<CSV\>\""}], "]"}]}], " ", "&"}], "/@", " ", 
    "cumulantAuxiliary"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SRTSizes", ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Drop", "[", 
         RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
       RowBox[{"Import", "[", 
        RowBox[{"#", ",", "\"\<CSV\>\""}], "]"}]}], " ", "&"}], "/@", " ", 
     "srtAuxiliary"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"cumulantTimes", " ", ":=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
      RowBox[{"Import", "[", 
       RowBox[{"#", ",", "\"\<CSV\>\""}], "]"}]}], " ", "&"}], "/@", " ", 
    "cumulantAuxiliary"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SRTTimes", ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Take", "[", 
         RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
       RowBox[{"Import", "[", 
        RowBox[{"#", ",", "\"\<CSV\>\""}], "]"}]}], " ", "&"}], "/@", " ", 
     "srtAuxiliary"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bothLiftMeansPlotReady", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"sizes", ",", 
        RowBox[{"liftMeansCumulant", "-", "liftResult"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"sizes", ",", 
        RowBox[{"liftMeansSRT", "-", "liftResult"}]}], "}"}], "]"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bothDragMeansPlotReady", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"sizes", ",", 
        RowBox[{"dragMeansCumulant", "-", "dragResult"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"sizes", ",", 
        RowBox[{"dragMeansSRT", "-", "dragResult"}]}], "}"}], "]"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bothLiftMeansPlotReadyVSGridWithTurek", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"cumulantSizes", ",", 
        RowBox[{"liftMeansCumulant", "-", "liftResult"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"cumulantSizes", ",", 
        RowBox[{"liftMeansSRT", "-", "liftResult"}]}], "}"}], "]"}], ",", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"schaefferTurekX", ",", 
        RowBox[{"schaefferTurekLift", " ", "-", " ", "liftResult"}]}], "}"}], 
      "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bothLiftMeansPlotReadyVSGrid", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"cumulantSizes", ",", 
        RowBox[{"liftMeansCumulant", "-", "liftResult"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"cumulantSizes", ",", 
        RowBox[{"liftMeansSRT", "-", "liftResult"}]}], "}"}], "]"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bothDragMeansPlotReadyVSGridWithTurek", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"cumulantSizes", ",", 
        RowBox[{"dragMeansCumulant", "-", "dragResult"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"cumulantSizes", ",", 
        RowBox[{"dragMeansSRT", "-", "dragResult"}]}], "}"}], "]"}], ",", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"schaefferTurekX", ",", 
        RowBox[{"schaefferTurekDrag", " ", "-", " ", "dragResult"}]}], "}"}], 
      "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bothLiftMeansPlotReadyVSTime", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"cumulantTimes", ",", 
        RowBox[{"liftMeansCumulant", "-", "liftResult"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"SRTTimes", ",", 
        RowBox[{"liftMeansSRT", "-", "liftResult"}]}], "}"}], "]"}]}], 
    "}"}]}], ";", 
  RowBox[{"bothDragMeansPlotReadyVSTime", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"cumulantTimes", ",", 
        RowBox[{"dragMeansCumulant", "-", "dragResult"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"SRTTimes", ",", 
        RowBox[{"dragMeansSRT", "-", "dragResult"}]}], "}"}], "]"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6725823422599573`*^9, 3.672582435965885*^9}, {
   3.672582483626233*^9, 3.672582580297577*^9}, {3.6725826157311993`*^9, 
   3.6725826514299593`*^9}, 3.672582733238015*^9, {3.67258285577174*^9, 
   3.6725828768205357`*^9}, {3.672582915434342*^9, 3.672582931154652*^9}, {
   3.672583051520362*^9, 3.672583143445752*^9}, {3.6725834005312138`*^9, 
   3.672583443083358*^9}, {3.672583723379056*^9, 3.6725838574641533`*^9}, {
   3.672583942786408*^9, 3.672583952521698*^9}, {3.672584061564065*^9, 
   3.672584103662696*^9}, {3.672584260547956*^9, 3.672584260693316*^9}, {
   3.672584337701766*^9, 3.6725843395023746`*^9}, {3.672742877666991*^9, 
   3.672742909546678*^9}, {3.672742969026902*^9, 3.672743080769724*^9}, 
   3.672743136959605*^9, 3.6727432439745407`*^9, {3.672743275275635*^9, 
   3.672743351439465*^9}, 3.672743512564859*^9, {3.672743580048732*^9, 
   3.6727435968908243`*^9}, {3.672743729873472*^9, 3.672743747047391*^9}, {
   3.672743873490389*^9, 3.6727439252413282`*^9}, {3.672744110911214*^9, 
   3.672744184442321*^9}, {3.6727442495330753`*^9, 3.672744251723825*^9}, {
   3.672744452428982*^9, 3.672744462862565*^9}, {3.6727445693917313`*^9, 
   3.672744577239976*^9}, {3.6727446198354807`*^9, 3.672744631925819*^9}, {
   3.6727447879928637`*^9, 3.672744803917776*^9}, {3.672744857740005*^9, 
   3.672744888976384*^9}, {3.672744971699565*^9, 3.672744989726317*^9}, {
   3.6727450621841087`*^9, 3.6727450730437717`*^9}, {3.673092323618346*^9, 
   3.673092355657235*^9}, 3.6730924225991573`*^9, {3.67309470161208*^9, 
   3.6730947930644617`*^9}, {3.673095397154846*^9, 3.673095497779792*^9}, {
   3.673095586671095*^9, 3.673095706470841*^9}, {3.673095740710279*^9, 
   3.673095807921278*^9}, {3.6730958656464243`*^9, 3.6730960781827183`*^9}, {
   3.673096127297567*^9, 3.673096208592517*^9}, {3.673096242238391*^9, 
   3.673096255410585*^9}, {3.673096314961526*^9, 3.6730964262761183`*^9}, {
   3.673096465780074*^9, 3.673096551988276*^9}, {3.673097591598633*^9, 
   3.673097714353991*^9}, {3.6730977999188643`*^9, 3.673097814949197*^9}, {
   3.673097852418723*^9, 3.67309790115189*^9}, {3.673098297598981*^9, 
   3.67309831155046*^9}, {3.673098381935115*^9, 3.6730984201530523`*^9}, {
   3.673098542652975*^9, 3.6730985969749403`*^9}, {3.6730986357672997`*^9, 
   3.673098639644178*^9}, {3.6730986763263683`*^9, 3.673098721952839*^9}, {
   3.673101564452183*^9, 3.673101669566852*^9}, {3.673179147293709*^9, 
   3.673179148717812*^9}, {3.673253877271194*^9, 3.673253878480727*^9}, {
   3.673254859015711*^9, 3.673254874751411*^9}, {3.67325506261771*^9, 
   3.673255076321726*^9}, {3.67325523332264*^9, 3.673255274439952*^9}, {
   3.6734145504137297`*^9, 3.673414552271616*^9}, {3.673436439431796*^9, 
   3.673436459755628*^9}, {3.673437019236994*^9, 3.673437032234561*^9}, {
   3.6734374249199343`*^9, 3.673437532737412*^9}, {3.674017030297476*^9, 
   3.6740170844144506`*^9}, {3.674017122237687*^9, 3.674017130657907*^9}, {
   3.674017165185038*^9, 3.674017283335772*^9}, 3.674017332745994*^9, {
   3.674017402261281*^9, 3.6740174037329597`*^9}, {3.67401812382329*^9, 
   3.674018226542274*^9}, {3.674018313705906*^9, 3.674018324656341*^9}, {
   3.674018355825086*^9, 3.674018432603384*^9}, {3.674018466635713*^9, 
   3.674018599317491*^9}, {3.674018846869315*^9, 3.674018852726598*^9}, {
   3.674019115720752*^9, 3.674019210422365*^9}, {3.6740252510721292`*^9, 
   3.674025286910527*^9}, {3.674025317741754*^9, 3.6740253465033712`*^9}, {
   3.6740253817515173`*^9, 3.674025411280015*^9}, {3.674025884833675*^9, 
   3.6740259799792213`*^9}, {3.674031006764847*^9, 3.67403107155962*^9}, {
   3.674031101617429*^9, 3.6740311283744307`*^9}, {3.6740311724622393`*^9, 
   3.6740311830187683`*^9}, {3.674031279798613*^9, 3.674031349102005*^9}, {
   3.674046485361918*^9, 3.674046486711788*^9}, {3.674046678322927*^9, 
   3.67404667855732*^9}, {3.67404692394934*^9, 3.674046924733447*^9}, {
   3.6740470360704403`*^9, 3.674047036229011*^9}, {3.6742075458067408`*^9, 
   3.674207559716716*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nr", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"liftData", "/@", 
        RowBox[{"myImport", "[", "cumulants", "]"}]}], ")"}], "[", 
      RowBox[{"[", "nr", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"liftData", "/@", 
        RowBox[{"myImport", "[", "srts", "]"}]}], ")"}], "[", 
      RowBox[{"[", "nr", "]"}], "]"}]}], "}"}], " ", ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<cumulant\>\"", ",", "\"\<srt\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6731791677427807`*^9, 3.6731792456563168`*^9}, {
  3.6731793224885817`*^9, 3.673179332835672*^9}, {3.673179379895137*^9, 
  3.6731794204450912`*^9}, {3.67325403668749*^9, 3.673254042655818*^9}, {
  3.673254690928667*^9, 3.6732546949033947`*^9}, {3.673254728783787*^9, 
  3.673254742606955*^9}, {3.6734146443442163`*^9, 3.673414705168442*^9}, {
  3.673414736134857*^9, 3.673414742906065*^9}, {3.6734365487085333`*^9, 
  3.673436635091669*^9}, {3.673436707805883*^9, 3.6734368174036007`*^9}, {
  3.674019677127529*^9, 3.674019692820212*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
gTetSU/HC8dGXRt7zpD09L3wvWG3zZcNpGfqBZ6g7Hf4XNIz98KZFc88bw8m
PVsv8H+9v2DylvGSF9oefPJKu0T84++FFceknydZMX7yQuLNi+ePraDnyffC
6ctbzo/rYbzoBfG2KQ8LbrLxE+o5la+OO8nGzwvD3myIvzuVjZ8XnnoGhGq+
YH6fF5QP3XlvYkPvS6kXomd4G66VYf6fF6wX59T/u0v18AYvTNN6PbVCl/G0
F3LMrAXf2+j97PKC6EvVG7Y+zF/yRsqQCYdTJhL/DPeGXvf0a3o7iO8lvTH0
l5+f+1Hyj2S9kbr40X2Vs6xe6I3czD9htb59lH/emNH5tLM9jOWfN2QLTxo2
RZC/C2+4nQ+6tiyK9TN4o8HdsmNfRDflnzdabgetfh72m/LPG8+0prgODyA/
yNQbyRlfdoW7/6L50xtPJC4//25H84utN7Sz5qyIMKf6n5s3Xkw//mesCfnf
/t5IV9yxokGP+T/esKv/eou3g/Z3fG+o3H86cnNoK82f3qj+L8hzmed3mj+9
cdsh/3yf41eaP73xK3K48rmz5PfkeuNvqs3++W6faf70Fs6P0uOSgmm+LvWG
RvwwZ/HkOpo/vSFlIblGL/8jzZ/esI+wz5v24R3Nn95wvxlvs0mL6nNdwvj7
w0+NrGD1OB8s+vvEd419Gc2fPshLWq53YflrGj8fHFn3r/fvwmc0fj4Ynb69
7tPCfBo/H5wwr/PZ1XSPxs8HZx/uCyj8d53GzwffQh7NzbwqoPHzwXcRP8cS
czfiFx+s87xbLKJ9gfjFB5cF/TskBFnELz7orVmWanYih/jFBw6mC7f81nxE
/CLUVz07vtU5n/jFB31+4z436T8hfvFB9ZUfY83eFxG/+EAmKezkDNEXxC8+
qDLkiPY9LyZ+8YHtqb/nxi55Rfzig9/Sojzdaa+JX3xwiRe3X8n6NfGLD36O
kd7XGP2a+MUHc0bLaNgEvyZ+8UHwn8qk7ztfE7/4QP7R9gnNL14Rv/ig6+kD
F0HkS+IXH8gVhYdeHVRM/OKDGZVv2gdLPCd+8UH+h4i3Vx4+JX7xxeQMnbrf
4wqJX3yxU/LClx1j88hv8sXr+5ctU488HNCTFbLrGqe4+H+3yH/yRf2oN54P
318d0FPyxbuKuq+BTXHkR/ni8vBuyae15J/BFwe9xveNl7lE+eeL4PkpVjMj
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
FlrrU0ffVCG/JzMWn6z75Y6eJL8nOxbjrNcPkbQkvydHGE/jRg7Wk9+TGwuP
Z5p7Yz8Qv+THwj/2mW/9hlryX2LR0yP6rc++lvyXWEzuVY6rt6kl/0U4/gfl
7l5bU0v+SyxWV83ujn5dQ/5LLFosv0/6voD0PsZi6MiwA+P2VZP/Inz/ztm/
jdhB9bjmWMTM2/58tNRb8l9iYWNxqE05mepjHbHYfD658NUQVv+LRSp3cfVz
FaqP9Qqfb+jT4XIq9DxF+DCX4Yc9FKPzZ6J8yJ6Xydy/jc7LDedjnfGSkT4r
84k/+WhcprLkZsp94k8+zvmUrJ6/KJP4k4/3l14Me34smviTj3SF8qrnerGU
f3yYyZ3Y96g6i/KPj6r+p0ecKnMp//hQWXT99NghTyn/hH/WCklKOf2K8o+P
D++3Z+4JIp5fysczp0XOq53fUP7x8dTy+pmLfjWUf3wkb1aUuHyZ7gfS4GP2
i7aatE52vykfl5rXK+6SpfMGWnwo+Mg5b91G923p8JE7aeOWIG/ar+wV6sWU
bh5R+JXyjw+xMe9fZY+ifDfkA9uC5N306DyYqfDnCpt75cvbKP/4qFFY8Szg
L7v/hw9RKcPVVXNZ/Z0Pi92DdvjqsPOofOjNNLYTd/5F+cfHk2Wbap5fYOc7
+PCYuCBowyuq93vx0f95f0HzL7o/0Z+Pt9da5svL0Pn2YD4KTz2YYLOK3Y/I
x91/9a809tF+M5KPVjGvd6Os6PwXn4/x0/x2avjRfJ0o1Pv46D/TaHZfDx+3
MkR5VjupHzSVD9XTdR4pZVQPyODDteVOh68O9U9kCp/f72L32mLW/8xHzmvd
s0c0Wf2BD/Ul6V1fb7P6Ax9qB3aIKcvT/j2fD5NPr58P4rHzXcLnpyFxSf4P
1TuK+Qj0qd5htZ+tf8LvH3ar9Xo2+QWVfBTJZ6jfGs36b4Xv58jh1/UO0Xr7
kY/6NVLHTqXTetvAR+e8tONl7cRLzXzINRVdOqzC+l/44Kt3Sww1Z/0vfMzb
x4uNPkd+SBcfe062G4i+Jl7q5WNYzNqwxd3EEyJxmDm4O1ZKhvkvcZh3/Kt0
xBLil+FxOCYeWZ6+hfhldByunGqu2b6P+EUyDlvGbz9ub0T8Ih2HrAuzWmeb
EL/IxsFme8U/3YPES9PjcM31sZ7kLtKbJfzzmWNP9dVJTyEOKq8k5NcqkJ5S
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
wvx/Moz4Y5gcpEV4N1yGU9cylly6SuvloAyNJr3+zFpO+DpShv3TR0fPeU35
nigZRuoMy/uxlfKR0dx4K7rOP/qL1TuXYYz7SPmcfYTnY2Xg3XQzWdSF+LE4
GZKftL2r3kf7IV4Glbvmt/xaKX5I4OY72/ii6TvSQyfKEFTzTPXgI1YfiHs+
uUSj5jLx08kyPJ8lrMg/zeoFcb93J+n+lUDK7wq4+Txo927RCtrvIhkGjpIs
/jOe/KISGbrGrtZ2/0N6aLkMqlk+G3qVk98iVYa+QemyPSLi38/LkHHuc6d1
IMVjmTL0GSk71o/VS8zi9o9FXrD9cDrPsmWojX4yaHM19Uu8zO1vjRdF+yM+
U/zHjT/mRtxQk48U/8ngs+XmvrWNjRT/yXA/vWL3ZmEDxX8yDL7kxd/mSfn5
Am5+K4eeijGm87qQG/8P/3p9L/L73pUhbNqcNvXKaor/ZPgv9Hu36RfIL1Mi
w3yjeyrLZE8o/uPW5zorpbrdDyn+485b35/3F78i/qFcBlHqAUHxoXyK/7jz
xbfY3P1TFsV/Mmh+9BM4+Z8k/k8Gv9XPToz3PEf3H7feNu4aGfWF+inUyrAx
yTtq4dmbpH/hns9mt6nrMuJX6mXI3eQzxGAn1Yt+K8O+F3v6vp5N9WsauOdf
4FfXp4r6gTbJYHOqdcy9avI7fZRhXI7OJb1M1p9dhsDDX1ZhJemFm7n7IntM
8pJbxB99l2H46jdepzoIT7TKkHZ/8KCT3Sj/0ibD90Cj3LJK4sd+c79nYmj7
aTvzu8twwLL2XNYLwi+dMiS4LtfvplpL/J8cO0UtzdW9iR9TksM6bZ/2mseE
l7rLEWvzJlaxkfJLynK4xXbaj7tF4/WWg6/sNGDmB8JnKnLcr6i093jF+pXJ
MfqiV9sSPum91eQY9Tp9Bd+I8X9ydD3mfmb6Ueofoi7HmtsntFpzKX82hPvv
Q2dGPrlC86khR1uhmdkjFfLjacrR492gnllLi4n/k6N3YvzDAhOq7z1KjmtH
p5RaxhC/qSNHzJoepQP7ZBP/J4ey/6Fqg1MpxP/J4fR2SYqx5wnKf3K///5B
psyQ/IYGci7ed3jdpVc+5T/lCD/u8OTjrCLKf8pxr3zwxOFZZZT/lMPMzyan
fQr1kzeRc/dd52GfcU8p/ylHZ8/ur/ZMp/0wk5v/kMjFFi7kpzSX46UgaNTL
h6Svs5Bj7ZTVde2/qV4Q5JhhPHrXDkPip+fKoXvO1nXWZopX5snxWO2L05K0
D+R/kGNfSWtezA+qh7FYjo/bJ1S0WJFf1FqOywEFKVNLSD9oI8f+5jEGjT8o
n2wrx5Jw3cLDo4l/XymHULLmTYwNxWN2coxTjNi9MYj6x6+WI2j0yNEhIjrP
HOS4HSLxWlrG+mfIEbi7qnNuG+kjneWIN3/zt1yT9NAucszPnjZjmyXpC9zk
cG2d5hntTPGmuxwqeV6Hzu7upPhPDquJIToax+i83ixHVP7LE0E88vv6yLGr
NN5wxGqm/5Qjet8Jk6ZnxAf4yeE8++XljWvpftgux5S94oE2FRRPB8iR2n/f
yk1LWX06OR4tzV25J5/uoyA55H6X3y02Yv1SufcNetaWkkTxe4gcb+72S1uo
xO4/OW6+T4jo587uPzmK3jQGF+azfqpyGFulac4axvzv3PxcTU5Z4k33bZQc
myzce91j/T2j5ch/vtj4WCfrd8U9/+q6xhBLut9jud9X/u9XQBDTv3DvP+i5
xdp0pn+RI7nmWVa/WqZ/kaNp5Jeg8B7M/y7HrXKfBt445n+X48uFs+GOrB9G
shyJ5yYMEq5l/nc5biRVnvL3Yv53bj1/Clicv4353+UITXc8ecSf+d+5/bto
wZCnW5j/nXufJxOiha7M/86dPzydB7+WM/+7HFkZH/PqWL2gTDn8Zi6dt4nV
s86SY3Fd5tSUVsb/cftFc/bc0/cZ/yeHYO+BX5tOM/5PDtvCm3x9V9YPlltP
rlXmP3QJL+XJ8SMq37Opjvnf5ahJClild5rwZwF3vjjPyipbzOpFyzHg5h5e
zzbm/5OjZ2bXhF9nmf9Pjlk/RqwssSS8W8Ktz7/H76VWs3qa3PPdvd/v3g7i
xx7JsW742sW2PQlfl8vhtaLHmcAEykdWyHG43a3fttG0Pqu49y17dXSbjPD8
czmGH5palmFAeL5ajqVLvs3YnEr7oVaOkpRfb6vG0X6o477fxBFdfeZS/FAv
h1ZOdljkZNafT45ffqtS9g+l/dcgx/aUZL9n/6N4pUmOsCEjpINfkB76I7e/
3o3zuHGJ+R/kmJabO2DdUeLDm7l/Nw+dsMed9IPf5Tj184+aZAblk1vlWOU5
rXqrCp0vbdz5E/VpmEctxWO/5Xjy4nzS8Ayq59EuR073nTN0wsjf0SlH/9Dk
iP52xPd3UWDB7l76n22pXqKSAs+0xDZPO6ledHcFjNR0bvbIpP7xyty/R4bX
pWyiemy9FTCbd+Vgyfh3FP8pYO+43DztWz3Ffwq0dK8/5VZYR/GfAuMXPv4w
ZB7VSxyowK+Ks777hhIfoK7AmMEmfXV6VFL8p0CX2HXjRvR/TPGfAq2S4nUt
W6kei6YCA2b/Wubf5TbFfwqsMOvdU/P8FYr/FCj5pSv4+4T0rToKbNRY7+3Y
5zDdfwrcEI3Y9z4pg+4/Ba6eq7u29xLlC/QV+NBtdNnr3bdJ/6LAea3SprAb
90j/ooDl9+yFn2WlpH9R4NOVafvLhz8m/YsCZ3XLVSdPoXrRJgp0P3l5d9gQ
pn9RYIlgs9aL+5QPmamA5L+BfT2WUL93cwWGDNf19z5FeMJCgYMZIU3LMsmP
DgXe+h+8eSKe9MlzFcjdqt7/qRXzvysQGxhY9iSP+d+5+XG5muuqRHroxQr4
TM3T2zmA+DFrBe5dPHZe+yPhJRsFwm5V3j98jPJLtgok5Z+z7/qX1WdU4OPA
3La3M4kfs+PeZ8qivVmgekGrFVhsN9S4izrlsxwUsNYTG4Zks/4ZCkxU9z/V
rEP+OGcFvnu0fpvhQvWCXBRotLZYb+1L+nI3Bd5HTq81tqZ6Qe4KrFM/Nmxk
Wwnxfwpgw+8rBh13if9ToNeds6GaqbeI/1PgT/eHPgtVrhL/p4Cst4XKTjMZ
8X8KCFNXluzb50T5TwXyygXls0elUv5TAb/e037ennuN8p8KqMlMd5+9WUj5
TwXuOy72shn5gPKfCrjNurc54OVjyn8qMKO9c4RHcSXlPxUQC+y+nnn8nPKf
Cpi0RasYfie++KACy8NzdNUHv6b8pwL8aapviswp3xqlQEZ6l7JJW2j/RSsw
+r3ntTli8m/GKJDQkSv68Y7qBcUqsNpH/MfckPkfFDDVaB/UbQ/x4fEK+F/n
TUnyoHpBCQoEp/nsf3WM8smJ3Pfz6P1rzjU6X5IUKK9/u8z0PflTk7n5mr47
yWAQ6aF53PpY+CM2wZL8HQIFppadu/p+E/H9Iu68mdyZHnucxX/c76VruHe7
yurJKlDqwF+fVU3nZ6oCxcMedx3QQf7b89x+3fCs8gTrn5qpQH3oovJMI9JD
ZynguWOS4pUV6RmyFfgxX9i3dDzTfyogV2selp5GfEAON5/XttqvNKT74ZoC
D2/IEvYoKJ7OUyBi9znbJl1WH1oBY88t190SiX8oUODMiI6OtD6sXrQC/d8G
z43dRfH7XQX+5+b5qepVt/z/A1fFkbY=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw8fQlYjev3dnNC5imZZahkiDIkbkTmjkxRaJRSNKN5noe9d7XbQxMylDkk
GUplSEJJSoNUaCShNPr272u9/3O5rnPt02nf73qfZ611r3ut5zHT9KS+hYSY
mJjTMDGx//27MsNW9Gc3eosuxTfyerNP/P//sBsXNN9LeCn1ZYv9/3/2ILBq
WovyxP5sjtIW0Z89SOD4Ssk092fP+d9Hzh6skzd0Csnsz773v6+r3AOjcV41
B3z+Zf//HyvthT1PTyNkz7/sQby9CL93qTdKXSxnEG8vNqiWv871FcsZxNuH
hMW4NeSeWM4g3j5sdZzSFzZOPGcQbx9WjlJT3GghnjOItw93trYcn/hcPGcQ
bz/OC40OnK4XzxnE24/Sr3wTlrkE4e1Hc3J52JRwCcIzwPzf0kVX8yQIzwD7
f17+p7RAkvAMIHvqkcxec0nCM8CGGYFPmlMkCe8AKs8fqz5aIUl4B/Dfp9BZ
xSpShHcA9cd3T/+qK0V4BxFwcmVQeLIU4R0EP/DicpcCKcI7iFZVeQf3ASnC
O4gF0wKWpqlJE54hMocFNjw1kiY8QwjidhhvC5MmPEOwe9mNe29KE54RzvdX
DBv2QZrwRJ+zjz0/1S1NeEZYx9fq65goQ3hG8OP9vRi2TIbwDiFOt3N4wg4Z
wjuEgxOLh4iZyRDeIbT0H9k5ykWG8A4j5/1LDZMAGcI7jDlh5dynUTKEdxhs
r+m7ZsQxeIeRd4llaytk8I6gItV2RaSQwTuCHTqtPm1xDN4RJNw37X7GYvCM
sTozwW5HIPP7xniYo9CucprBN8b8ZU11jy2Y7zPGskMBCvZ6zPMYQ6vM93a9
BvP9xsgOaNLymcQ8nzG8Tz8tGdnFvE8T2Kt8MRMvYdbDBGE7NYN3pjLv1wSn
BeLzfrsz62OCA1XmnHE7mPdtAsNLexsDFJj1MsGrXccjdtQx620CH52uTSmX
mP1iCvlF4zecsZIiPFPE9MmrvZrH7B9TdF8tPlVcx+w/U9zvcx/gCpj9a4qG
w9NuTdeTJDxTVFy+kxUixuxnU3y8meHSep3xBzM8qA1k7T0oQXhm2GW0SaVa
gvEPMyyY++dVwmXGv8ww9lTq0+vbGP80wz9Jk6UqrYx/m2F/CYo2h4oRnhlG
JzpOlJ7L+Ls5IqXYUmGeTLwwx63HYbckrg9QvDGH8ro8tml5P8UPc7xjSZoH
/Ouj+GOOhsivlZmz+yh+mWPu0ifVbRt6KR6Zo7vpYl+LSQ/FMwucPbZYrdqj
m/As4P3m9cDv2L+EZwGjddojG691EZ4Fdu87Z/kmr5PwLBDPio6a8+EP4VnA
1VVl9O2W34Rngdl393+82f+L8I6CvaYoInrUL8I7iiONUU8uzeogvKMY7d70
+5vGT8I7ijW549m9m9sJ7yjkDlvebcz6TnhHEbY6y2PWt1bCOwrH20HHNce3
EJ4lqoes6kvd3ER4luiuKKis8fpGeJbQtjz/pOPhF8KzxPpFmWwtsQbCs0TQ
+0bpU5vrCM8Sj+Q2SA0V1hKeJXrPufst/FJNeMcQduPwjeTLHwnvGJC39aif
xwfCOwaxF0kuLpalhHcM+9dabP5rUkx4x+CZ7TV+389XhHcMrZ/MXSXXPye8
Y1iSyxbMf/6E8Kzw37/pXUPE7hOeFfYk50f9d+sa4Vnh41Iry0fHYgjPClPE
LQIE2ay1g3hW2DH8ZW2kZNraQTwrvJzV/Hu1yd21g3hWuNu5Qvb1+kdrB/Gs
8cms51Llrty1g3jWiB46nHP/ydO1g3jWSPBsKev8/mLtIJ416pfEpqiWFxKe
NUb4peyE+2vCs0bSlK7SUpu3hGeNpo9Fo66fKia843hnpNBqcLiE8I7DVDp7
x74Z7wjvOCZdfLNr8qN3hHcc6um2xw2XlRLeceRO+bGiPKCU8I7DQaZ385Fb
pYR3HLVXGxWzM0oJzwZPA9SG3ogtJTwbBEBy/oKdpYRngxt3BeuNaxk8GyyS
HLVrzfZ3hGeDjoUBSu/YJYRngwqlLrUTt4oJzwa3gsyvrL/ylvBscXRF/z+5
f68JzxZVtjffbDn0ivBsYZ4fkjLLoYDwbCEX9LLgyJpnhGeLyvXK3SPycgnP
FtLXJ+3MlHhMeLYwqC9R+P37LuGdQI3EApU12WmEdwJbIm+v0pvIJjzRZ2mL
PTf2xtJ+OQFnxUaTyqrrtD9PYL0ZaqLEs2h/nkBqSQj/UEAu7c8TcHLFlJL1
L2h/nkSrxN+yRs3XtD9P4rf1h+jLi0pof56E3ZW+inSj94R3Eo02qhkWZ8sJ
7yRWP1g72ayvkvBOouj39bdbbD4R3kkEtR60/nnqM+HZYWPj25xX6+sHf3+M
Hc5e2ntr6oQvhG8Hg/+ePprx8+vg92naYft/ebPmv2uk57GDX3FmnNOD5sHv
N7SD5rYsr12prfR8dlBJGz/ju/D7IJ63HU6fn2a1ZQsTn+zwbmVs2MJNPwfx
Uuxge3NHsY5OBz2/HRa5hb0dt+HXIF6BHXBs4N+K9Uy8tIP5G60NGuv+DOK1
2cE+6PvZC2s7yT57mEamSY3S7iL77FHx7/jWUSv/kn32UNgyI2Hl0m6yzx7f
Ex/3z1ftIfvs4TI/f5PbDMoHhvZ4kJI+t3RMH9lnj27tvgfvxfvJPtH35bE9
5rYx/NYeszpXS1mWDpB99lB+dPHe2nv/yD57SCQve3dxK/HVAntsuz0Zk+4x
+c4em7QPKuTPoHzZZo9PvxXzzgSJU/5zwOoF955Kt1D+HOMAu2LeU+1tTP51
gN5+oeyvS8RfNR1waEkau1eUvwftc8AZ1QkxS/dRPjd0gMfiy/dOX2L4gAPK
1cIvpf2WHMTzdoDYRJbhDW2GbzrgZ2NyhY0v8YsUB4zRnbu3IJfhrw7IS7bT
vDFAfKPAAQGKJWoymtJknwO29bZn3j1GfKfNAefyoxZc4jJ8yRHL9ddvy8sm
/jPGEf3Nf5x/1TP8yRGH7n/SmS1J/EvTEYrFbS8wleFvjrDPK9fXVic+ZugI
4Rf1t/LrGT7niFVjlW6nbSc+6O0ItcmyDSP1GX7nCN/9esar9Ykfpjhiddoa
vyU7GL7nCL1ntms61hNegSNW8j+d9F3K8D/R83VIRn6dRnhtjniUPcVjtjTD
P51QpO9yes1Xxj4nbNA2N9POZexzwm6nLZbz+MT3NJ2wMuahvfRxhi86AZaO
iXXL6X0aOiHvrCDj1T8pss8JSr/n2pbmEh/0dsKPz0uPyvsw6+eElrzQ4ZGr
mPVzwl7DY4dP/mD4nhNyvjRHv0qi/VLghEdT/b7mbmP4nxP+SYSq2v+SIPuc
UPvgz5suLsMHnXFL2yb1tKYE2ecMbdYZmYklTL3ljLBf6zK7rMTJPmdUyryc
sm6Aqd+cEXLh+SjFKPIHQ2fELFg54sYUMbLPGSnrLz3V2/mP/M8Z6mr3D5sd
GiD/c0bdhZkXfh3tJ/9zxtkrVomHjjN8zxlPNx9XEz/eS/HFGS0esgfXHe2h
+OKMmbvm7Qg41E3xxRlOrVu7V+z6S/HFBe0jzIa+XsfEFxfM+vjj7YNFnRRf
XPDLxfaolyLxPU0X/JF5aCCQ/k3xxQWrG71c2N87KL644M30rrvNZQyfc4Hc
Vf9jqtntZJ8Lxnt92XdV7wfZ54Jiz38GpbPayD4XzOk4qZH/t5nsc8FZNB2z
LqF4XeACjFsqefPmV7LPBfZV28Z7xDSQfS7wONvPf+hZR/adQrmP6nVju1qy
7xR60k4ZvCytIvtOIaE+cu25ynKy7xRSi32WWnWVkn2nIH/ngcs2lWKy7xRi
y+6YNrW+JPtO4ZCnfpz0wzyy7xR+5tls+hx2n+w7BV5XSHnYystk3ym8XrPF
QKvYivL3KRSWTWyRM04bzMcFp7Cq16tVR+I+5fNTuHFgsfyCGbmDfKDtFH4l
OuoWODyn/H4aT7oOsK66vBrkB2NOIyhCYtijmLeU708jr/r878P5xE80T2Op
ZZJC5wuG35yGrrxjgsbZskE8w9N4tzmm6f22cuIfp7FBtm/vuecVg3jepzFu
y1X7wLGVxEdO4+vNx02ChVWDeCmn8XZBjmDBpGqy7zSGxRxPevSmmuw7jX3O
e4vF99aQfaL/f1JP4ftLNWTfaWRe6ihSf1FD9p3Bo3n9srMzasi+MzD66PPi
nn0N2XcGAfNCtkj2Ep7mGcik/yibqE94W85A+oy65PBTVWTfGYirRN+XsK4k
+84g543FbQ3Vj2TfGbA8TyqIPSgn+86gdKXJ2G8KH8i+M9if4Xo2cfN7su8M
Lj9Pvy+3mfhpwRkUB2oHaigw/O8MPI4r4KxrEdl3BlsD80vXHn9B9rliwXbn
IV9l8sg+V/yabepklZxF9rnCf61Bn9S8a2SfKzYcrBTOyvUk+1whWzNkjv/Z
i7Q/XVET+2PUomn3aX+6ok/n+ibPB8z+dMXKrazSdyqFtD9doWum90zOtpj2
pysyi+2nd5i+J/9zxWe7Nj9d5wryP1dMNj9iKnaumvzPFdFiR147/6ol/3OF
zhU37ZoZ9eR/blA4fGOZvMEX8j83TMjv6y6P+0b+54YFVTa9Mz81kf+5ofjK
UpnyBa3kf26wbTss2+f1nexzQ1agbc/r4+1knxta929NPs7/Sfa5IfXGPg+T
Fx1knxu0wyfyVv2l+jPFDdkZTsln5jP1qxtU53zXjTPoJPvcoK+TqCMe3EX2
uaGpRXmqYsZfss8NKiaj+ajrJvvc8fKvt2XBsF6yzx1GeuNt5dX7yD53fDZL
krfa00/2ucPGc8o7ODD1vTsa/ExqJMP+kX3umP48wHyCHpMf3CEWoGud/J70
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
B8ugP6PmH3lK/p2H8JYNG+1DSV/vwIPK4Tj9he/K6b7hIc0uVzxnBdXrOXHr
bbNtNdtJ/PUsHnY1xE6dPOvd3/WceZg76/7vgmFUP+3Cw44vZYFr1Ki/oisP
GwIa1UM/NdH9xMONNVNqPm4k/cVCHnYHTLmvWkvx0GJu//dMKW/3IH5+KQ/l
Q3spTJ+z/q48eAxynq3jTPXTnjy4dUSe65bF7jMeGlxLLUMmUj9FLx5CGlca
PleQnsybhxM8dVunAVQvtI6H2bvdk4cdpfoDHx4OTt2nfqWZ8PiN3N/7GPC5
uxnrH8TZU4LGiKqXdF/7cvu5cLeldwj1j/Pj4UNu9HvnUcQP+PPgUnVWfWoR
xUMBPJgqsoa3byX/EcjDcnGh8iAtphfjwW58v0P+fMq/9/Jw8tDXIzetmH6M
By35ufb/6aH/f71D3Hk5m9+j0pH4jxAeNFZd8p7ykPxbKA9Rftdtdtmzfn48
jF0VtcrlJsVH4TwoKTIX7R3C4h0eihwi3ApCyd+e4sFQU+ys8Z7wokgeHKw8
En7YEf5zlgerabcr95xg8RAPiPqwwucF+f8o7v2tr1Tx+zF+iodZwpL7OkwP
H8t9v1FH46KCWbzE/bx23MoJVykeEXD7/bLM/eVTFj/x0Gx4dnlAPcUnEh7m
H0+p7/qDxVM8uL6ZejKMi3/+f73LPNgcLhO2qBI+dJU7L3FqDva/ab1EHsQr
wu5s/I/FWzxopj89GvCS1kvizuv91OOr01j8xdlPj3mF4yJpvTQeppnqj/zp
xeIxHnR0x4oKzOn97vBg0ttsWd4nxo/xkNRzvLuBhOKfLB7ORN9P+LiE8WU8
HN5R+9BfhfYzh4esj1eMWsSsfouHDIuxv+McKD7K585DgOuX5JcU7xTwoGby
rt1vPcW7Rdzzb3rXqtHC+knxcPNokZZkB9lLCQ+6ri2PdrUyvJG7Dyd4L5Sx
eSHl/7tvlscve836L3L7dePB7HRnss8qHuybY9603aR4vpqHkbZdH9v1Jbyo
hodVLbl7SnfQeajjQaGstFK9iOKh9zw8Lj1hPsKY6u8aOPtJUnw/sYv46EYe
LLaa/zvnJKuf5qFDz8MgbiTlK808+JyaZvLyNunrW7j3+5LYkjyL+LI27j7S
m1//sYTqhTp4mBlrP6CfJ9UXfudhu8fm4y9rOijf4+wnIuRq5jrChzq5/TFu
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
4/3f9QLF8BjkcbOwlPT1QWLYdbqUjEin/qt7ufcdPMRkgpjNZxYDewf3WTKL
6g8PcedBNnu9yX2mJxMjKOXRll2TaB5HqBgxg/oMT7pO+HWYGOoPLMfPMKX7
LJw7f39WnrkQT/XTEWIoet5zU+lF/NgpMVxzZiyvOEz1lZFiDC992s+nje7P
s2LsCO1a2byC5j+eF0N2+uHBxGzC56PEGJtW+3R7JN3XMWL8+/y7xWZ7ym9j
OXuYvcH1Yz3p7XlixD7TfnvuBPFjAjG2ru95YLAl8WMiMU6fVHGxLaB8WiLG
BmuDP7y1xD/IxWi/bPWg23eq17gsxpSA2yOsj7D+QmJszxg+s7yHOvk/MW4G
TD6ZHMn6DYnR8qel4mgPwguSxHjb6m/TPZTNRxdjzrge79Q7iF9JE6NglOvm
CSvJ36aLMVd+KNX7PvnbO5y9zWutXjGQ1b+IcX6gRv7Xraz+hTuPJe92ds1g
9S9iPOnbV99XieKJHO57hS9I07dj9cti3Bn47VvVNoon8sUo/VLf624cq2fm
/v1W90HSBxRPFIlxSeOOyslqVt/Mnee6lCub2yl+KRHjmW7u/CkqxI+ViaHC
91RqVyd+rFwM27fz90eyeqJKMeqezjml+43WqxLD6dlX0aY6Vg8txvTNGd2k
rH67hvv9jSc7s0WsPpp7375pDwp3Mf5PjITmt7srHRn/x92fuWptKpqM/+Pu
M34rb8NDVj8txm7f9bvtd9N+NouhH9rj/K2RrJ6au4+9YgeqPyW8ro37XoWa
jZs2M30f9/fUdUcZq1O89J27f+8vtNh0keLdn2L0PNX3+o7hFO92inEgLb/C
X0H2oiTB20v3NC6Ykb2oSDBkeGqkmpjia1UJxv60iftgQHikugQ1d1ameYex
/qAS7P/B15C1UjyvJUHUylX/1roz/FOCAxfWKbulET+mK8H9PzkZk3rTedCT
YN/igOmNmyh/6CXB6f5rYzIzmZ5egmeuq3z69yR+2kCCi38uTU7LYPp6CUQT
JqSUzqf+8YYSJJ+yKJldQ/zYEAkSWk3Nn24h/YSRBJc6phd0/Ub82HAJNM+Z
7764j+ZxGEswo6l0vn4X4t9NJehsU56sE0r5mLkEN0xHVRt2Zf3xJRDu/2X8
Poz0sJYS+D073qyvTfoQKwleRS8YlDuoifI/CfqdugI7U5rHMUECF02zMWMn
faD8TwLVjJMeC1xJX28rgdqyWx5uvtTfxE4C8dLuZbzxpPeFBMp1xtNSBC8o
/5Ngy8AXY0rMiin/476HcekaH/5jyv8k6GoeKExfdpfyPwlGOljatP+hfnXO
EvQc7ZHxb4SQ/J8EffwqPkZ9ziD/J4G78JLyt2SaH+UmwVZx3JyUuaQnWyjB
nNEGp2ojad7CYgn2FJmtvyCmeatLJThm7/boQAjp65dJMH7gyLGpfYhf8ZTg
9X0Vq7GFVI+ySoLoY3Zn7m+g+l0v7nvkxN+9UF9H/k+CL1WT7n+bQfzYOglq
L70otTvK5m1IMDP9rmmxjPCQjRIYPj+UNVbO+u9IEDdQ42PDUYonfCVo0Et4
Ez2D8Bc/CSyil3b5UUf4i78E+WajA56vYvowbn/rUjy6pVP8EijBT5+Tyy60
Mr2YBOu9xLcOdyN+bC9nL89cdvz3h+nHJLh+Z2X69+eELx2SYPqhr+nPQpme
TIIdnVmvFf1ovVAJltvvN70bxvRl3Pq5v9WcK4gfC5egqsBqX1Q3xv9JcNv0
Srff/ale6pQEPutM37zWYv0nufXe9LO4XUX82FkJLDvqZ4w6TfM5zktwTu9p
tzZjij+juPvi0069tnjC62IksG48FDemk75frAQj4pXtQ/dTPRiP278cs883
nlUQ/8edDzQk2reSnkwkwervNiY73hcT/yeBWcGX/a0eBcT/cffRueKWM2dJ
X39ZAq0RF482/Egm/k+CBc52FcaPThH/J0H9+Pigk4sSCP/k3r9WO3XpsfuE
f0pgy3+qGJuVT/UvEjyo+fNn88Dnf89DmgQHQ5LT3vmTvj5dAoOI4BcdH6r+
nr87ElSevFK6OY3Na+W+x8BHF1zDSP+Zxdnvroc+g7xIT5YtQfny41vdHOi8
53DPd81y6XYTNp+e25/0aFGEJuHJ+RLEThkStvcA9S8rkKBu+UzrTd+oH3WR
BOH1B1498GX6Vs4eexlGfaknvUeJBLsmmR5YtYruszIJuvcb67mjjOojyyX4
3G73NHw26z/NfY9IQ7Sn0zzHKu6+yciq/m5K/Fi1BCdu6E6tPEP63RoJPDVX
9Hn5jfD5Ogmufro2tt8Vuq/fc/fXp2jJWXdW/8ndDyNGKx9VJj6gUQLflDp5
rIT6zzVJUDrQv/XwDOLHmiV4YlF7tr2W8ukWCYamTE0SBRH/0CaBTlPXLJfu
bJ4md7/+9NtwJYby9+/cekV+FXuGEd/xk7tfdrceDBITP9YpgVH2vJVrWb8Z
JSms6mdmfjtPeIGKFPcHBc7pUCN/qypF8/jJw422kL9Vl+LAg2HvHQvZfAgp
jiVi3yhTVv8ihTDM5OaVIFb/IkVazsUt8Tms/kUKt+n5mXWaTD8vhXX940te
0yme6CWFv3e3eaqBTE8vhaptamqaiOIJAylkfx6tDXjE9PXcv9cpj7Gso/jF
UIo9XmMOVH9lenspAt9mbd7fhfgxIynWHBh9QkOD+LHhUgTMDM7ZzuIlYyne
enPBWzvT43PP7x82+GM1rWcuRWT5puqWB7TeaCk6Dy0qeBNH61lKcXPirEcZ
2xj/J8X370+jY6cw/k8Knw/zWuL+sPlsUhx+YnDq/W3CzyZJsWziszOCLayf
txSOVi/aNQbQftpJ8Wt350bXTNZfkXv//lWqqSsIr3OQwunqxJzdHazfohRb
TmufLj5C8a4Tt3+tA0Pa9Vj/RSkWjD3YozfT1ztLYZjm/t6zL+tHJYVN8cmm
b6eIH3OVYntVq4mOGuGRblLkndffnbWd7HOhFLNfvy1yrKJ4fjH3vJ0h03On
MvxTipVPYw6H8tl8MinmvNHok/eL8gdPKXa/GTe0bgGbZyOFqcmd4jFS4se8
uP2RWekbfqbz5y1FzIdH9x8doXxlnRSbLBIXmw5k+gcplG2Wf+28THz4Rila
Rd+2/Jj4g/I/Kebv3aack0n9yHyluPWnTaPTifpz+HHf0yH2i3U+3S/+UsTa
SoqV57J59VL0/BCx5lch4deBUgyY7Irc+aSvD+LOV3eznOEy6i+7l9sfjbT1
Nteo39oBKRTuXj1W3aZ5HIekcP75MtUxn+nJpNhqvXHmhdpayv+k0OEdM1JT
o/lkYVIc7TH+4zIv0teHS9G440S9zXPqnxshhWbCnFmhK59R/ifF4taLoe36
jyj/kyJ13p3fcQvTKf+TIrvLLr11Npco/5PixqPewS+n0fynKCkMOltyb19n
8zKlUC9aevmBFtW3xkoRn7Knw7OliPyfFKeGudtvHVNK/o/b/5mhHQmTSU8m
4u4b8e09hT2ryP9JEeSan7JgaTX5PylWGCX/d0mH/O1lzt5qs8yrREzfLUU3
l39nOw0iPidRiv3CYbuGBLJ+Q1IUOZtez00iPVkSdx5/bBPJiwgPSZbC/KVv
keMT4o/SpPiSU2VsKqV4Il2K06ld33xfRfjLHe487Kq/tPU76bkypYiYY9uw
1JfilyzuPF/KsYp/SPFLNmdPNpW9bZmePkcKpR5iW1st4sceS3GHpx+e/pPi
pXzu/kHs/po8wpcKpGjwfuTyehfFS0VSTC7eYlWrxvobcfY2xqSHuR/FZyVS
bBg0ZW3HHeLHyqSYJPDLP9FA71cuhbZOj2+z21n/aSk+RZ61O/uW8LMqKc5O
n/j6UwLT40lRbTxRvcOT+g3VSJGh3PZy+3/Ej9VJMSJkrNZcb5rP8V4K+7nj
hxy/Q9+vgbtve33Iif5WRfyfFJUXVomCplH9fJMUekNrW/RX0Ly6Zu79g5+P
lM2mfkMtnP1N/3z2ep8nxP9x94/29Dk2jg+I/5Mis9bjnPq0JOL/pNi1Smu3
v30A8X/c95w9ykan+w3CPzn77j/YsKf6A8I/ZThv62G+aUYB1b/I0L75wL9B
tTS/XlWGnsuGD+qKctI/yBBgnHPicTLx05oyfJh9cVCgEdXzaclQuaLG4GFr
HekfZDhqz8/IKqB+qroyTLtuYvM5gfoN6cnQRanpetE5yo96ybBT+PlhMAhP
7sP9/4NV24QpxL8byHDwxfMjl8cwfb0MmRq+X9VlbZT/cX+/PbncaAjxY0Nk
UDbsft7nAt1nRjIMXxWU9Y8O8WPDZYiZePvgrwOElxvLYOI9Mq/lC/VfNJVh
8auW2PUrqR7TXIY5446+jXv0m/I/GZTWjxi4oQ/xY5YyHJs2+bzoId3XVjII
XF+28bex+k8ZPk67FqTZn/iACdzzvtg698hdqp+YJMM3h399n6xg85xkGGWc
Y3biB+XTdjJ0zTbUPnyazcOU4XLZ1ayNw8gfOciw2vFAn9/XWL9FGZI25P/z
bQLxHU4yjLFbmdonlfVf5PanylXUZxzhBc4ylE54ez5ZSniBiwy3TjnKUnqT
v3WV4YnLgsjXe8jfuskwdc+Ga22vKF5aKAPeL858NJ7Vv8hgenH91jFHWP0L
9/46X090ecbqX2Q44bpWz1if4glPGSoUSpl7Xdg8DRl8+nXEduyneMJLhqcu
wcYHFWy+hgw/5yot68n4qnUyOEe7lsR+YPM2ZHgui/g86AfFLxu531tljzzB
9GObZQi5NjL7nTrxY74yOCRcfTREmeIlP+57aD/3tG2l9fxlqJ7dVzauivWH
lGHIziZ9rXu0XqAM3s8vduReZP0iZehW3nf6zg2M/+P27+gpLQtrxv/JoL2s
+7xuHYT3HJLhft3UgeMSCT8LkSFjver1F160n6EyqJr7vxrdnfYzTIahLR+f
b2X6+nAZNuSMyCufx/R/3N9z/npG+p7i3VMy8NqPxujtZPPnZDie9XipqzLF
S2dlyC3qPHL6MNnLeRn2TzUer6JK9hLF/f8PnRV5e4gfi+HOo0XNZr1m4sdi
OXs9Gj1OeQXrl859v+e13x+w+XoC7nmiRw45acbwT25/Uu6/4YXReZBw98/h
IR4OdZQ/yGWIssi2yJ1M+vrLMmw36yEOjyB+7KoMfsIBgbVp1A8+UYZ9PYMW
pLuxfkMyNC6uTfN+T/hukgzhfRsWxe4gPjxZhjueMYZ9lan/YpoM3QMvn9oZ
Rvr6dBnc5hqnLu3xlfI/7rytnbHN7Qyb1yoDf7DJkI7elI9lce93fqX49QXC
r7NlkCbN90k0IL4/R4agkI0atjb/Uf4nw7nZl0qe2JO+Pl+G/JeHjRKdGyj/
kyFwgNuTk57Uz79IBt0nFz4M3FlL+Z8Mfa982NglupryP+48HM7nZ56spPyP
s3c9pYQdqqz+k7u/+aEfupwjvUwld/4/bbsx8WgO5X/c+6zu+8t0firlfzLM
v7t6q8+BU5T//c/+VY71bEkg/yfD4Z3Bbxxs7pP/kyE7Zv/qGSvyyP9xz/N2
qEvxWdIDNcpwZNxv4e080k83cfdH09X6XU/Lyf/JMOwKb2R2LM3jaJHh39re
x6fEVJP/k0Ht0vm3rs7kbzu4+6xL87Ypr6l+97sMy5MLDlsvID7nJ2e/m+94
hMhJH97JPf/YsYJj1dRPR0kOzx9pR1K+Eh6iIsfAj9PVj39m/Qjl8Ei8eT86
m+IJdTkkEd7tYYGEv2jKYXcv4nRvHaZ/lyP1yZRQ3f1M/y7H9uP2Id6FFL/o
ypEzaoOG7m+KX/Tk0Luu12OYFvFjveQwWnlpRnoHxUt95AgOiAxQuk/4koEc
py7+yBnK5nUMkOOSy/iZC1soPjOU48mCKxnFSyk+GyJHF75z3mse8WNGctSN
ua14kEvvN1yOKdstfCueUjxoLId+iu61k8mEn5nK8az7zQqf/cQ3mstRWZXT
s4cZzSsbLYe1f+/MmSnU78lSjkT3PnFdTKj/gZUc0qvTpzvvpe9nLUdV/e7J
wb4U706Qo2NwWJtxUjnxf3L0OLpKqzy3lPg/OZw1V/qVX31G/B/3/k/EroeL
8oj/k2OIuKtCs+U+8X9ymJ5x66Y4cp34Pzn4gVpDI8sCCP+UQ9jVv3l7WxLh
n9z7TjedNjU4m/BPORxKpDPUnj6l+hc5tPsOkZlepnk2rtzvB5jvSteqIP2D
HIrDUv2BoW9I/yDHqIkTnNLDqZ5vsRwHl1yz+3cF0z/IMXVMTXD4JNKLLpPj
wMehZ8UDGkn/IIfIxcRqahea17NKjnpVcej+nYQne8nRNXkQ8j8T/+4tx4+G
BxYN66hecZ0cTeaX3jq+Yf0+5Ij56OjuvIT0sBvlyB51wnrdU7rPNsuh3r7j
0ddpNI/IV46FwdEp7imEl/vJ4eP78+iLkXR/+suhaTdk2O2zbF69HN21Hz1H
J/UzCZTj+auqoYss2bwAOYrOlTwZ8Ibu671y6EwN1rp4jPLbA3Ik9/j0bJsV
8QGHOPt58en3ojKqnwiRw127+7SOHZRPh8pxcZSuf9eexD+Ecft1MO7QdCnx
Y+Fy2E7ssWg9m58ZIcesT+H5o7Ipfz/FPU95svG82cR3RHL7Ybe+JTyP6kPO
cu9zUHUnz5HNY5Uj/Nu8c86phBdEyaGW5f5q7gg2n1WOwE4l8dZw8rexchj8
vq656yOblyWHQPJIMNGB1b/I0f6V/yc4ktW/cPfPAeVKm0pW/yJHW7cMTZuB
TP8uR+ftEUY+iyieuMztr4r0TWoo6y8kh+EMd9d+iUz/Lkf+iivvgp4x/Tt3
HykGHan4yPTvchz30sge9Yvp3+Woydhpu4npx9K485GuNueMOvFj6XIc1bgw
MPYP07/LUW2e3yO0mc2HlaO4zjBhTjmtlyXHnA8qyq1pbF6sHH5aMtsDrN47
R44zQyZvUVnD+D85lFU3fzppzvg/OQoeT9Cf+YnwngLu/pzxcfwCMeFnRXI0
RvtI3y5m803kkH92VzZTpv0s4c7DAZ3GdayevYyzp4rRCSVg+j85XCf0q00o
Y/2n5XgUcsTfYh3Fu1Vy6B77bXn0P/W/61XLseaq04BPfmQvNdx9sc1KdLiZ
4uu6/71f+rs96wmPfC/HpoNxJd8qyD4b5Ng2smiU0Uyyz0Zuvf6FCuNEiueb
5NiboaEyRZ/hn3KsstrUyd9G56GFO791p92F+ZQ/tMmR+1RheG4om+8nx5hT
7vEl24kf+875q+udz48e/kP1L3IsLu3YetqQ8pVOOZwaznc/mkjzBpUUmL9E
Pc/EnvhwFQV0l7bcHZbH+tErUHVPOWmgG+kt1BVIUxqy++oLNp9MAd6VI3s2
LGun/E8Bq40Bp+qriB/TUUB/cGJF1krCr3UV0M4N5Me/Zf3TFAipXWC77tFn
yv8UEGh0P7m/iPQkfRQQrbGebFJF+lsDBc4Wq6RqN1O/kgEKaDmc133drZby
PwWW/jP2gtMYmhc5RIHR21wLM+/QfW2kgP3dggMrJpRS/qfAz38THHefL6T8
T4Fh7b5nu/+m+WSmCuT9XDGz7/xblP8p8FDey3nJsu2U/yngEpFtumDODfJ/
3Pv7vrERnssi/8f9+1GuJfKEfPJ/Cux32qlvMoH4jgnc/sXH1Zd703yySQqY
9RMUaK6uIP+ngMULt5TtJjS/wU4BZb0k172vqJ8xuO91+F3hkqPkbx0UCNMZ
NOdjH+LHHBVQeNVt2nyE+BwnBVplO/zGlLP+iwqM32adelqL8BBnBTqn76pR
H0T8mIsCMWWHNuvpEj/mqkB0zPLbs95SPOGmQNeMPb0Wnyb8ZaECC90F9zoG
M/27AobDZD1VIpj+XYGkW/1bvF9S/LJMgeo94fIhKsSPeSqQHnx+54xuTcT/
cft7IC3tWzPFS14K3JVM9vVMJnzJW4EWhz83xR603joFUqMvrdV4TfGZjwKL
oi5Z3AXVe2/k7KPBvF47mPixzQqc+eoUCjHxY74KTIjcfT5JyuZxKHDC/rxe
+THCz/wVsDkdec9mHpvPwdn3Dd0H+9qJHwtUYM/+Zc8C99E8+yDOfiOKIwY0
Mv2fAhvTG3dun0Lf74ACAW8uS5w/UH/NQwp4jjrXPXMY4YMh3PnTC50SZVlK
/J8C1r3Ebnq6z4j/437OOrdk/9HHxP8pYFqvVtAnLpP4PwX6Dwi/Wnn6KvF/
CqjtST/bpetpwj85+766YFZ9VQrhnwoc63Mp/a0yza8/r8Cr3IrGH2ZFVP+i
QLN2Qt6O7aWkf1DgSnHYls4XFaR/4J7fOn1phxmb16qAs3piwbh2mh8oUGCK
RvCHCY+Z/kGBNYPH9QgUk15UokCHi5tj4FHqryFXoH28Xvcc38+kf1DAu8gv
7WBCM+kfFLA9Z/2rfQTdL4kKrH0c62UcR/WKNxSold5T2t+H8OskBRrzP/M3
nSA9bLICBnv/1XZXI34sjTt/zb8g2P2d8j8FcpL/Wy1oIrz8jgIezu4nxZ50
f2YqoCM0Ezc/pnrMLAWMbib4PhhL+Hy2AgcchMssZhM/lqPAWLvhJvu/KWX+
H9oW7/k=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 3427.4285714285716`}, {-3.3784323794971427`, 
       0.9076210179268571}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 3427.4285714285716`}, {-3.3784323794971427`, 
       0.9076210179268571}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"cumulant\"", "\"srt\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.673179212453184*^9, 3.6731792493137703`*^9}, 
   3.673179334162771*^9, {3.6731793751058598`*^9, 3.673179421894968*^9}, {
   3.673179627808655*^9, 3.6731796404487123`*^9}, {3.6732538661033173`*^9, 
   3.6732538819570217`*^9}, {3.6732539417327757`*^9, 3.6732539577705383`*^9}, 
   3.6732540103387623`*^9, 3.673254044037732*^9, 3.673254697431169*^9, 
   3.673254743639769*^9, 3.673414524643612*^9, {3.6734146458173656`*^9, 
   3.673414706364491*^9}, 3.6734147444549627`*^9, {3.673436556297564*^9, 
   3.67343657417741*^9}, {3.6734366210874567`*^9, 3.6734366359084787`*^9}, {
   3.673436718004656*^9, 3.673436819005183*^9}, 3.674016900671027*^9, 
   3.674017095675934*^9, {3.67401968030732*^9, 3.674019696555068*^9}, 
   3.674025305831677*^9, 3.674025416427895*^9, 3.6740300277201023`*^9, 
   3.674046491799773*^9, 3.6740466847581797`*^9, 3.674207524742255*^9, 
   3.675157947330113*^9, 3.675333434278368*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"bothLiftMeansPlotReadyVSGrid", ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Cumulant\>\"", ",", "\"\<SRT\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<# Fluid Cells\>\"", ",", "\"\<Difference to Benchmark\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "7"}], "}"}]}], ",", " ", 
   RowBox[{"ClippingStyle", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.674018267261297*^9, 3.674018277006893*^9}, {
   3.674018613026072*^9, 3.674018620922971*^9}, {3.674018657412619*^9, 
   3.6740186651182947`*^9}, {3.674018702117564*^9, 3.67401870836516*^9}, 
   3.674018767970437*^9, {3.6740188731794577`*^9, 3.6740189116793823`*^9}, {
   3.674018945616016*^9, 3.674018950087158*^9}, {3.674018997095092*^9, 
   3.6740190243397903`*^9}, {3.674019417651083*^9, 3.6740194327332773`*^9}, {
   3.674019472565338*^9, 3.674019500910618*^9}, {3.6740312277188263`*^9, 
   3.674031241287319*^9}, {3.674031417211953*^9, 3.674031421249202*^9}, {
   3.674031477581811*^9, 3.67403153242369*^9}, 3.674031573172965*^9, {
   3.674041668776038*^9, 3.674041700319289*^9}, {3.674044389841886*^9, 
   3.674044413552446*^9}, {3.674046647200383*^9, 3.674046666127907*^9}, {
   3.6742075659040403`*^9, 3.6742075735163527`*^9}, {3.67515767031629*^9, 
   3.675157674030999*^9}, {3.675333427700479*^9, 3.67533342840598*^9}, {
   3.675333468299664*^9, 3.675333471151705*^9}, {3.675333557430882*^9, 
   3.675333744134066*^9}, {3.675333907294125*^9, 3.675333924088358*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{{
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.012833333333333334`], AbsoluteThickness[1.6], Dashing[Small], 
         LineBox[{{719., -0.1}, {1162.3574028709536`, -0.1}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.012833333333333334`], AbsoluteThickness[1.6], Dashing[Small], 
         LineBox[{{719., -0.1}, {3752.3483537942852`, -0.1}}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.012833333333333334`], AbsoluteThickness[1.6], Dashing[Small], 
         LineBox[{{1966.5225249946832`, -0.1}, {3862.528051451606, -0.1}}], 
         LineBox[{{4871.235753475056, -0.1}, {6371.469133516651, -0.1}}], 
         LineBox[{{8619.049255553753, -0.1}, {9089.45107826345, -0.1}}], 
         LineBox[{{20453.385698635702`, -0.1}, {32151.6573194786, -0.1}}], 
         LineBox[{{55244.540836383036`, -0.1}, {66483.25558610515, -0.1}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.012833333333333334`], AbsoluteThickness[1.6], Dashing[Small], 
         LineBox[{{4935.843870252786, -0.1}, {6415.636209441117, -0.1}}], 
         LineBox[{{8712.725571833442, -0.1}, {8754.107441597114, -0.1}}], 
         LineBox[{{20574.88994554567, -0.1}, {32286.945023773475`, -0.1}}], 
         LineBox[{{56033.321712873025`, -0.1}, {66148.73111087666, -0.1}}]}}, {
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.012833333333333334`], AbsoluteThickness[1.6], Dashing[Small], 
         LineBox[{{1184.494317335276, 0.1}, {1868.0862792071243`, 0.1}}], 
         LineBox[{{3947.976405176412, 0.1}, {4745.6722792549035`, 0.1}}], 
         LineBox[{{6510.192927151863, 0.1}, {8309.492669333897, 0.1}}], 
         LineBox[{{10194.31828443919, 0.1}, {19254.197684890598`, 0.1}}], 
         LineBox[{{38938.01596314613, 0.1}, {47478.68137390994, 0.1}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.012833333333333334`], AbsoluteThickness[1.6], Dashing[Small], 
         LineBox[{{3841.17176373456, 0.1}, {4821.983825527662, 0.1}}], 
         LineBox[{{6561.727763090279, 0.1}, {8343.612935923773, 0.1}}], 
         LineBox[{{10031.950364890214`, 0.1}, {19428.13698938019, 0.1}}], 
         LineBox[{{39341.68843796858, 0.1}, {47272.42003876173, 0.1}}]}}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        LineBox[{{32151.6573194786, -0.1}, {35328., -0.05579363634476933}, {
         38938.01596314613, 0.1}}], 
        LineBox[{{47478.68137390994, 0.1}, {50770., -0.011819975708495677`}, {
         55244.540836383036`, -0.1}}], 
        LineBox[{{66483.25558610515, -0.1}, {69614., -0.05300114400947657}, {
         79822., -0.014833024348863414`}, {109137., -0.024925565577886343`}, {
         142188., -0.0020374868337459436`}, {180563., 
         0.0003659646349418906}, {222446., 0.0026828767828952164`}}], 
        LineBox[{{1162.3574028709536`, -0.1}, {1184.494317335276, 0.1}}], 
        LineBox[{{1868.0862792071243`, 0.1}, {1966.5225249946832`, -0.1}}], 
        LineBox[{{3862.528051451606, -0.1}, {3947.976405176412, 0.1}}], 
        LineBox[{{4745.6722792549035`, 0.1}, {4871.235753475056, -0.1}}], 
        LineBox[{{6371.469133516651, -0.1}, {6510.192927151863, 0.1}}], 
        LineBox[{{8309.492669333897, 0.1}, {8619.049255553753, -0.1}}], 
        LineBox[{{9089.45107826345, -0.1}, {10194.31828443919, 0.1}}], 
        LineBox[{{19254.197684890598`, 0.1}, {20453.385698635702`, -0.1}}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        LineBox[{{32286.945023773475`, -0.1}, {
         35328., -0.04888901502612565}, {39341.68843796858, 0.1}}], 
        LineBox[{{47272.42003876173, 0.1}, {50770., 0.004706886512327146}, {
         56033.321712873025`, -0.1}}], 
        LineBox[{{66148.73111087666, -0.1}, {69614., -0.05357605287884179}, {
         79822., -0.025526616726307697`}, {109137., -0.02362250280914729}, {
         142188., -0.014424572297926753`}, {
         180563., -0.012501487808715179`}, {222446., 0.002650157747583452}}], 
        LineBox[{{3752.3483537942852`, -0.1}, {3841.17176373456, 0.1}}], 
        LineBox[{{4821.983825527662, 0.1}, {4935.843870252786, -0.1}}], 
        LineBox[{{6415.636209441117, -0.1}, {6561.727763090279, 0.1}}], 
        LineBox[{{8343.612935923773, 0.1}, {8712.725571833442, -0.1}}], 
        LineBox[{{8754.107441597114, -0.1}, {10031.950364890214`, 0.1}}], 
        LineBox[{{19428.13698938019, 0.1}, {20574.88994554567, -0.1}}]}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
        AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"\[FilledCircle]\"\>",
           StripOnInput->False,
           FontSize->7], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQA2JGIGZigAKHhw4tX28e+z1hzX4w99QLh51adzyETDvA
/Af/PjiIbQ73+K60GsKv+eyQ5H718rGEPjBfYOkvh8+y35PF2maC+QnRjI48
c1WyXm9IAPNncLE5OhhWKt/7bW4P4heocztuuR/amPYr1f7HCpbfuZqTHGbN
BIGd+3MvB+n9aoTz7dnPnRIQ3zUPLr9p8uTICIO5cPmmtkMxfLrr4PKrJRJf
f74O59t7/gyLsmHfDJef7lontaZzE1y+MlxJsuLxDrj84fo1yYZ5O+HyTh2M
fm1XD8Dls16d5N9vBefb79r1bs/OAwfh8pNTuvdqvDwMl58b4rk+4udluDxT
+71lPWcvweWfb28VfJV6Hy5/SeVokwPzY7h84YoLZ6/qPYfzTaQ6/Cb+fAVX
v77koZiJ9Qc4/+Tm3OhNAWvhfLXerI/hTIjwONH4kP2GOyI83JP+3v59FREe
jObz7y3ih/t//5/+dX67FiLC48j6zvsxLEj+NVxfcs4bER6vC5Ye4JVEyMe1
9i39OR0RHhWa977sEL8Cl/8ilX+E4yciPBz/uVTvaUeEB4/AevZtpojwEFP8
WsArigiP7tMV3loxr+HqJwQu3OSthggPAEECgiI=
         "]]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
        AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"\[FilledSquare]\"\>",
           StripOnInput->False,
           FontSize->7], {0., 0.}], {{{35328., -0.04888901502612565}}, {{
         50770., 0.004706886512327146}}, {{69614., -0.05357605287884179}}, {{
         79822., -0.025526616726307697`}}, {{
         109137., -0.02362250280914729}}, {{
         142188., -0.014424572297926753`}}, {{
         180563., -0.012501487808715179`}}, {{222446., 
         0.002650157747583452}}}]}, {}}}, {}}, InsetBox[
     TemplateBox[{"\"Cumulant\"","\"SRT\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 7}, {20, 7}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], FontSize -> 7, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 7}, {20, 7}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], FontSize -> 7, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledCircle]\"", ",", "7"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledSquare]\"", ",", "7"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"# Fluid Cells\"", TraditionalForm], 
     FormBox["\"Difference to Benchmark\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->{889., Automatic},
   Method->{},
   PlotRange->{{0, 222446.}, {-0.1, 0.1}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Dashing[Small], 
         Line[{{719., -0.1}, {1162.3574028709536`, -0.1}}], 
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Dashing[Small], 
         Line[{{719., -0.1}, {3752.3483537942852`, -0.1}}], 
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Dashing[Small], 
         Line[{{1966.5225249946832`, -0.1}, {3862.528051451606, -0.1}}], 
         Line[{{4871.235753475056, -0.1}, {6371.469133516651, -0.1}}], 
         Line[{{8619.049255553753, -0.1}, {9089.45107826345, -0.1}}], 
         Line[{{20453.385698635702`, -0.1}, {32151.6573194786, -0.1}}], 
         Line[{{55244.540836383036`, -0.1}, {66483.25558610515, -0.1}}], 
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Dashing[Small], 
         Line[{{4935.843870252786, -0.1}, {6415.636209441117, -0.1}}], 
         Line[{{8712.725571833442, -0.1}, {8754.107441597114, -0.1}}], 
         Line[{{20574.88994554567, -0.1}, {32286.945023773475`, -0.1}}], 
         Line[{{56033.321712873025`, -0.1}, {66148.73111087666, -0.1}}]}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Dashing[Small], 
         Line[{{1184.494317335276, 0.1}, {1868.0862792071243`, 0.1}}], 
         Line[{{3947.976405176412, 0.1}, {4745.6722792549035`, 0.1}}], 
         Line[{{6510.192927151863, 0.1}, {8309.492669333897, 0.1}}], 
         Line[{{10194.31828443919, 0.1}, {19254.197684890598`, 0.1}}], 
         Line[{{38938.01596314613, 0.1}, {47478.68137390994, 0.1}}], 
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Dashing[Small], 
         Line[{{3841.17176373456, 0.1}, {4821.983825527662, 0.1}}], 
         Line[{{6561.727763090279, 0.1}, {8343.612935923773, 0.1}}], 
         Line[{{10031.950364890214`, 0.1}, {19428.13698938019, 0.1}}], 
         Line[{{39341.68843796858, 0.1}, {47272.42003876173, 0.1}}]}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Line[{{32151.6573194786, -0.1}, {35328., -0.05579363634476933}, {
          38938.01596314613, 0.1}}], 
         Line[{{47478.68137390994, 0.1}, {50770., -0.011819975708495677`}, {
          55244.540836383036`, -0.1}}], 
         Line[{{66483.25558610515, -0.1}, {69614., -0.05300114400947657}, {
          79822., -0.014833024348863414`}, {
          109137., -0.024925565577886343`}, {
          142188., -0.0020374868337459436`}, {180563., 
          0.0003659646349418906}, {222446., 0.0026828767828952164`}}], 
         Line[{{1162.3574028709536`, -0.1}, {1184.494317335276, 0.1}}], 
         Line[{{1868.0862792071243`, 0.1}, {1966.5225249946832`, -0.1}}], 
         Line[{{3862.528051451606, -0.1}, {3947.976405176412, 0.1}}], 
         Line[{{4745.6722792549035`, 0.1}, {4871.235753475056, -0.1}}], 
         Line[{{6371.469133516651, -0.1}, {6510.192927151863, 0.1}}], 
         Line[{{8309.492669333897, 0.1}, {8619.049255553753, -0.1}}], 
         Line[{{9089.45107826345, -0.1}, {10194.31828443919, 0.1}}], 
         Line[{{19254.197684890598`, 0.1}, {20453.385698635702`, -0.1}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Line[{{32286.945023773475`, -0.1}, {35328., -0.04888901502612565}, {
          39341.68843796858, 0.1}}], 
         Line[{{47272.42003876173, 0.1}, {50770., 0.004706886512327146}, {
          56033.321712873025`, -0.1}}], 
         Line[{{66148.73111087666, -0.1}, {69614., -0.05357605287884179}, {
          79822., -0.025526616726307697`}, {109137., -0.02362250280914729}, {
          142188., -0.014424572297926753`}, {
          180563., -0.012501487808715179`}, {222446., 0.002650157747583452}}], 
         Line[{{3752.3483537942852`, -0.1}, {3841.17176373456, 0.1}}], 
         Line[{{4821.983825527662, 0.1}, {4935.843870252786, -0.1}}], 
         Line[{{6415.636209441117, -0.1}, {6561.727763090279, 0.1}}], 
         Line[{{8343.612935923773, 0.1}, {8712.725571833442, -0.1}}], 
         Line[{{8754.107441597114, -0.1}, {10031.950364890214`, 0.1}}], 
         Line[{{19428.13698938019, 0.1}, {20574.88994554567, -0.1}}]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          AbsolutePointSize[6]], 
         GeometricTransformation[
          Inset[
           Style["\[FilledCircle]", FontSize -> 7], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQA2JGIGZigAKHhw4tX28e+z1hzX4w99QLh51adzyETDvA
/Af/PjiIbQ73+K60GsKv+eyQ5H718rGEPjBfYOkvh8+y35PF2maC+QnRjI48
c1WyXm9IAPNncLE5OhhWKt/7bW4P4heocztuuR/amPYr1f7HCpbfuZqTHGbN
BIGd+3MvB+n9aoTz7dnPnRIQ3zUPLr9p8uTICIO5cPmmtkMxfLrr4PKrJRJf
f74O59t7/gyLsmHfDJef7lontaZzE1y+MlxJsuLxDrj84fo1yYZ5O+HyTh2M
fm1XD8Dls16d5N9vBefb79r1bs/OAwfh8pNTuvdqvDwMl58b4rk+4udluDxT
+71lPWcvweWfb28VfJV6Hy5/SeVokwPzY7h84YoLZ6/qPYfzTaQ6/Cb+fAVX
v77koZiJ9Qc4/+Tm3OhNAWvhfLXerI/hTIjwONH4kP2GOyI83JP+3v59FREe
jObz7y3ih/t//5/+dX67FiLC48j6zvsxLEj+NVxfcs4bER6vC5Ye4JVEyMe1
9i39OR0RHhWa977sEL8Cl/8ilX+E4yciPBz/uVTvaUeEB4/AevZtpojwEFP8
WsArigiP7tMV3loxr+HqJwQu3OSthggPAEECgiI=
          "]]}, {
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          AbsolutePointSize[6]], 
         GeometricTransformation[
          Inset[
           Style["\[FilledSquare]", FontSize -> 7], {0., 0.}], {{{
          35328., -0.04888901502612565}}, {{50770., 0.004706886512327146}}, {{
          69614., -0.05357605287884179}}, {{
          79822., -0.025526616726307697`}}, {{
          109137., -0.02362250280914729}}, {{
          142188., -0.014424572297926753`}}, {{
          180563., -0.012501487808715179`}}, {{222446., 
          0.002650157747583452}}}]}, {}}}, {}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 222446.}, {-0.1, 0.1}}, DisplayFunction -> Identity, 
      AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {"# Fluid Cells", "Difference to Benchmark"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], Method -> {}, 
      PlotRange -> {{0, 222446.}, {-0.1, 0.1}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {"Cumulant", "SRT"}, 
       LegendMarkers -> {{"\[FilledCircle]", 7}, {"\[FilledSquare]", 7}}, 
       Joined -> {True, True}, LabelStyle -> {}, LegendLayout -> "Column"]], {
     Right, Top}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.674018624048214*^9, 3.674018673898531*^9, 3.674018770934243*^9, {
   3.67401887619923*^9, 3.674018883291663*^9}, 3.674018914494843*^9, 
   3.6740189527906322`*^9, {3.6740190020303173`*^9, 3.6740190272802267`*^9}, 
   3.674019435812366*^9, 3.6740195399324617`*^9, 3.674025312820849*^9, 
   3.67402536402236*^9, 3.674025424008856*^9, 3.67403003559503*^9, 
   3.674031425055099*^9, {3.6740315218906927`*^9, 3.67403153622962*^9}, 
   3.6740315871415157`*^9, {3.674044407506526*^9, 3.6740444169136467`*^9}, 
   3.6740464984213133`*^9, {3.674046652810174*^9, 3.674046691449966*^9}, 
   3.674207533316503*^9, {3.674207575954546*^9, 3.67420758433167*^9}, 
   3.675157949802326*^9, 3.675333436833284*^9, 3.675333473664357*^9, 
   3.675333571730049*^9, 3.675333606492097*^9, 3.675333746863226*^9, {
   3.6753339156679897`*^9, 3.675333926840104*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"bothLiftMeansPlotReadyVSTime", ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Cumulant\>\"", ",", "\"\<SRT\>\"", ",", " ", 
        "\"\<schaefferTurek\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.3"}], ",", "0.3"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Computation Time\nin seconds\>\"", ",", 
      "\"\<Difference to Benchmark\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6740191909515457`*^9, 3.674019244794153*^9}, {
  3.674019354344056*^9, 3.67401936596712*^9}, {3.674031761299995*^9, 
  3.6740317700442*^9}, {3.67404405847353*^9, 3.6740440841971483`*^9}, {
  3.674048328727544*^9, 3.674048331082456*^9}, {3.675157678145639*^9, 
  3.6751576814312*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.019444444444444445`], AbsoluteThickness[1.6], 
       LineBox[{{651.676515313941, 0.3}, {742.176789, -0.1665149759554005}, {
        1078.854286718839, 0.3}}], 
       LineBox[{{3878.6718136526483`, -0.3}, {
        4553.055291, -0.14865038637883163`}, {
        6662.499409, -0.05579363634476933}, {9352.793141, 
        0.262351961585693}, {12079.623362, -0.011819975708495677`}, {
        15789.510259, -0.1957656311027653}, {
        20130.019613, -0.05300114400947657}, {
        24822.285152, -0.014833024348863414`}, {
        40404.698595, -0.024925565577886343`}, {
        59666.24246, -0.0020374868337459436`}, {84597.915227, 
        0.0003659646349418906}, {97121.133195, 0.0026828767828952164`}}], 
       LineBox[{{42.641372296966296`, -0.3}, {45.53421652562539, 0.3}}], 
       LineBox[{{79.4913015128131, 0.3}, {98.41467214980194, -0.3}}], 
       LineBox[{{210.06363320637058`, -0.3}, {230.69161288207508`, 0.3}}], 
       LineBox[{{286.9244696038542, 0.3}, {326.97206803000677`, -0.3}}], 
       LineBox[{{452.9824608661202, -0.3}, {493.7707713416813, 0.3}}], 
       LineBox[{{2188.7828984207163`, 0.3}, {2907.8969016771043`, -0.3}}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.019444444444444445`], AbsoluteThickness[1.6], 
       LineBox[{{636.2685366486436, 0.3}, {
        720.967645, -0.10502525639291736`}, {1062.561135001404, 0.3}}], 
       LineBox[{{3760.3660802191534`, -0.3}, {
        4421.343551, -0.16102526195739061`}, {
        5893.63273, -0.04888901502612565}, {8414.065688, 
        0.22457760694419443`}, {10917.764575, 0.004706886512327146}, {
        13998.465976, -0.1809808088295135}, {
        17578.320299, -0.05357605287884179}, {
        21457.057807, -0.025526616726307697`}, {
        35308.206506, -0.02362250280914729}, {
        51264.916366, -0.014424572297926753`}, {
        74842.140846, -0.012501487808715179`}, {92527.641169, 
        0.002650157747583452}}], 
       LineBox[{{192.79743584825616`, -0.3}, {212.90306525658872`, 0.3}}], 
       LineBox[{{284.28846851686717`, 0.3}, {319.9652895143246, -0.3}}], 
       LineBox[{{448.6561449483924, -0.3}, {495.25250711396495`, 0.3}}], 
       LineBox[{{2173.4101232155963`, 0.3}, {
        2791.2799516122013`, -0.3}}]}}, {}}, InsetBox[
     TemplateBox[{"\"Cumulant\"","\"SRT\"","\"schaefferTurek\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"Computation Time\\nin seconds\"", TraditionalForm], 
     FormBox["\"Difference to Benchmark\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->{924., Automatic},
   Method->{},
   PlotRange->{{0, 97121.133195}, {-0.3, 0.3}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Line[{{651.676515313941, 0.3}, {742.176789, -0.1665149759554005}, {
          1078.854286718839, 0.3}}], 
         Line[{{3878.6718136526483`, -0.3}, {
          4553.055291, -0.14865038637883163`}, {
          6662.499409, -0.05579363634476933}, {9352.793141, 
          0.262351961585693}, {12079.623362, -0.011819975708495677`}, {
          15789.510259, -0.1957656311027653}, {
          20130.019613, -0.05300114400947657}, {
          24822.285152, -0.014833024348863414`}, {
          40404.698595, -0.024925565577886343`}, {
          59666.24246, -0.0020374868337459436`}, {84597.915227, 
          0.0003659646349418906}, {97121.133195, 0.0026828767828952164`}}], 
         Line[{{42.641372296966296`, -0.3}, {45.53421652562539, 0.3}}], 
         Line[{{79.4913015128131, 0.3}, {98.41467214980194, -0.3}}], 
         Line[{{210.06363320637058`, -0.3}, {230.69161288207508`, 0.3}}], 
         Line[{{286.9244696038542, 0.3}, {326.97206803000677`, -0.3}}], 
         Line[{{452.9824608661202, -0.3}, {493.7707713416813, 0.3}}], 
         Line[{{2188.7828984207163`, 0.3}, {2907.8969016771043`, -0.3}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Line[{{636.2685366486436, 0.3}, {
          720.967645, -0.10502525639291736`}, {1062.561135001404, 0.3}}], 
         Line[{{3760.3660802191534`, -0.3}, {
          4421.343551, -0.16102526195739061`}, {
          5893.63273, -0.04888901502612565}, {8414.065688, 
          0.22457760694419443`}, {10917.764575, 0.004706886512327146}, {
          13998.465976, -0.1809808088295135}, {
          17578.320299, -0.05357605287884179}, {
          21457.057807, -0.025526616726307697`}, {
          35308.206506, -0.02362250280914729}, {
          51264.916366, -0.014424572297926753`}, {
          74842.140846, -0.012501487808715179`}, {92527.641169, 
          0.002650157747583452}}], 
         Line[{{192.79743584825616`, -0.3}, {212.90306525658872`, 0.3}}], 
         Line[{{284.28846851686717`, 0.3}, {319.9652895143246, -0.3}}], 
         Line[{{448.6561449483924, -0.3}, {495.25250711396495`, 0.3}}], 
         Line[{{2173.4101232155963`, 0.3}, {
          2791.2799516122013`, -0.3}}]}}}, {}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 97121.133195}, {-0.3, 0.3}}, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {
       "Computation Time\nin seconds", "Difference to Benchmark"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], Method -> {}, 
      PlotRange -> {{0, 97121.133195}, {-0.3, 0.3}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {"Cumulant", "SRT", "schaefferTurek"}, 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       Joined -> {True, True}, LabelStyle -> {}, LegendLayout -> "Column"]], {
     Right, Top}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.6740192284617023`*^9, 3.6740192480489187`*^9}, 
   3.674019368750927*^9, 3.674025315521962*^9, 3.6740254266934834`*^9, 
   3.6740300387033653`*^9, 3.674031774502077*^9, 3.67404408810248*^9, 
   3.6740465016344767`*^9, 3.674046694697398*^9, 3.6740483351194*^9, 
   3.674207542364303*^9, 3.675157952157036*^9, 3.675333439238969*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"cumulantSizes", ",", " ", "cumulantTimes"}], "}"}], "]"}], 
     ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"SRTSizes", ",", " ", "SRTTimes"}], "}"}], "]"}]}], "}"}], ",",
    " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Cumulant\>\"", ",", "\"\<SRT\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "Center"}], "}"}]}], "]"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\>\"", ",", "\"\<Computation\ntime in\nseconds\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6740299781995564`*^9, 3.67403001583858*^9}, {
   3.6740300982613087`*^9, 3.674030106704566*^9}, {3.674030226660398*^9, 
   3.67403028042863*^9}, {3.674031913952653*^9, 3.674031937687324*^9}, {
   3.6740319835428762`*^9, 3.674032010992577*^9}, {3.674043658267004*^9, 
   3.674043663951848*^9}, {3.6740437577584677`*^9, 3.674043791656089*^9}, {
   3.6740438896243887`*^9, 3.674043935923712*^9}, {3.6740441791324*^9, 
   3.6740442038314133`*^9}, {3.674044341146029*^9, 3.674044356107535*^9}, 
   3.6740447438824263`*^9, {3.675157708130427*^9, 3.675157715529724*^9}, {
   3.6751580204289217`*^9, 3.675158024611998*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.019444444444444445`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQYVbQ7qd6edYPW2cIDwpzh0XvbctovFE8JnW+iw
TPuGm01eFITfs8Lh51fnnA33kiH89Rsc7j3Z/uKJZT6Ef2Grw420ZNW0sAoI
f/ZuB0VZuUM/tjZA+JwHHcJfRQpkGbZD+J0nHD567LHxzZ8M4W++4BD4I0e2
x3w+mN+gds1hadZuzrDgFRD5P7cdDvP0qvOd3AjhOzx0CFnlcrOebRdE/c0n
DvwflrSmuhwC8x1OvXA4WRp86vz04xD1kW8d9u/SCjh47RyY/+DfB4fUR2GO
jSsuQ/g1nx1m6ryzn2R7A8wXWPrL4eizx1HTdj0G8xOiGR2DK60PuSu9BfNn
cLE5igseXRK3/AuYX6DO7ThBZKKi0LbvDgB8D3oG
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.019444444444444445`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQYVbQ6HDm/Jf1ds7gDhT3F4qVnUsYPdC8JnW+gw
iW371tbrERB+zwqHO41WTwP1kiH89RscxFpjRWyv5EL4F7Y62F7ZlhhSUw7h
z97twPgneFXL6gYIn/Ogg1Tmyj1729sg/M4TDondd+2y9SdD+JsvOHyXPZz8
fsk8ML9B7ZpDat4+wVb15RD5P7cdmkK/fgp33QjhOzx0MH44/ddC1u0Q9Tef
ONx/WJbBkX8AzHc49cJB+9v0uw+DjkLUR751iGGQWmodfhrMf/Dvg0NNwvH6
KVoXIfyazw7zFWU2O3+5AuYLLP3l0FexaXab7UMwPyGa0VH11L0gWY6XYP4M
LjZHmz3PHRa5fgLzC9S5HR/nWDn9mvbNAQA+rXsx
        "]]}}, {}}, InsetBox[
     TemplateBox[{"\"Cumulant\"","\"SRT\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.99, 0.5}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\"", TraditionalForm], 
     FormBox["\"Computation\\ntime in\\nseconds\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{},
   PlotRange->{{0, 222446.}, {0, 97121.133195}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQYVbQ7qd6edYPW2cIDwpzh0XvbctovFE8JnW+iw
TPuGm01eFITfs8Lh51fnnA33kiH89Rsc7j3Z/uKJZT6Ef2Grw420ZNW0sAoI
f/ZuB0VZuUM/tjZA+JwHHcJfRQpkGbZD+J0nHD567LHxzZ8M4W++4BD4I0e2
x3w+mN+gds1hadZuzrDgFRD5P7cdDvP0qvOd3AjhOzx0CFnlcrOebRdE/c0n
DvwflrSmuhwC8x1OvXA4WRp86vz04xD1kW8d9u/SCjh47RyY/+DfB4fUR2GO
jSsuQ/g1nx1m6ryzn2R7A8wXWPrL4eizx1HTdj0G8xOiGR2DK60PuSu9BfNn
cLE5igseXRK3/AuYX6DO7ThBZKKi0LbvDgB8D3oG
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQYVbQ6HDm/Jf1ds7gDhT3F4qVnUsYPdC8JnW+gw
iW371tbrERB+zwqHO41WTwP1kiH89RscxFpjRWyv5EL4F7Y62F7ZlhhSUw7h
z97twPgneFXL6gYIn/Ogg1Tmyj1729sg/M4TDondd+2y9SdD+JsvOHyXPZz8
fsk8ML9B7ZpDat4+wVb15RD5P7cdmkK/fgp33QjhOzx0MH44/ddC1u0Q9Tef
ONx/WJbBkX8AzHc49cJB+9v0uw+DjkLUR751iGGQWmodfhrMf/Dvg0NNwvH6
KVoXIfyazw7zFWU2O3+5AuYLLP3l0FexaXab7UMwPyGa0VH11L0gWY6XYP4M
LjZHmz3PHRa5fgLzC9S5HR/nWDn9mvbNAQA+rXsx
          "]]}}}, {}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 222446.}, {0, 97121.133195}}, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {"", "Computation\ntime in\nseconds"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], Method -> {}, 
      PlotRange -> {{0, 222446.}, {0, 97121.133195}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {"Cumulant", "SRT"}, 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       Joined -> {True, True}, LabelStyle -> {}, LegendLayout -> "Column"]], {
     Right, Center}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.675333439921831*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.019444444444444445`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxTTMoPSmViYGAQA2IQDQYVbQ7qd6edYPW2cIDwpzh0XvbctovFE8JnW+iw
TPuGm01eFITfs8Lh51fnnA33kiH89Rsc7j3Z/uKJZT6Ef2Grw420ZNW0sAoI
f/ZuB0VZuUM/tjZA+JwHHcJfRQpkGbZD+J0nHD567LHxzZ8M4W++4BD4I0e2
x3w+mN+gds1hadZuzrDgFRD5P7cdDvP0qvOd3AjhOzx0CFnlcrOebRdE/c0n
DvwflrSmuhwC8x1OvXA4WRp86vz04xD1kW8d9u/SCjh47RyY/+DfB4fUR2GO
jSsuQ/g1nx1m6ryzn2R7A8wXWPrL4eizx1HTdj0G8xOiGR2DK60PuSu9BfNn
cLE5igseXRK3/AuYX6DO7ThBZKKi0LbvDgB8D3oG
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.019444444444444445`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxTTMoPSmViYGAQA2IQDQYVbQ6HDm/Jf1ds7gDhT3F4qVnUsYPdC8JnW+gw
iW371tbrERB+zwqHO41WTwP1kiH89RscxFpjRWyv5EL4F7Y62F7ZlhhSUw7h
z97twPgneFXL6gYIn/Ogg1Tmyj1729sg/M4TDondd+2y9SdD+JsvOHyXPZz8
fsk8ML9B7ZpDat4+wVb15RD5P7cdmkK/fgp33QjhOzx0MH44/ddC1u0Q9Tef
ONx/WJbBkX8AzHc49cJB+9v0uw+DjkLUR751iGGQWmodfhrMf/Dvg0NNwvH6
KVoXIfyazw7zFWU2O3+5AuYLLP3l0FexaXab7UMwPyGa0VH11L0gWY6XYP4M
LjZHmz3PHRa5fgLzC9S5HR/nWDn9mvbNAQA+rXsx
       "]]}}, {}}, InsetBox[
    TemplateBox[{"\"Cumulant\"","\"SRT\""},
     "LineLegend",
     DisplayFunction->(FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
     Editable->True,
     InterpretationFunction:>(RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                  ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                   Selectable -> False], ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
              ",", 
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                  ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0.880722, 0.611041, 0.142051], Editable -> False, 
                   Selectable -> False], ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}], 
            "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2}], "}"}], ",", 
          RowBox[{"LegendMarkers", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
          
          RowBox[{"Joined", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{"True", ",", "True"}], "}"}]}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"{", "}"}]}], ",", 
          RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
    Scaled[{0.99, 0.5}], ImageScaled[{1, 0.5}],
    BaseStyle->{FontSize -> Larger},
    FormatType->StandardForm]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\"", TraditionalForm], 
    FormBox["\"Computation\\ntime in\\nseconds\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{580., Automatic},
  Method->{},
  PlotRange->{{0, 222446.}, {0, 97121.133195}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{{3.6751581002444057`*^9, 3.6751581002593603`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.019444444444444445`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxTTMoPSmViYGAQA2IQDQYVbQ7qd6edYPW2cIDwpzh0XvbctovFE8JnW+iw
TPuGm01eFITfs8Lh51fnnA33kiH89Rsc7j3Z/uKJZT6Ef2Grw420ZNW0sAoI
f/ZuB0VZuUM/tjZA+JwHHcJfRQpkGbZD+J0nHD567LHxzZ8M4W++4BD4I0e2
x3w+mN+gds1hadZuzrDgFRD5P7cdDvP0qvOd3AjhOzx0CFnlcrOebRdE/c0n
DvwflrSmuhwC8x1OvXA4WRp86vz04xD1kW8d9u/SCjh47RyY/+DfB4fUR2GO
jSsuQ/g1nx1m6ryzn2R7A8wXWPrL4eizx1HTdj0G8xOiGR2DK60PuSu9BfNn
cLE5igseXRK3/AuYX6DO7ThBZKKi0LbvDgB8D3oG
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.019444444444444445`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxTTMoPSmViYGAQA2IQDQYVbQ6HDm/Jf1ds7gDhT3F4qVnUsYPdC8JnW+gw
iW371tbrERB+zwqHO41WTwP1kiH89RscxFpjRWyv5EL4F7Y62F7ZlhhSUw7h
z97twPgneFXL6gYIn/Ogg1Tmyj1729sg/M4TDondd+2y9SdD+JsvOHyXPZz8
fsk8ML9B7ZpDat4+wVb15RD5P7cdmkK/fgp33QjhOzx0MH44/ddC1u0Q9Tef
ONx/WJbBkX8AzHc49cJB+9v0uw+DjkLUR751iGGQWmodfhrMf/Dvg0NNwvH6
KVoXIfyazw7zFWU2O3+5AuYLLP3l0FexaXab7UMwPyGa0VH11L0gWY6XYP4M
LjZHmz3PHRa5fgLzC9S5HR/nWDn9mvbNAQA+rXsx
       "]]}}, {}}, InsetBox[
    TemplateBox[{"\"Cumulant\"","\"SRT\""},
     "LineLegend",
     DisplayFunction->(StyleBox[
       StyleBox[
        PaneBox[
         TagBox[
          GridBox[{{
             TagBox[
              GridBox[{{
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                  ImageSize -> {20, 10}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                  ImageSize -> {20, 10}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
               GridBoxAlignment -> {
                "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {{False}}, "Rows" -> {{False}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
              "Grid"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"],
          Alignment -> Left, AppearanceElements -> None, 
         ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
        LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
       Background -> Automatic, StripOnInput -> False]& ),
     Editable->True,
     InterpretationFunction:>(RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                  ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                   Selectable -> False], ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
              ",", 
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                  ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0.880722, 0.611041, 0.142051], Editable -> False, 
                   Selectable -> False], ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}], 
            "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2}], "}"}], ",", 
          RowBox[{"LegendMarkers", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
          
          RowBox[{"Joined", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{"True", ",", "True"}], "}"}]}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"{", "}"}]}], ",", 
          RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
    Scaled[{0.99, 0.5}], ImageScaled[{1, 0.5}],
    BaseStyle->{FontSize -> Larger},
    FormatType->StandardForm]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\"", TraditionalForm], 
    FormBox["\"Computation\\ntime in\\nseconds\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{580., Automatic},
  Method->{},
  PlotRange->{{0, 222446.}, {0, 97121.133195}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.675333440014625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"cumulantSizes", ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"cumulantTimes", "-", "SRTTimes"}], ")"}], "/", 
       "SRTTimes"}]}], "}"}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\>\"", ",", "\"\<Percentage\ncumulant\nis slower\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.674030126764138*^9, 3.674030183403339*^9}, {
   3.6740318311997004`*^9, 3.6740319104070683`*^9}, {3.6740438066371717`*^9, 
   3.674043807440316*^9}, {3.674044151757009*^9, 3.6740441714242573`*^9}, 
   3.674044726402782*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQYVbQ6bHU+2rQxfZA/hT3FwlNknaf1s8X4wn22h
g3hKmJlD/AaIfM8Kh1srklffSoaqX7/BIUK1UezHr+UQ/oWtDptm+jaxT4LK
z97tsOHMip1CgikQPudBhxfzZ3ovk58H4XeecDjaq7U7Y3EXhL/5goPQ5wZv
NeXJYH6D2jUHp+Vb49c8XQmR/3PbQV9Z6rhzI1S/w0OHJmUm6UubDkDU33zi
IGTpVTqvfw+Y73DqhUPUPasUD7vdEPWRbx0mvIg71pYAUf/g3weHn4znLqyY
cgjCr/ns0HJBTl5f+AiYL7D0l4PcaZVDVyoh8gnRjI4PRb7Yc/2CyM/gYnPU
fnEqI2o9xLwCdW5HRp67HkzZK+0B3S53Zg==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\"", TraditionalForm], 
    FormBox["\"Percentage\\ncumulant\\nis slower\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{604., Automatic},
  Method->{},
  PlotRange->{{0, 222446.}, {-0.038865897076043605`, 0.16388061640478838`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6740301850442047`*^9, 3.6740318957571287`*^9, 3.674031941178372*^9, 
   3.6740438101557007`*^9, {3.6740441604794283`*^9, 3.674044172711199*^9}, 
   3.6740447302872677`*^9, 3.674046507299781*^9, 3.674046700691066*^9, 
   3.674207548020618*^9, 3.6751579534772463`*^9, 3.675333440585556*^9}]
}, Open  ]]
},
WindowSize->{1297, 1005},
WindowMargins->{{285, Automatic}, {-9, Automatic}},
FrontEndVersion->"10.3 for Linux x86 (64-bit) (October 9, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 670, 13, 55, "Input"],
Cell[1253, 37, 916, 13, 32, "Output"]
}, Open  ]],
Cell[2184, 53, 3898, 93, 341, "Input"],
Cell[6085, 148, 15275, 381, 1045, "Input"],
Cell[CellGroupData[{
Cell[21385, 533, 1236, 28, 55, "Input"],
Cell[22624, 563, 97667, 1652, 225, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120328, 2220, 1969, 38, 77, "Input"],
Cell[122300, 2260, 26577, 519, 544, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148914, 2784, 1018, 25, 77, "Input"],
Cell[149935, 2811, 16596, 335, 519, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166568, 3151, 1424, 32, 99, "Input"],
Cell[167995, 3185, 13870, 297, 281, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181902, 3487, 10892, 233, 417, "Input"],
Cell[192797, 3722, 10753, 230, 417, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203587, 3957, 697, 17, 77, "Input"],
Cell[204287, 3976, 1705, 39, 433, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
