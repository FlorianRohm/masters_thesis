(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    135390,       2528]
NotebookOptionsPosition[    134599,       2497]
NotebookOutlinePosition[    134937,       2512]
CellTagsIndexPosition[    134894,       2509]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\n", 
 RowBox[{"SetDirectory", "[", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ParentDirectory", "[", 
      RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", "\"\<out\>\"", ",",
      " ", "\"\<schaeferTurek\>\""}], "}"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.672580864567045*^9, 3.672580918227888*^9}, {
  3.6727427728111067`*^9, 3.672742773818266*^9}, {3.673092250885898*^9, 
  3.6730922623248997`*^9}, {3.6730966099364223`*^9, 3.673096615247209*^9}, {
  3.673414915406108*^9, 3.673414940636346*^9}, {3.6734150082024508`*^9, 
  3.673415009611857*^9}}],

Cell[BoxData["\<\"/home/florian/Projects/university/masters_thesis/code/2D/\
out/schaeferTurek\"\>"], "Output",
 CellChangeTimes->{
  3.672580921609523*^9, 3.672742774503965*^9, 3.673092266565982*^9, 
   3.673092399911118*^9, 3.67309487776821*^9, 3.673096534000791*^9, {
   3.6730966112621403`*^9, 3.673096615646462*^9}, 3.673097538981443*^9, 
   3.673106763312909*^9, 3.6731068132105923`*^9, 3.673178281306225*^9, {
   3.673179627189455*^9, 3.673179639411016*^9}, {3.673253865153414*^9, 
   3.6732538810343*^9}, {3.67325394072723*^9, 3.673253956731461*^9}, 
   3.673254009404447*^9, 3.673414522560265*^9, 3.67341494249117*^9, 
   3.6734150101194*^9, 3.673436191195548*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"srts", " ", "=", " ", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"FileNames", "[", "]"}], ",", " ", 
     RowBox[{"FileNames", "[", "\"\<*time\>\"", "]"}], ",", " ", 
     RowBox[{"FileNames", "[", "\"\<cumulant*\>\"", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cumulants", " ", "=", " ", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"FileNames", "[", "]"}], ",", " ", 
     RowBox[{"FileNames", "[", "\"\<*time\>\"", "]"}], ",", " ", 
     RowBox[{"FileNames", "[", "\"\<srt*\>\"", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getSizes", "[", "thelist_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Read", "[", 
      RowBox[{
       RowBox[{"StringToStream", "[", "#", "]"}], ",", "Number"}], "]"}], 
     "&"}], "/@", 
    RowBox[{"Flatten", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"StringDrop", "[", 
        RowBox[{"#", ",", "4"}], "]"}], " ", "&"}], "/@", 
      RowBox[{"StringCases", "[", 
       RowBox[{"thelist", ",", " ", 
        RowBox[{"RegularExpression", "[", "\"\<size([0-9]*)\>\"", "]"}]}], 
       "]"}]}], "]"}]}]}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sizes", " ", "=", " ", 
   RowBox[{"getSizes", "[", "srts", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"permutations", " ", "=", " ", 
   RowBox[{"Ordering", "[", "sizes", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sizes", " ", "=", " ", 
   RowBox[{"sizes", "[", 
    RowBox[{"[", "permutations", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cumulants", " ", "=", " ", 
   RowBox[{"cumulants", "[", 
    RowBox[{"[", "permutations", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"srts", " ", "=", " ", 
   RowBox[{"srts", "[", 
    RowBox[{"[", "permutations", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.673092281613497*^9, 3.673092290876423*^9}, 
   3.673094976793765*^9, {3.6730964378285418`*^9, 3.6730964379402227`*^9}, {
   3.673096595270143*^9, 3.6730967006344633`*^9}, {3.67309673412918*^9, 
   3.67309677047873*^9}, {3.673096848697874*^9, 3.673096928431641*^9}, {
   3.673097156474986*^9, 3.67309722552532*^9}, 3.673097270216393*^9, {
   3.673097354487135*^9, 3.673097414369615*^9}, {3.6730974465690536`*^9, 
   3.6730974555206947`*^9}, {3.673179096289462*^9, 3.673179104703719*^9}, {
   3.673415053109758*^9, 3.673415069168283*^9}, {3.673436278736169*^9, 
   3.673436292696931*^9}, {3.673436336923253*^9, 3.673436338273733*^9}, {
   3.67343637332915*^9, 3.67343637734184*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dragData", "[", "input_", "]"}], " ", ":=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", "3"}], "]"}], "&"}], ",", "input"}], "]"}], ",", 
     "00"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"liftData", "[", "input_", "]"}], " ", ":=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", "2"}], "]"}], "&"}], ",", "input"}], "]"}], ",", 
     "00"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"valuesOnly", "[", "data_", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Delete", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}], ",", "data"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"myImport", "[", "list_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Drop", "[", 
      RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
    RowBox[{"Import", " ", "/@", " ", "list"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dataFrequency", "[", "list_", "]"}], " ", ":=", " ", 
    RowBox[{"Abs", "[", 
     RowBox[{"Fourier", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", "list"}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maximaPositions", "[", "list_", "]"}], " ", ":=", 
   RowBox[{"1", "+", 
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{"Differences", "[", 
       RowBox[{"Sign", "[", 
        RowBox[{"Differences", "[", 
         RowBox[{"list", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
      
      RowBox[{"-", "2"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"minimaPositions", "[", "list_", "]"}], " ", ":=", 
   RowBox[{"1", "+", 
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{"Differences", "[", 
       RowBox[{"Sign", "[", 
        RowBox[{"Differences", "[", 
         RowBox[{"list", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
      "2"}], "]"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lastWavelimits", "[", "data_", "]"}], ":=", 
   RowBox[{"Flatten", "[", " ", 
    RowBox[{"Take", "[", 
     RowBox[{
      RowBox[{"maximaPositions", "[", "data", "]"}], ",", 
      RowBox[{"-", "2"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"lastWavelength", "[", "data_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Differences", "[", 
      RowBox[{"lastWavelimits", "[", "data", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lastWave", "[", "data_", "]"}], "  ", ":=", " ", 
   RowBox[{"Take", "[", 
    RowBox[{"data", ",", 
     RowBox[{"lastWavelimits", "[", "data", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dragResult", " ", "=", " ", "5.8190"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"liftResult", " ", "=", " ", "0.0110"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"means", "[", "datas_", "]"}], " ", ":=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{"valuesOnly", "[", "#", "]"}], "]"}], "&"}], ",", "datas"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bothLiftMeansPlotReady", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"sizes", ",", 
        RowBox[{
         RowBox[{"means", "[", 
          RowBox[{"lastWave", " ", "/@", 
           RowBox[{"liftData", " ", "/@", 
            RowBox[{"myImport", "[", "cumulants", "]"}]}]}], "]"}], "-", 
         "liftResult"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"sizes", ",", 
        RowBox[{
         RowBox[{"means", "[", 
          RowBox[{"lastWave", "/@", 
           RowBox[{"liftData", " ", "/@", " ", 
            RowBox[{"myImport", "[", "srts", "]"}]}]}], "]"}], "-", 
         "liftResult"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bothDragMeansPlotReady", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"sizes", ",", 
        RowBox[{
         RowBox[{"means", "[", 
          RowBox[{"lastWave", " ", "/@", 
           RowBox[{"dragData", " ", "/@", 
            RowBox[{"myImport", "[", "cumulants", "]"}]}]}], "]"}], "-", 
         "dragResult"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"sizes", ",", 
        RowBox[{
         RowBox[{"means", "[", 
          RowBox[{"lastWave", "/@", 
           RowBox[{"dragData", " ", "/@", " ", 
            RowBox[{"myImport", "[", "srts", "]"}]}]}], "]"}], "-", 
         "dragResult"}]}], " ", "}"}], "]"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6725823422599573`*^9, 3.672582435965885*^9}, {
   3.672582483626233*^9, 3.672582580297577*^9}, {3.6725826157311993`*^9, 
   3.6725826514299593`*^9}, 3.672582733238015*^9, {3.67258285577174*^9, 
   3.6725828768205357`*^9}, {3.672582915434342*^9, 3.672582931154652*^9}, {
   3.672583051520362*^9, 3.672583143445752*^9}, {3.6725834005312138`*^9, 
   3.672583443083358*^9}, {3.672583723379056*^9, 3.6725838574641533`*^9}, {
   3.672583942786408*^9, 3.672583952521698*^9}, {3.672584061564065*^9, 
   3.672584103662696*^9}, {3.672584260547956*^9, 3.672584260693316*^9}, {
   3.672584337701766*^9, 3.6725843395023746`*^9}, {3.672742877666991*^9, 
   3.672742909546678*^9}, {3.672742969026902*^9, 3.672743080769724*^9}, 
   3.672743136959605*^9, 3.6727432439745407`*^9, {3.672743275275635*^9, 
   3.672743351439465*^9}, 3.672743512564859*^9, {3.672743580048732*^9, 
   3.6727435968908243`*^9}, {3.672743729873472*^9, 3.672743747047391*^9}, {
   3.672743873490389*^9, 3.6727439252413282`*^9}, {3.672744110911214*^9, 
   3.672744184442321*^9}, {3.6727442495330753`*^9, 3.672744251723825*^9}, {
   3.672744452428982*^9, 3.672744462862565*^9}, {3.6727445693917313`*^9, 
   3.672744577239976*^9}, {3.6727446198354807`*^9, 3.672744631925819*^9}, {
   3.6727447879928637`*^9, 3.672744803917776*^9}, {3.672744857740005*^9, 
   3.672744888976384*^9}, {3.672744971699565*^9, 3.672744989726317*^9}, {
   3.6727450621841087`*^9, 3.6727450730437717`*^9}, {3.673092323618346*^9, 
   3.673092355657235*^9}, 3.6730924225991573`*^9, {3.67309470161208*^9, 
   3.6730947930644617`*^9}, {3.673095397154846*^9, 3.673095497779792*^9}, {
   3.673095586671095*^9, 3.673095706470841*^9}, {3.673095740710279*^9, 
   3.673095807921278*^9}, {3.6730958656464243`*^9, 3.6730960781827183`*^9}, {
   3.673096127297567*^9, 3.673096208592517*^9}, {3.673096242238391*^9, 
   3.673096255410585*^9}, {3.673096314961526*^9, 3.6730964262761183`*^9}, {
   3.673096465780074*^9, 3.673096551988276*^9}, {3.673097591598633*^9, 
   3.673097714353991*^9}, {3.6730977999188643`*^9, 3.673097814949197*^9}, {
   3.673097852418723*^9, 3.67309790115189*^9}, {3.673098297598981*^9, 
   3.67309831155046*^9}, {3.673098381935115*^9, 3.6730984201530523`*^9}, {
   3.673098542652975*^9, 3.6730985969749403`*^9}, {3.6730986357672997`*^9, 
   3.673098639644178*^9}, {3.6730986763263683`*^9, 3.673098721952839*^9}, {
   3.673101564452183*^9, 3.673101669566852*^9}, {3.673179147293709*^9, 
   3.673179148717812*^9}, {3.673253877271194*^9, 3.673253878480727*^9}, {
   3.673254859015711*^9, 3.673254874751411*^9}, {3.67325506261771*^9, 
   3.673255076321726*^9}, {3.67325523332264*^9, 3.673255274439952*^9}, {
   3.6734145504137297`*^9, 3.673414552271616*^9}, {3.673436439431796*^9, 
   3.673436459755628*^9}, {3.673437019236994*^9, 3.673437032234561*^9}, {
   3.6734374249199343`*^9, 3.673437532737412*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.673437341601285*^9, 3.67343742281246*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nr", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"liftData", "/@", 
        RowBox[{"myImport", "[", "cumulants", "]"}]}], ")"}], "[", 
      RowBox[{"[", "nr", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"liftData", "/@", 
        RowBox[{"myImport", "[", "srts", "]"}]}], ")"}], "[", 
      RowBox[{"[", "nr", "]"}], "]"}]}], "}"}], " ", ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<cumulant\>\"", ",", "\"\<srt\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6731791677427807`*^9, 3.6731792456563168`*^9}, {
  3.6731793224885817`*^9, 3.673179332835672*^9}, {3.673179379895137*^9, 
  3.6731794204450912`*^9}, {3.67325403668749*^9, 3.673254042655818*^9}, {
  3.673254690928667*^9, 3.6732546949033947`*^9}, {3.673254728783787*^9, 
  3.673254742606955*^9}, {3.6734146443442163`*^9, 3.673414705168442*^9}, {
  3.673414736134857*^9, 3.673414742906065*^9}, {3.6734365487085333`*^9, 
  3.673436635091669*^9}, {3.673436707805883*^9, 3.6734368174036007`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw0nHlcjF/7x0ORLGWJrN+shShJQvJBFEK0CElSKi2mfa9p32uarZkpiUIR
FSF7yVIKRSVrUcieJCF65vdz3c8/z+v91T3nPudc5/p8znXOzBS7/Vsc+svI
yPgMkZH5v/////+VmeL7JLnNM+Mbr/37D5tRWOrVZvWCGJtR91nonKf56B+z
N8Mw2ni1ehBx2WYEqBvOflJOLLMF0eevVioPbKLnt+DquFCrSGNi9hY8NCyy
jY4lLtuCTx23K9eVE8uYoWmFvljynXneDJOmLC12nfGYnjfDcPMZb202E5eZ
YeOK7oDpAcQy5jCbPmrgjEximGNnxeD73ReY580xN2GWV8QD5nlzaNTMWTTy
DfO8BQbbVqS1djHPW6AhNGND7l/meQuoqyttKun/hJ63wOLgp3q1MsQyllgz
xXSF7k/meUuIAqwWz/rIPG8JI/Vut6THTPuW0N7yhadYzrS/FWo3JE4Jh5nn
t2JYS9uUwaHM81tR/616YKYZ8/xWXGG9nrVsGvO8Fb7yPiq/+MiMnxWSVYxb
/YuY8beC9HXslNyZ8bdC9agFgvwZzPhvQ1X1umnrHtF8YhtK/6SF/4pg5n8b
+t+MK7qlzsz/Nricf/rhciUTP9tRe2kV76MdEz/bobo1IXrvjwZ6fjtiolUW
G8QQl22Hqdv49QmKxDI7cOnZ+kn2vHp6fgesWFlqb0cQs3dAY0X+Oa3Eh/T8
Dmz7njnFtu8BPW+N2qBtw9PdiWENm7NHQ3421dHz1uj1Sjtx0oC4zBpFg+Q+
Pj1YS8/vxOhRK+fu/Hmfnt+JOT0Pf+ccv0fP70T1l/MP2s3u0vM7sfJv6OSk
79X0vA0enP45oTP1Dj1vg7GBfTcjplXR8zbYct36Qn7RbXreBq5mD5QaF92i
53ch0kN9ReCFG/T8Lvi8nvBriG4FPb8Ly5Mr5WVPldPzu2D7fuPCF1PK6Hlb
/HL10taefuUfq9piCaflpcvfC/R5trDW/9nEenjuH9vagv+dPWhD7hn6fFuM
3LbhgJJn0T/OtoVkk2TfwaDj1J4thM5zH6wakfuPW2yxtdXZKHZjBrW/Gy1F
VXn2fUnU/m70oL3ULm8Htb8bP19W9HT0RC//1/5uaFU2RF7LTv/H7N0oQv+z
LWMO/+Ps3UgeHrHPb1PePy7bjVXlml+e+p36xy274ehWHNa65vQ/lrHDBasl
+QFGZ/+xqh16kyU2qfql/xh2sL9bvl9uxiVq3w6/R+s/vdp3hdq3gw1PK6fW
oYzat8PQR3H37lSUU/t2UB2pudlwXAW1b4envAsnzzrcoPb34LrzxPPivJvU
/h7c3DPkttvLW9T+Hvh9UfhdrFhJ7e/BXtcrHu+0q6j9PbBedzNKsu4Otb8H
TT9H/N1oWU3t74Eo3m0t36KG2t+DQQu0jv42ukvt2+Ojndh6/Nx71L49pvRN
64qXvU/t2yOKK7Bvv0tsa4+uzTaqroa11L49TEMGsdgS4mx7NNl7rx70jrjM
HnUhYWaPNeuofXvEnmn9UudOLOOADUpzZ9w/QqzqAA31CxXF9cRwwLXdqZ47
fxPbOkAuJvFa6bgH1L4DSmzU5p3UJM52QPfYBkO1ZcRlDtj3bpF4zEriFgeo
tDs8dTMgltmLAqthLVO1iVX3QqPPJn/eJGLsxcrHF9yT+5j298KkXD3H4DEx
ey9ClhT+MjxOnL0XW3Ws3I96EpftxasH/Za7ajP9l/576svuw8z4yDhib0WV
83YRsaojAprnlhwxIIYjVj++7KF7gRl/Rwy692tJfhvNF9sRpZ9NE5/30Xxm
O+LK1kLxqCHEZY64ePDdn7SBzPw7YsgJi4NHOileZJxg9Kcp+9B9iidVJ8zd
v2dd8wGKNzjhudGrL1d23qb2nXDo1tGGw4oUn2wn1OatH/nzDMVzthN27Rrj
Pn89xXuZE/xety6/3kDrocUJH9IOGqmZ03qRccb8iryhFcm0nlSdMSr1tNpn
64vUvjO+HDNrez3mPLXvjNbqtstVl89Q+1LuurT8+qYiat8ZjYK7pv0O51P7
zri/d/W74EjKDy3OaPt+pv5bkpDa34esH5H5G1zDqP19KPj2YULujGDKP/ug
5nJi96wJQsp/+8DX2N1mc/ww5b99aOEbmplaUb7L3odbcu81NyoUU/7bh66Z
MfW6n0so/+3D/Zn3Ur0aSyn/ucBiQl8qt/wy5T8XXLLalKu4lfIzpDz3R/jm
DdepfRd0hfx36cFKyvdsF9ye75TfqEt6kO0C/30KHtnqldS+C06Wh5p4jSV9
aXFB9JjkJm7/GmrfFWox2bar3pE+qbpiYOCyOXfuMHrmink+i1p1H5Le2bqi
wEVh9qUrjD66YuvQL++FuaSf2a6YWeWuz4pl9NYVd1jLWZ8dSI9bXGFy3VHv
4nJGv93wyvZrdcho0n9VNzxQ/m/I61bGD7hhXf6InAMnyT/YuqHMtlprqwfj
T9xgYxO+p2Ie+ZlsN2h2z50sfM34HTdoXDIVRQvIb7W4YXrNvZB1Bk+pfXfM
9XkzLLuZWNUdfTy1xYYBz6h9dzxZ4HD1h8Jzat8dvJVpa0L5xGx3YHFQWJby
C2rfHd+2OSycmkJc5o6kInuXxj/ELe5oZcV6Jto3U/v7MW/Y2b7R14lV92No
/BTVGUNaqP398K/L6I7QIrbdj9tfRfNGbSZm78e5+UF3brkSZ++Hy5H1JziR
xGX7seqmJN1BQNyyHzJqBSv0DxPLsODh895k2HFiJRbGl+VueVhArMoCBox4
k8D8uxYL+SmCdO0c5v2kf+9k+eOOkNiUhfVvBqVbRjPvy0KmkdyQJ+7ELBbs
s/Lf7zBj3p+FbM+P99u0iTks3Ji6wjJsGNMfFo4Eesxn3aLxKWJheXaVzVIn
4jIWON96t4bLENeysFIgnuOYyow3C4siM6qUmfnpYMFy38qeC2k0fzIeaNRy
NIqSI1bywM2/lv3zWTT/qh6w9JyravuQ4kPLA8duntF+PZcYHngztNzMj03x
ZeqBRY8nj9hWTfFn64FXM79a1g4nZnngaWau1cz1TPx64C3Hzv8Ym+Kb4wHf
Z0pzcwop/rM9oBH85I1LE62XIg+UzFjfafmb1lOZB4Z69267rEJc64GlY57d
6tai9dfigYW3lHbtMaT12eGBiW+jcnab0fqV8cTk45NMzGxofSt54s1009V6
1eRfVT2xs2HwhVUPKV9oeWLEp1Vv0hsYv+oJTUlq98CHlG9MPXFRLOp2qKF8
ZOuJDc+82UnXKV+xPCF59HOP+TnKZ2xPVB7T2SDOo3zH8URPuc8Dlg750WxP
TKloGKmqQn60yBPDs4QJf/9QPi3zxL0qb93qt+Q/az1x+dQOJJzKp/57Qrfe
SM8i8xD13xPFCrJjX+nxqP9eONF3YpfmDBfqvxdWXbIz3BoYR3rgheE7F66s
OJLxj7W80P12yLv5jkdIn7xgPqPinHZTwT829YL6zXuTNo4gf2nrhfs7KmZK
DpG/ZHlh34CHXx0nXCD98kKbdeOa2SGX/zHHC+mXPTutb14jPfPCuZ2pV1YG
kH4WeWFj5Kh34n6MvnpBIVKd3S+I9LfWC3Zfmt/UtJGfbPGCTOCG0xYGpN8d
XgivmPrjdwzpu4w3ass3C2ZeJf1X8obdmwz2qlbyB6re0NrTIlf5nfyklje2
6SkMm/+d/AS8ofc0cOuAl+Q3TL1RH9N4sbqU/ImtN2boTbT6L5j8C8sbz7j+
bzcoM/7RG6O7os99203M8caBA48LmnIYP+mNlps5L5qeEBd5Q/6AQ2f9QMZf
eaPU6YzWaTXiWm8sdOxM276M8VveMDQbc+eyEXGHNwz0d2ypWcP4Tx/MDZX1
CF9CrOSDAccmL388lfGjPmAd2lDQ0Efta/lAWHeCHVLH+DMfPOi9Yv0sndjU
B49fRp/vb0Zs6wPN2HNP5AYQs3zwt1fzYt8mGg+2DyrXaOn+F0XjxfGBu6PO
juLDjJ/zQdW7AVcHFtB4F/lgvL7ysoBsxt/7ILr8fqsLm+ar1gcfj/vfWWdC
89nig/zWu50JsjTfHT7w1t095Xg++TcZX3gfP3Nmnj7Fi5IvAq5M8jp2meJL
1Rd+sQn2J+Zcp/77omDUYMHjePJv8EV3auCt4kLyb6a+4NzbnVioQf7N1hdG
KwZPVEk6R/33xRI/1S0O92l9sH0xM+bA/mUdJ6n/vpD0Lf1RrHiU+u+LTveZ
AQ0ymdR/Xygb3HkoPzaW+u+L/L85ojNvvGn9S9vrZKPYiPxaiy/GtfVk5lfn
0Pr3RUuX6c8MTgGtfz+oHFsZ5H/+NK1/P4TE1vx1nX+e8p8fnmsGKi0ruUT5
zw9Rm6a+/zmZ8Wd+WKs/ZN/6vZTPTP2QwvvgOKqQ8p2tH2KHDV9r2kP5kOWH
7xnctr9g9vd+ePX3x9fxcVQP4Pjhw56ggIM15Mey/WBpr5hTMZDyc5EfjowU
FLyZztQj/GB3wadQF5Tfa/0wcvbSkdpWTP73w8Fh4wdZuZI+dPhBaaD/bfVg
xn/54/Nk8f0ZsaQ3Sv7Yl7h6/IMk0iNVf8zIMLU+nUR6peUPyYt7yzfEMPUm
f6yWbc2aE8Donz9qWr5eabInfbT1x80HE6JfGZOesqSfd+tR6ePpjH/yh41i
zPwtPcQcf2xa+nRE63XGT/kjesav3zOjGP33B+8IZ+qLSYy/8cdvi5e8w97E
tf7Y/LL754JbjN/xxwb9b1mOI19S//1xMsNFTnkbsUwANtlf+qMsIVYKwB5L
k4trGohVA7C7/41X0QqvqP8BiMhTPFqymBgBGJuwpvqcHbFpAEIk28o9o4lt
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
cCpgmPwL2t82RcHLNCJkeh/l75YoyI99PeKvAuX79ig0Dr3xuViJ2e9Lx+O4
8/nxSqQfPVGYXP/f2Dx50huZaDS16z6q+UksHw3n5eHafa9In5SiUfB3mdoF
xg+oRCNfTvO2fwaj/9EY6CaOLnMmfVWPxqvVXyPGzntH+T8a7DPfGga3E+tF
45L+9zr19PeU/6MxsVpr3ZClHyj/R6PvzKu6DQ+JTaOB8/1/cnd9pPwfjXGv
PaMjm4lto1Gqws67t+UT5f9ojN6VojX7AjErGkf/e3Zuy8jPNP/RUNu5omqI
DTE7GtwBTxRVM4njouGdm+a+u4aYEw2zoTFT8z8Ti6Ix5cXyp4/6f6H5j0b3
7Ov3G+SJ86JREeR3nytDXBSN9oX9Nw18T8+XRsOHK+OheZO4LBohJ2sUlLnE
ldFwvGpy5KYpcW003G68DNjaj7gpGloLY13ac6h/LdFYuFS394AecXs0vE4f
MDhyjcanIxoyjitvaC8m7omG06MxcRFHaHxlYvA0KLPhkSyxfAyuQ6IRspXm
RykGS3N8p9w4QPOnEoM/kuVL5JpovlVj4GjoUHlwIDP/Maiz1rr2cxbj/2IQ
tb07JmwlxY9eDOrfDb2bY0rxhRhccQkzbTan+DOOwf3eyBNFmyheTWOQeLx4
XOYKimerGFgc71kyZw5TX4oBd/W2hx+Hkr9xikHY54vD392j9cKKwa2FJ2ef
9aX15B+D6M4bY/xGMvfjYjB1a1jX/hzaH8TFICSjc237bNo/cGJwTLl7u+Zx
2m+IYmBtxurRWU3nY9kxWHuos0x+Du1f8mJwuH51mUie/ElRDAYbKn22LKf8
UhoDubsjbSe40v2pshgY5+bfXDWP7hNUxqD1y3fLilAvyv8xCIpeMfpmN9XD
m2KwuPxUL/8knSe1xCAn1nfA00rKl+0xiMPmyKpWOg/qiEH72FkvRz4gv9Ej
fZ6T1RBVQPUNmViUbjrPn19K+Vs+Fkob5TpDhtH+WCkWlYEmwfXmpAcqsdBc
NeRHO7OfV43FLpXQMt+SJ5T/Y/Gx1CVrxR3SH61Y6JZNiRlzl/RKLxaH5PZr
vtlJeoZYuJR32Bxex+h/LOZFXtigq0H6aRqLQk8l9uT+rZT/Y8HZXln/vJrY
Nhban6Y8/BPXRvk/Fltdn34bvvg16X8srgXOe533lNg/Fo4+wVX7WG9I/2Nx
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
1JzWV0cSGv3uGI6ZQ+uvJwlTf96/8K2duX+djHyjKReDptJ+Qj4ZSu02P7Iz
s2n+kzH+9PdOdw6X1n8y8o5OObvwFN1vVk1GyZex26yqrlL+T0a6kd1Dxx90
Hq2VjFlT1j35lEj+RE/6fJJMl2sq+RMkY+IgEze7RvInxsmoXHJ00bRxlO9M
kzHDuzPwtwXlQ6tkrDC2jdVLpHxpm4zXDrnP+E+Z/V8yTibkFCm5MvctklF4
682jJd2Uj/2TMaT8Qh0CaP/JlvZ3dmzvli7K53HJiDxlNvzIXib/J0N267Rk
9/ukD6JknG+4sebDXNKT7GQM3u97e0c46U1eMhIan92TqyI9KkpG7usb13Vk
Sb9Kk7H0kUBxEuMvypIhliR81c0nrkzGsPfPgsdqk17WJqPh7sP7HmeIm5Kh
fbXoZa8Go//JsF2SVeSVxei/dLznyLkJBn2j/C/9e8N5h2c4EfckA/ky1h+v
EcukYEbgrbXnhndR/k/B6nf1z83NiZVSUKz4xzmLQ6ySgisyZ/XcK4hVU7Cu
+fXh3I/E6imw8Nk2VW3od5r/FMw9eMm2ZQqxXgrOGS9bVTaXGCnS/dqzzkua
xMYpWOC58+VdNWLTFLT2Dqv+rkxslQKVcKezer+oPdsUFAw88j67nthJyp9t
OpcdIWal4JLL3tjprsT+KfBa9yDBfRYxOwWxDX5dS57TeMSlQN/uTdnJWGJO
CvzDBz3/ok4sSoH74VBFzXIa7+wU2Kf9aD5gSpyXglepwcFejxj/l4K1dt2Z
HywY/5eCTM1v9mtqmPlPwd1D11dVLmHmPwWfwkcf9VpF8VKbgu3DhY73+zP1
nxREhj99aFhC8daSgop9Ja7BVhSP7SlYUrG4eUYHxWtHCti1OP0jiOK5JwXD
Qnq+nuplzv9Scdy1uGm4F60H+VSMcazxbmmm9aKUirLs8vWdq2g9qaTi/GDt
X2OzGf+fimTTZ4fM3lO9RT0VBfpXn8vH0XmRVirYj4IKlSZQvVMvFaY3xisu
OELnQUiFzTKxnIE6c/6TCj0DfvJgE/IrpqloCNgXfwV0v84qFXbD4jol9sz3
0VJx+IFWx920bJr/VBwRCFcfUKfzbVYqDhgWTlW+S/dL/FPRuTJg48JnlP/Y
qXieWxa24zrlx7hU2D945LNOwNzHTMXdsy0FJ/JofyhKhdHwxhOsn8z9jFQ4
TDnwetZS2m/mpeJjg+/C0a7kR4pS0Vi7pNQ7gfJ9qXS8Ypo+mzD1jrJUaH/q
WeJ+g/SiMhWDsyuta7VJX2pTsaD7/JETfNKfplT4fgkft/wd6VOLdHyqBryt
1WT2/6kYtnvps1OOpHcdqVg17H39PA7pYU8qXlTbTCvMI72U4eDh0U+dwiLS
V1kO3IwO51geIz2W52DWpJuTnRh9H8rBx0l3p23a9YX0gQPFN2dv1Sh2/OPR
HNxT0bm9fy+xCgenPw78tvsM8UQOhl0ePDCwm1iVg3Dj97P4ml//8XQOitT8
BnBtiNU5OHzi5KXtkcQaHBjMTJF9eoBYi4PIV63j5E4R63AgyZ5wtfYMsR4H
Vpu2LlhaSKzPwXO3z1pG2cTgICNU0NAbQ2zIwcQjjkLnPcTGHPT5DZmTvZDY
hIMZJ9f7lf6h9zflYO+2nZ73LxGbc9BxYc7QQSxiKw4s5v1QihlPbC0dX96k
sR2+NH62HOy3+2YynvFT9hxY+oeodF2n8XfiQHmTasqXuzQ/rhxsHN0Psbdp
/lgc3Mm+93tZEc2vNwfOP8fHZcUxfoeDqfLuu5dupvgI5qD7wAy/Uwrkd9gc
jFed0y46S/EVxcHFEu9rh7dQ/MVxcO6DXlHgK4rPJA7C9PLqGhwofjkceA5/
fubFRYpvPgdasq5FSnyKfxEHp8zzntyzovWRyUGEllCuWIHqMdkcrNeI77M6
Qesrl4POvJOfW/1p/eVxMHmaYemuMFqfBRz8yFrkfsCN1m8RB7+Wp/4ySqH7
xCUclJ+/M90gmEPrjYNLpWejdzTSee9lDgpbrUzGD6b9Tpk0HjYb2Bx7TPuh
GxyI2y7mz55P9+0qOVgee9ryxCryKzUc1B0yPbXgI/N9Cw4CD7Q5r+eQX6nn
4HjQqEOK86h+0sTB4oOmHlkVVD95xsHPB+4ySceoft3CwfdPTys2OVK+bePA
v6ds3jxVysftHASYlUQvq6N8/ZGD1c/dtdIDKJ93cODQ9M3QSoX2s10cHAt9
MvJwAelBDwcnX/Q/JVlIfqSXg54dfX5up0lPZNIgG3jh4YwRpD+yaeDc2rpX
9zqxfBrW5rnlD3Il/RqahtPXQkP1hzP1gTSYnZ1ZGJRHPDoNF/okM1lLSC9V
0jD/pIl6VQXxxDQc1XOKXGLI+Ic0WL5QqAi+RDw9DTDq2L5hFum9ehoOH4iq
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
GarHWIkROPz5y28Suh9jLcaT9sTqqxfp+0q2YiziyAX53qbzJHsxSpaMqB1Y
QedJTmKENA68UWVD50muYhz2K7k4cRLdh2FJxy9mrt20BPp9JG8xAjIyfsq7
0O8f+4uhs2VJndUnDum/GEs01v6Wx1nSfzH0C7n2w9Xp/kuUGF6DK3dGF9P9
lzgxHjiWdylOpPOjJDHqW/brVu6g8yOOdD6WXMiqYH5fly9GuYWO3ZPbdH4k
EuOE9ZDPnX7kXzLFSPeofNISTf4lWxpPtxwTjyaRf8kVY1Pp6o6FieRf8sTY
3+HVHclmzv/F6P929Jx4F/IvRdL2Vj60Xbme/EuJGFdOJFkWT2bu24qxY+T4
QndP0ofL0vGs299v30bm+zdi2D8MaKyfytT/xQjdd2TKsi/M93HEWHdes03n
DOlTjRjGWxYGbHEn/aoV4+eJmhdaqqR39WJsWH7t9/5K4iYxvtZGvSzZy+z/
xUgrma9w/Bez/xfjXdlgbl8k6WubGG6zgl1d+pMet4vxUBn8fB/ij2I4DNup
G/ycuEMab+5Nj04sZvRfjLroJp9BCYz+i7H5Zf9s+3vEvdL3u9iRdHAg+Q0Z
CV6F56hnaBPLSnDySc/EFVuI5SV4eUqnPtyBeKgET6qf+pi7EitJMCpp0otz
e4lHSxCwZTnnpDmxigTH9R1yV+kST5Tg6d2FxQlDiFUlOCGoLJbU0/tNl+Db
ws3taWnE6hJscX1/hb+SWEOClNb2g3ffUv+1JLg4VfGpK3NepSPB33myPnmK
xHoSDFZ2k73MpfHVl+DWfrm4dgViSOBg+98yb3+aD0MJdJsbfI4/Ze4jS9CR
uXT/Ux3m/E+COffPqFlH0fybSjDyVszCmDsUH+YS+PUeO3CeuX9tJcEC78zj
W/QpnqwlYPFNK644MfU/CapCLq7Yk0zxaS9B3Y0ZXDsLil8nCX7mKixaEEHx
7SpBn/PyF1MPU/yzJHDJuhQ59RytD28Jdllrbpt1jfH/EuTXLXDWuUrrK1gC
4ZhNi9aU0PpjS5A5d6X13sO0PqMkCMvU1V85ivYfcRKsZasMGt5I6ztJgq6R
s29YpTLrXwLH+I13N6+g/MCXYDbr827rZ5Q/RBKsMbi0dZMW5ZdMCaZcYG//
LEf5J1uCxaf63uklJ9P6l8Db/9Qt+5knSP+ln/dk81DxNbr/UiDBxm86amte
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
21H/XqIgKGva5ZV2qJ8vU5Cz9PbeMCvU31cp+P1FZ3zOZNTv1zh5iGajDYn+
v07Bp1ktjrlVpJ+Vgq/bT8ZFpyJ/3Ob00/wEv92uyC85FHS4aouefEP+yeXW
d43VjpNHkJ/uc/qmau+O3TLIZ3mcfh5/4WHSbcQFnP5PGN911x/57xEFexbx
hiQNRb4spCDW8vVAUTriIgp26lXLjzBCfn1KwVTT85c0LiIuoSBsl9fPDG3k
61IKLlc9F56IQ/ySk1/N+PGHWkj9LPc9G59e87dF/q+kYOmlRSkjSX1LFQV3
Q71b1pN8TzV3nh13XJxP7JcaCqz3Kb3kD0V7pJbTh7ZntHZoIn5Hwab641Nu
6SBu4PTDrgCT0AmIGynY8emQLK2IuImC0lL6R2A7qcfh9PczSlSWj7iFgmGj
jj79ReyrVgqCF742UXRC3E4Bz4rno/8Tv6+Dgp4BwYm9PMSdFIyKyvCZb4O4
i+PHcL/blwpx/bopyJ7qlTLojLiHAh27+1W7C3D9e7nv2TlbdiOJx/RRIKgf
bTksCfevn3u+T1n93S+k3pf7/Z590hd2iP9QsMGh7rCNPNozMiLo87Lb++cw
2r9yIvCdVfHuxheUr6EicL/hflzbCe1nBRHsuP3JTvkc2teKIvCftHOX5wuU
XyURSH0nq74aQPkeKQKBs//ooEkYj1ERwdFnjwIGZ2I8RlUEcDFg6kA09lur
iaDVv1f9wT6s71UXgW3G1tPmwVjfqyGCsU0f9Ba7YDxGUwQ28tvytC2wvncC
977XX9hp3sH7BLQ4vK14h/NKvH9SWwT3Pm2UozYk/4d1ufd/7bz3/W7sT9IT
wY+qu35m5D4AAxGYvytaU3UU+wkMud/ve+VVOhHzSUYiWHU6w0huJ86DMREB
I4lg1zwh/Qrc3+8e8GBUMZ9kLoKVDtqGqy+S+5RFkG0TeJcpRH05UwTsIdmX
Bm9Rn1qJYK6oIfDxJ9S3NiKY9nLxwrA2cp+OCPZsORs9oRn19RwRJO7wsb1X
QeodRWA3o8LD9Sbq+/ki0G6t+tviQOaviuDyrLD5NMkn2YtAUqS0/sNQ5BcH
7t8PPD1k+haxkwh+nbv1dJQE+ciF+35dbaluEPLVEhGkz+3T/0HmvbmKIG+6
qqlxJWI3EbRdjyxfT+otVohgwoLmc7NJP7CHCE5olf8vSELmqXDyo1n2lmeK
/OslgvsXJ0Unsoi9RfCnb2jpAOnnWSMCVZ83Zy/uJfEWEWwqXzEuoILwvwgy
3cb69GuR+IsIdB9PVHNZh9hfBHOmfq4wPUPiMSKIKIhUSLiFOFAEY950y3iV
kfiMCIwSN/YceIc4WARNVhs7/xAcIoIDvYklteWIt3P7X1qnOyGHxG9EkPVq
3fTSJMQRIvg2e0SBwkYSzxFBvM6AUose4t0i+O2483xCDX5PlAge2Xmp6Mcg
jhaB6RwXoxodxPu530d37mjMxvU6KILQlhtmu21J/7cIitkDem9v4HrHiOCn
YXa0G6n3PSYCvbNdibrxuF+xIjir15Yv+IT7GSeCT+P8lkyahTheBOO8b2r9
OIjykCCC4a8eXz76AOUlUQRuGyxemvxL5seI4Mm/FXErdBEnieDgZMNvvo5k
ngynnyrP9jz2R3lNEUFNy87Ypu/kPgYRPPgu1ctRRXs9TQTP29y//NJDe57H
6SunDbuFxmjvC0TwUqkjkJ2C/gDF/XvBnFFqmugviEUwdIrzqC+y6E8wItj/
Z+O3+R/xvLIiSOs+E7LgMJ7nDBG0KAX1OE3DeMwlEQRX/KoprkB9cFkE9LTi
vIEw1BdXRTAy0W3cInXMT1/j1mvGti3fT+J8mOsiEHne7Umqxf6km5x+svnn
waJzScj/IhhRsks3dzLqsxzu+eJaw9YC1He5IrgQN2Pd/fWoD++LYMaXL/O2
7kB9mScC+S7z8dUScn+eCPRf3Aj68gz17SNufedPGbWnDvVxIScvisXPpoag
vi4SgWPXriKTDajPn3L6YoZ9bK4jxt9LuPOl4BPzShvtl1Ju//d0r9rbhnzx
UgR/fd5svsMgn5SL4NSrlnOi5Wi/VIrg7p+M0lVtyEdVIpi0dvS9n+HIV9Ui
MP7Hja4n+aQa0f+7Pys5VB/5r1YEPXDKquwZ4ncisJot25m5GfmyQQRyGokO
N3oRN3LneYGbYvp+5NsmESzPDDys85P044jA5OHrM0MCka9bRLDEKfuV6jPE
rSJYIJub+//7hdo5rK+a8i2Y1Oty/HRRhd59EXGnCNRmbFVJqiP1u9x6X7nX
NU0W7Y9uEew8WuIwj9gnPSKYN+nTm7uGiHtFMErjvhVDcJ8IkocYnRxC/n8/
dx6lK098kkE8yPHL84f2vuTv/RFBmV7m8DjyPjJieL50rt3RbYjlxBA2fPHE
3ZNJPbAYVr8eziSQemUFMSyKO+3VR/qZFMVgPDZWqYvEY5TEYCevnJd1DPFI
MaTe+rQ5ShaxihguK97NO7MT119VDONWntOBOtwvNTFU1L9cVkPqm9TF8L3/
kkcmmS+jIQanzgxG9yrJL4phtMT6WaEF2rsTxDB3v0WDjBjlSUsMlquOyKbJ
oT2jLYYZDqvXr1tJ5g+JofttSfOE8yivemI48ObPiKynKM8GYqhz0zzb14ny
bsh9/44VpvWKaM8biWHzI8/VLuPQ3jcRg33kRlUvG/QHzLjn2b963muC/oK5
GOQGtytsVUF/wkIMbRFe9t5P0N+YKYZlVI7Z2ZXoj1iJ4X/TK20tL6C/YiMG
9dJal1NFGf9hWzGwN51Vnl7D++zniKFe7t011g3nY84VQ9L5F0Pu12P93Xwx
jOyN6OtPxnm8IIaXDUM1fRj0t+zFEBhXUbmgH+MxDmLoP3n51t/F6K85iSFm
yOqOwHPoz7mIoeOJfqTeZ4zHLBFDoZtfsfVf1J+uYsjIPmpbMwrtFzcxGCaV
K/wcR+b7i+F4Hy8hRgPtFw/u7w2rb9muhPbLKjHcb/8ouNmN+t1LDNNTQj3d
X5J58GLITGqzMXiJ/LBGDONdbN9VXEH+WCeGk/V7lXOPI7/4iuFVc9GErZ7I
R35i0L777UiYFvKVvxjcdF3m+tci3sStX8ya4XVkvlogJ5+2w29HkXlsQWLo
dCre8P4t4mAxTFZLuZFD8kkh3P5k7jG62Y94uxjO2oy3PhFN5reIwa8g4vBX
Ug8TIYYNN7SVL65G/o7k5H1g0oaYm4h3i2HEwoZ0F3mS3+H2i7VhKhYjjhZD
ZOQ8o/4jJN/Dnd+NVTclJH90UAwbE77l5pWS/A93/pdln7V5jzhGDB5DT4fI
fyL5IG492RdrTBoQx4qBP7x5WmYJyQ+JIWDrl63JlxDHi6F6pqzZL5JfSuDW
+/E95X8dECdyz5sVKi/+S/JHYhBXHVxkdhVxkhi23/VWziPxmGQxXDN2STlJ
6n1TxHCj6lp1UQTJL4nhXPoI/xvduL5p3HnVVZqbtIXMmxFDbKTblcwK3B+B
GORjRmkum4GY4v6+d1fp01jcXzGnv4zmNe6qxP1nxFDlx/ubpY6YFcOS1Tou
b8j8oAwxTFwo0lpB7lO4JIZNf6wHY1iUv8tiiIs94v2uCOXzqhhca468Sc0n
90Nx+s38olZiM8r3dTHQkYvGnehH++WmGEL2mHZEyeP5uC2Gz27Te3zl8fzk
iOFbsfuGOQNov+SKYQ7bWDW6Fc/ffTHwFCtHfS/F85nHnafiq1/LPfH8FnDn
2RA2jFfA8/1IDF8WiHw6LuP5LxTDpYW8kCOuqB+KxDB8Glw1fUnmY3LfnzP+
b/VvjPeWcPtr03hAxwfvVysVwyTH+PXrOvE+tpec/MbPm+KRhve3lXP61P/l
dVcdjDdXcvv/MPrS9SKMR1dx66EYkTPpMsarq8XQsHTHh+zPqD9rxKDo4BPy
dgzmk2rFMHNWWqqvOeaT3olh4cM1b0+moX5uEMO6T78XtCeh/m4Ug3SI/OtF
h9BfbRKD8FPdmLO+JB4vhoh5KSvKyHzdFjE8+7wjcHg38kcrp8+ePdnoxiC/
tHPyk+ZrcMcR7ZcOju9aNg8JfI381CkG667fVxcZI591cfrYp26scQPibjGo
nTFdOPQkqecVw0ebn4r7jYn/z/3/0vVL5+UT/18MqhrqugOLkV/7xWD0VF4h
7BniQU4+rr9V8iH5pD9iKHMf0nGI9CfL0FD71nxGtizhfxoC8t8ueOhO+J+G
Ilop6NR5xAo0nAha2P6d5HcUaVhteKW3/idiJRp+JQxjF2ig/TGShirPZR3K
RohVaOBnlhx3moZYlYapmR8bvk5BrEbDhA8jfqqoIVanwW/s+gX3vuPzNWh4
sdp3l9ITUl9MQ/68LdETSP/TBBpuLrQ1GuVM6o1pyLvup69G6pW1adCJUbns
8Q9iXRpm7+sNlZ+BWI+GxBs/lm96gOtnQEPOo1+Lrs5HbEhDk96dcVNvkfok
GvbpnHQaNxmxCQ0Ja2+WPifze8xo4C2ZPXi+FvfXnIa2gVkrnxuR/iUa9P/3
WRpfh/Ixk4ZHyVn3H61E+bGigTn4aazsPZQvGxrO5B9VGaWG9rMtDTvCZ7Xc
90H5nENDdEPfgQ9JKL9zaUitLx67Jg/lez4N/TteKSnVk/uXaDAKX3q+9hue
D3vu+y+NVtr1Dc+PAw0H4pL67L7g+XKigU07uHywCvO5LjR43Etqyb6K+d4l
NGS+r29/1IP5YFduvyYH10yPxHyxGw3DPcyGS/NxHvcKGqp7nFY45x39D3vQ
EGV7WHfbiyv/6YtVnDwtM7XnG2O+2ouGl3vSN51uIvfB0nBdNW7L51L0r9bQ
IPkZpn94CubD13H7NULvQ0MU+me+NFj+s8SpohD9Nz8azspmNyYNQf3oT8O6
i5d8qrVRf27i1lvUXKFlifo1kJPf99sWeCxA/zGIhs3R/4Rutkf/Mphbz8BD
tAu5zzCEhrebfrt2G6F+305DwfNDkvVKqP/DaZhofDvbMQz5IYKG0ojkGQs9
kD8iaYgLWmyUMQ35ZTcN28raDOVlkX+iaGiYO+15y3PE0TQMBh1SaTxN5r1y
5zlQLynOCfntIA3Fczs+7/+B+DANRxod3/imIR/G0CCNURC8tiL+Pw1aC9vM
EgsRx3Lvu9xjg91iMh+Ohi9fdc1THiGOp0HdzLN+vQWpF6FBZLnAwDsJcSIN
GdNkV7i3Ev6nQSbJ0E+L9B8l0XDn7bhJ/wtDnEzDHtbLKIXUr6TQYB2zWUH5
CeJUGirHROm1kHhLGg1bkkeXarQi5tFgrFJunt6CWEDDkGENDrtrEFM0TDng
V5hN8ktiGua+Dlf0TUHM0DAzRLv3nD9illuf6W31wSQek0FD7le7NSNJf/Yl
GmZ5zDelDpB5Ndz7BexU9RqP+CoNeoZxVMBFXK9rNFywztYZao74Og2RWaM9
o6Skn53Tr3MPbVDQQHybho/5mvG/9uJ+5dBg2tulK36F+5lLwxuNMU6e+ojv
03D1eW9RyFaUhzxOvk02dTuxKC8FNDQHXN/uVIvy9YjTn9/MVCvlST8ctx6x
B7JWGaM8FtHwIOb137mOpD6GhuxpW5/138B4TAkN4vnTE8eVo/1eSkNrXd6r
R+/RfnnJ6duEQ9E/mtF+Kef2Y++3jVfr0T+o5PgmYapSN7kvrIrDj5tmlNzC
+Gg197yoveGOKRiPqaHBzP1YytdGrHerpeFD2Y1T7fEYf31Hw4+9JW9vm2E8
poGGU1+qtk08h/NiGmm4rQz1vg+xvreJhs+itp1H6rG+9yPHd+f3uszfg/PD
Wzh5b//UMGYL/z991UpD1j9NXsfe4vyIdhoMLQzOzZuE9YAdNISOWpNVdBfr
BTtpGL3AfdQXbazv7eLO78LI5t0eWG/YTYNj1pRXy3ZhPWIPDd/UBlfMP471
ir00GPBt34wqIPW9nP5ZM/C4LRv9035O31k8uKB/Af3XQY4/jx07mbsd/ds/
nLx/uqhyYxbaLzIMjEz8N3b8d+QTOQbOZ55qliPzPoYycIZ553x6BvKTAgNQ
H0U33kb/W5GBbdk64gvJyGdKDHT/GJxetwj5byQD/V83LHnfiliFgdkp16a7
HSX+PwMnpMmLatSQX9UYGFKqu8DqAmJ1Bi7KjVyro4r8rMFA1ba4nesPINZk
4GFywpS7DYgnMJAzbu2nIaTfR4uB+x8NVTQOINZmIHdyffvLu6T/iAFlHYsc
dZLv0WNAMEeDqlJG+8OAgY4+xSw5Yp8Ycs9z2fL4n+mIjRiolfjtSSf2jAkD
PfV18qok32TGwDrj1yYKJD9lzoDXKdHfpHekf4mBEh/mVUUG4pkMJE3rl/0Y
RPqZGPhpklHYRfqxbRj4rj0oP+UJqW9m4Fj4VYsbGxHPYSCGOv63shvXby4D
pzJklj2MQjyfgeZiqjn/X1x/YGAqbbl87CbE9tz7D0ZmjSwh85AZiA8wSfgx
BbETA1P8qi/pR+F+uzDwd8nY0vojKA9LGPjqmDAyUBblxZWB6V8ktsIwlCc3
7v22q+Quf4HytoKBXuneQYeJKI8eDGjkJBqvXIPyuoqBQlv7llWnUJ69GLDT
+6pqmkXuA2XgQor/oftFeB7WMDBsUmjUFwnpt2Zg7fTqY+cu4nnyZSAy5XCo
TxqeNz8GlF5+trOLxvPoz8BNxmJeeArO097EgI3JyVM3tHHediADQTLRb4v0
7v2Hg7j3vTXkQmEJ/R8O5tZLRTfM5Bkf+Z8BnbZ7WVfq8D7H7Qx8WjR5QHUq
1veGM1B0dIxobyPmtyMYOPlF53DNEqzvjWTg2tx1L41FmB/fzYCR/heLP13k
PltOngRGt0ZroT6MZkArPGK11RzUl/sZ6Nrp117mjvr0ICc/7g1OZRtR3x5m
oGyX7msdct9iDANr4ktnXA8k+X8GvkydVB3tg/o8loHjZ7QeRQC5L5kB+01/
x7gqIx/EM/BZrvjUnn/JvBgG3G3t1RdWIn8kMiD03HhuxkUS/+fkvTOx4vUe
5KMkBhSCv9TnzUO+SmbA9MYj5xhy308KA5c13kbkXkF+S+X28+64dwqrkQ/T
GEi1tFs3shcxjwGXCwsCd8UjfwoYEC2zXNg9BvmWYuDbBpt5s5MQi7n927yh
WUGezKNjQO+du652CGKW0w+WNltdisl8Ok4+Aj7UemqgPXCJgWcNnR6TSD/S
ZQYsITNmP8knXeXez+XKwOq7iK8xMCvV2Ca9GvF1BkIuap+z/Yz4JgNqbadc
jb8gvs3tt+qkg6FNiHMYeD2Wlhn5AnEup2/ZBl+1TMT3OfkbmJibvB9xHgMD
MzWuXFmIuIDTB5tFpgf78XseMXCQitswTYq4kNuvZ3JHW50RF3H6/Zvl3aZ3
ZD4ed/4NVT6tCkRcwsCd8yMOHfiI613K6ZN92sEUmc/zkpN396VPFQpwf8q5
9amxLvszCXElpy+aunl1O0g/Pff+G52Vf5D7C6o5eVX3OiMdRHmp4X4fljOw
0gpxLQOVqjXBGwJQvt4xsCtg9QjLeJS/Bm69M9b12ZH7tho5+ZwxRqf6CNrj
TQxYf3mbsJXcF/qRgYhniX8m56A938KA3NTXd38UoL3fykCeyR+TD3noD7Qz
oLuh8UTLdfQXOjh++hIWpixAf6KTgcn98cf9j5D5vRyuKlbvvIf1bd0MiK+q
1xZsxfq3Hm5/q82yw1QwHtPLwCM16z2Wl0l9L6d/9i8wPB9f8h/uZ2CPYF7N
tzt4X+wgA/MearsNK8n+D/9hwFBRZm3hRrxvQEYCUy/Y1hb6ZiP/S8CkR77s
1hbsxxwqgdMPt45RVEF/TkECZ6cfM//sRu6LlsDx1e199ifRH1SSgOsP54N1
N9BfHCmBiIChV/aVoj+pIoGoGcfW7mtFf1NVAlsHe/KS36M/qiaBk6Pt/x4o
QX9VXQI5UL1uRgb6sxoSyJN5P+LaHvR3NSWwfMnGJjlb5JMJEphp+T9Zu1b0
l7W491eL2RtxAv1pbQkYXdduKVVHvtKVgN7U7XL3nZHP9CSw009lstcAYgMJ
OG+oElQzyH+GErAUPtb7tIj4/xKIe20dML2G+P8SWKJ81nvrRuRbMwkIfccE
LyP9w+YSGGEalcxzR7624J63eVy8dg7imRLodPUqFakR/pfA6skOeQN+hP8l
oO3qdk2RJv3NEgj0MP2USfqR5kjAOEPjbBnJJ82VwAne9dJN2ojnS2BNb93Z
AHPEIAH2/KvUkhmI7SXA1Nm5CUm8xkECCgeXXfpK4jFOEthzu3jM0y7SHyWB
bhm12c6PEC+RQJWL1ueTJ0i/lAT+bD5UfxMQu0nAougU1f0Vv3eFBK5FVC7e
eQaxhwRuarWsDpmCeJUEet5/OqB5DdfPSwK+e8N33plO7leQwKnjIU9OM7j+
a7j32zci46MKqbeWwIV5c0qGh+H++UrA57fYZPkTMn9ZAuX5SzqV1BD7S6Cs
KWaHeSa5j0kC422fjGB0UX4CJSC/4ffwOcfJfZMSUJNmtOe+RfslWAIjRzsM
69NG+QyRwIYwbfdnnii/2yXwJnj2KGUSbwzn5LUzmidNR/mP4OQxKXjK0ct4
PiIlINfm+Ux7M56f3dx+6VXmxqzH8xXF7WfCcENDBzx/0RJQf3EuWmEins/9
Ehgtjmha+RTnPR2UgP8mpmjeIjzfhyVw0XeUX4cnnv8YCWxTkukKvTbpP3xM
Ao5rXjzetw71Ryy3fh+7c1MCUb/ESSD73yk2v3VR/8RLQFPs8+hkCOqnBAl4
11SJ7Z5gPCZRApfmRJds1ET9dlYCWenX/nkWgPoviZPXZVnZlAfqx2RuPV8Y
lbqGov5M4d6n9/SfysOoX1MlIJ6SGamTgPo3jfveOwedJyeifuZJ4OnSOQbP
j6P+FkggtfjhjzERqN8pbn8cbp/56Y76XywB9yPyV+ySkB8Y7nzpyR1cFon8
wUrgVXVxTA65HzlDAgeaa0qGTUb+uSSB1viTB0vaEV+WwDufO9OSM5G/rnL6
oeTkxN+kvvcap39H3IsVqyL/XZeAuXR0p+FNxDcl4HE8c8VMcl/AbW5/+mu2
RtSR+XacPDnMaU3zRf7NlYBNW6NwczWZdycBwz22d5LI/JQ87n2W7XjZKibz
bzn5Xm012ZrMm3vE6bMub/HSBWgfFEqgxPDw6GH7EBdJgPdms9Jiku95yq1H
XaNyP8knlXD7zWYeG96MuFQChWoG90M7EL+UgOegfb1+G+Jy7rzpLGyY/hZx
pQT8QjzCeKS/qUoC4bv+bYr+H+JqDlt7qjWvJ/P1JDBlrOf8f0n/da0E/m7d
87XsBX7POwkcO+hVTO9E3CCBBp+WUKEy4kYJqCztXvUrHderiXufJU6pX7UR
f5TA1cWN5Q9ScL1bJGBdz2u7NgRxqwREo+//q0bm+7Rz7yeNH7DKw/3t4OSp
KKg+hNyH2SmBuzOdJo51R3nokoDE5sz1hASUl25O3t23ddvkk35+ju/CDTz2
taH89UrAtOu485MRiPskkO7Sr3XMEOW1XwK2O6MTPSPRPh+UwAfnD5EbEtF+
/8Px26an+8fz0L6XYWFrfM7RAwK0/+VYiDtl7XMqBf2DoSxEPC3b4HIc/QcF
FhzjGZP8behfKLKQfuGBxt8l6H8osfBm+cn8WS4YjxnJgstV9Q1rutB/UWFh
fMmP5byz6N+osrB/Ep+30wv7G9VY+GKbo956DP0jdRa0on77gj/O29RgoZHn
PGT9b8F/WJOFD/ma2fGZ6H9NYOFfI53+ryvRP9NiYfjIomV/vdF/02ZhrsOu
z6H/on+ny8Lz2/nyvrno/+mxIApIW23Tgf6hAQt00ErxMGXM5xuyEDV0Lr1C
mfQnceuh+r0udDjqbxMWjGt/9JT+Qv/UjIVZgQ3rNtej/2rOgtUqaxPrG+jf
WrAANz2eL4xG/pjJwnbF1uzUGcgvVixIFi38tbwG/WcbFppXuCqcCCXzzVjw
9UzQ3dKF9swcFtYvSZFVu0buO2IhRP/uzD/rkf/ms/CMbpvLlyX+Pwt304/M
SEsj/j8L31TGLWdJfa8Dt7+qHy32ZiJ2YuHnAu2+cjK/1oUFk7+ft0ckIl7C
wpatWQbGnYhdWfi+Iedo8ULC/9zzzEvfG54k/dMsePQNPzi1ELEHC4+d+89f
6yb91CwIDui4XlNH+8OLhf4kT3aiCWJvFi5+WhvdORPxGhao0b+8TEl8Zh0n
v0vMguqI/ePLwrWfDV4qcoj9WBjilWxQS+wnfxbuhfKGrCX21SYWnBqXmN0g
/UqBLKSklWUpqZP+bBZOlrgtPpOL3xvMgrf6+2mRnqRfi4Xpnurvvn/E9dvO
QuyRrC+OW8n9TSzkbBisv07uj4pggQ1Y8O2QO7nPgYWw6zFtfbdw/3azENDf
3BeqijiKhdsjYo5YbsT9jmaB1/Xz6yJ3lIf9LIw7q7HN9CXaLwdZePt68t36
2WT+MydfOSM89c6j/RzDyU+21c3iRrRfjrEwsTNVhp6E8hrLnY8ZK6vPuKI8
x7GQ/e6JbPh2lPd47v0M2HmmxzAek8BC5q9ZjesnYTwmkYVhmj6ldZMwHnOW
haX2a8cXkH7rJBb+d1bLdWgb1qslsxDvtfa7ZxjGT1NYOG6+yu7gvzi/N5UF
u9t5b5Y9wfhrGidvpo//TFTE+b08Fv7sfDnj2k2czyBgIdq5JGe2M8Z3KRYG
LlLt/esx/ivmzvP+yrft4zA+zLAQ6X3i2/EW1FcsC6cPfWvaPxfjyxks7B1a
FSs9hfruEguqaz4VtwWhPrzM6UPnfsOgWNSXV1mYVwHfZvHJ/AoW5OYmWDpc
Rn17nYWEqT8uR19HfXyThdS4036lV0n+n4Wnbp3O5hTq8xwWntD5A/8cR32f
y4LtBP70YdPJvDtuP1ueTnFRR77IY2HPnQn8sd1k/h0L9fOW9/YVk/g/C5Nu
+8UdOo98VMjpx8dbuuaQeTFFLMiH3vZ9SO5jfspCwbHsxivFiEtYOGHxi6XC
kA9Luf2POee8QJn4/ywMVmYPWFFkfj4LNio9NTONkG8rWQgXZ8p3MYiruO/9
rtZqrIF8Xc3ph0adFQyZ91/DQkbfrXTj14hrWehw6KuKJ/mZd5x+g8QSYQDi
Bm7/l2RMdk4l83dZWOx7b2NgAeImFhKHdf9qqyPzeDn9sGs/PGlH3MLChZy+
bd3EnmllISjH40QEice0c+tTdcpvGelv6mBBXPA+4pwUcScLlyYVl67cg7iL
hatya7uz5iDuZqF3dvz9YtIv3sPCsnsJ1o95iHtZ0IgetrPcjsz34/guc/52
/TJcr34WdAbzan94kXm/LExe0D4QS/rB/nD6K71k70RHxDJS6EsTWv/OxP2S
k4LMvc3a+xQRD5XCOusb8m1rcH8VpJBRNxAppMl94VJoe7306EATyouSFBx2
bc30HY94pBS0w2eIzZ1RvlSkkMzvM3tN7hNVlcK8qvKf+fEor2pSeNlfV11g
j/a4uhQ+6wyVX+2P9rqGFGjHkrmWu9Ce15SCnRt9y3U/2vsTpBDq9LuAikJ/
QEsKa/ZeDpm5Df0FbSmcGz1cT8kT/QldKeSdM1poPQv9DT0pxPGXhJ2agv6I
gRRWr/pgQFdg/thQCh+m7lT/FIn+jJEUxs0dr35qNPo7JlKYI03Nz1iJ/dZm
Utg2ylJr+GHMX5tz61Es+2jMDZxfZSEF38HxTpPGxyD/SyEwT7H8ZSnmx62k
cDz0IN+Ij/lzGykcNNoU6bjwOfK/FE5EDdaP/4z+3hwpVDxS+pijg/W9c6Vw
fcWmNAcXrO+dLwXR4cTaOF+s7wUpxBbN7zezQH1tL4Wgpt3Kz6egPneQwknv
bVvGjEJ97ySF5Vmv9WXJ/Y4uUgi+MWpbSg7yxRIpdA4Idep3k/uSpKB493Ps
ZwMS/5dCa2X/l/KHyEcruPV1zbfLc0W+8pCCwa2HrmH+5D5lbv9G0D9uqSPf
eUlh8sfdV1/fR+wthQkdTR27ybzeNVKoNcif5/KV+P9SuLxabs+fSORbXyls
2Xy/edV30n8thfHbarcq+yNf+0tB/pPfxS7Sf7xJCo9/tKq/1CH8L4Xeo0uH
7Cfz5YKkcHrjhtw3lxEHS2G04r8RTxrJvBYppBdpe1mQ/qLtUsj66RippN+7
4P8AOFQ4tQ==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw0nHlcjF/7x0shIiFElnyRSiWEUPrYkxBJqSRKC9GifZ32aZ+apZkKUZQW
QgghhEKUQlSEaFEUISTP/H6u+/nneb2/uufc55zrXJ/Puc6Zmb7HdeveQRIS
El6yEhL/9////78yE7TIi6qHKjy78e8/bMGZC8UTPfYQYwtGHw49tqCXmLUF
ifvX3+6Sff6Py7ZgRMbSgVubiCW2IjM8sHJDFjG2Ivhs68hxjsSsrfBx5Hqa
RNTT81vx8l7EqbTdxBKmsLIzuScXQwxTLAxUxu1QYpYptN48PXQ8m3neFHU7
JkwxtH5Bz2+D5tq7n+xNmOe3YYla3sEh8i/p+W3o+b7iMFeT/r5sGzwqpF+O
fMC0b4ZRH28Hu8XRv8MMt8puSpy0J2aZYX671vaZs5nnzXClrvdLVzPT/nYM
12pvc1Nknt+OzLhxkVXbmOe3o2LVmbkBeszz25EqGj32zBjmeXO80rxXe3Q0
87w5UrnO16yqmP6b43NHJs/2AtN/c/TvXvzIwZd5fwvYdl/bvmsh038LzMyW
H/HxOzP+FpgSsOHv4EJm/ixQX3mnMtyOmb8dOJZUI203gpm/HYioNOY2nWXm
fwf8fnSv/WFKXLYDHimBTZGfntLzlgiy9JowJ5wYlvCZllI7egwxyxILlTyO
LEuvo+ctceVorZHeVGIJKxTPzFy3Ob2WnrfCtYHytSpjiVlWOLbx5QzryCf0
vBW++NioW3+poeetwWo7VNGzgxjWOKFgeJhbWk3PW+MDV0FCaxJxmTXyh9Q0
jPnwiJ7fiQkrttjtT6yi53di8/aL2s80H9LzO1Gh5jjybPl9en4nzKwspy0w
raTnbXCYtUqv4cU9et4Gdt5dAo0dd+l5G2RXZhkJa8rpeRtonVIMi1p1m57f
hYzuMQKLMzfp+V0YfcatmzOujJ7fhRG53GPbukrp+V2Ybe91fuHJy/S8LZr3
7Q0+u/3iP1a2RU/v64Z3f8/R59nCYGPi7ro1Z/6xrS2iGrZMqQzNpc+3xY/k
yzuvXTj2jzNt8eFsokrpPT61Z4sHfwSz/Jaw/nGzLU53LjBcvsbb4F/7u/Fo
zsdEbX3uP1beDX6StbKaW+Y/xm7kX37SpbQ85x/b7kZTte9Q6UGn/zFrN4Z4
bnrkbnPuH2fuxrOovzfKii/847LdSMpv7FWUvvyPm3dDYYhbuoVRKbW/By+F
WTOHRN+g9vegXpSWdczqJrUv5sMqxkc+3aL298DFrXXPMr9yan8PXgSe5WHg
DrW/B0l40sgJuEft74Gcv2TWm48V1P4eCK7ZtQVa3qf27bCzo1lrzJUH1L4d
eJtydv2Uq6L27TDjv+UOD2weUft2qIyscM07/Jjat8PBUZFX2p2qqX07BLqZ
DHk2QFxmh4CbrhPk42qofTsoTWtWGDHuCbVvj9BdxywvphAr22NDzI3DvSNr
qX171PgWjeCyiG3tcXrefyWbO4hZ9sh5IZW9cVMdtW+PjsSq6qV5xGX2cE21
taz4Tdxsj+/Zb82GGj6l9vfispaO3qQ4YuW9uCGXseB4OTH2Yt/Bs1+n/iC2
3QtP/6/frk17Ru3vxYDl7g3fDIgz92Lesz/nJ5kTl+2Fx53rmev2EjfvRf9h
z4+p+4glHDBVs2HiUQdiZQdkqmXci9hBDAfMnxvNVlhFbOuA5ufluvEzmPYd
YCO4YHLnF71fppgvml0uryAuc8D6QqFzagJxswOmv7332WA9039HpMuPVLzP
jI+yIx7eLzxsdIIYjjh8aFPc8zXEto7YeiDwRHgTM/6OYAex3zm5EGc6QrJI
qTjnC81nmSMSRhvq7nEjbnZE8a2Kz1ffUzxIOGGtUfmEpq3Eyk64Vlg36csl
ih84YbqB/G21ccS2TrCP1jq1/ynFI8sJb+MDkwXuFK+ZTjgTZvpgzV+K5zIn
BP8tHNITTPHe7IR9FVt+KfTQepBwRlf4BC2d7bRelJ1h9ttG4flpWk9whuNA
25a437epfWd0eOuqt+jRemQ5Y2sG+4PfoTJq3xlRqrXsWoNr1L4zqkqWPC+I
ZNa/M0x/N+66f5nyg8Q+/L7R6hPedJba3wfdiUUj97fkU/v7MGVE4rfQL1nU
/j6YvTzS5ladSu3vw2hpXc+HK4Op/X1okhr/fV1uKOW/fXgiNfatuoWI8t8+
hPEdsop+ZVP+3Q+pa2OmVm8tpPy7H+O8/luQVc/k3/140Nz8NGPYJcq/+/Gn
42NP3NKrlH/348ekaY1T992g/LsfhXP+SKx8QHpQth9hTxzfqb8mvWjejzu8
VuOuz3eofRfYdI0re9RP+qPsgupH32J6pEmv4ALnUZ9Uc4eSntm6YLZksM8w
adI/lgvWjjn3e//Px9S+C9JX3cwN/sropQt2yZ4K//Oe9LXZBZo/8i2f1JIe
SxzAoNnxnjmlpNfKB7A+z8NgZCbpOw7AiWM/53oQ+QHbA8A69mETM8ZfHMCE
uoSyQyrkPzIPiBWUf7Oum/ErB/CtMDdnYjH5m+YD0Nz05fp3V8Y/HUT0hhNj
lWeS31M+iPXLLzetqibGQazgpslO92yg9g+iPSSi3mVUI7V/EFuvKbt/OEac
eRBuFq1dm+Y0UfsH4VlZKTyQT9x8ECwjzTVD/ntF7bsi5mzZiPeJxMquUN8V
0fyshxiuaD0xbPt5o9fUviveVS7iGouIWa6Qvm6rEtJEnOmK73syMnmyzdS+
K77tmf5UYQZxsyteh3xr1VlILOEG/dUWbh0riOXdwNF1MddYT6zsBjn9xUFf
jYi13SBZHvt32TpiuOH1EMXnUsuJTdxQ6uHwwWgusa0b1tUsMhirROzmhmkW
txftliRmuSH7lMtz73J6f44bdrx/YG8WwPTHDYeLrRQ8ZxMXuSFktpd6VwWN
T5kbfiJn1+tdxNXivz/mV3egkxlvN+Qb3x1WdpC42w1/i6ddlWyl+ZJwB7c8
8dUeM2J5dzTPG5U94QrNt7I7Ys7F21mMI9Z2h/+bpezdjkx8uON8s0rIoSKK
JxN3bD1RdvJJN8WbrTteLrine0+V2M0d6n7n5x62YPy1Ozgr5y7MZlE8c9xR
+ugba+4xivdMdwSkBdzhX6H1UOSO/fblw+ZV0Xopc8e2/6Yn27yg9VTtjjuD
couDXzPrzR3GT47c731N67HbHUcfabzdeJHWq4QHqiarSfQfJ/8q74F5mq78
+1EPqP8euPnwv8H8PeRXtT3gHzZeY9lixq96QHlVZm3mYMonJh54uO1bYuGj
W9R/D2gtmbTRmEt+1M0Dn2UczjzNJT/K8sC3NWr6X2eVUP890Kv38Omzo+ep
/x448Fx7c432aeq/ByY1lBmozzhB/feA4883g2cuFFL/xc//uian+9yX+u+B
wRtDR7fuiv6Xn7s94Pr60hgHz8OU/w9h0fInyp3R5C/lD+H1zY71OVOLSA8O
wWbkroq1+4v/sfYhCETrLLpzSkgfDsHjgOSuu0/IT5ocQlVT3vMfnqRHtocQ
bNPpVuVFeuV2CF3zG2wH9jH+8RC+HNUZOGV69x9zDuHB7IDtX7VIHzMPwW//
5aVS/ZX/uOgQLmbyFg9l/GLZISTZXZm0wIn0t/oQxmhFeZYNJn/YfAgSdzfV
/TAk/e4+hIpfGlVSQxj998SCwmNO+ZeJ5T1hd6PPV2TH+EFPZL2VawqUIn+h
7QmF6DwvGRHjDz3x+clFz68zyJ+YeML94kq9n1mMX/HEbAPBkxeK5HfcPHFf
UfnejjBilid2l5qYr2wm5nji6uhy4e75jJ/zREiBnijWl7jIE38VDq3nn2P8
nSdEh0desmkmrvbEmr0npldKPqf+e8Jh6eTWq+OJuz2x6e2s/BnTiCW8oGpr
ZfdlErG8F15K7tg+bTixshcMyqdMy+mkz9f2Qq/c0ZK4W4w/9MKHZqewujhi
Ey/c4IXqJRoyftEL+285Sj3oY/rvhaebTm46nsH03ws1xqwubR2m/15w5pf9
Ed5g/LQX5sg8eSNpQFzkhfZPcxcKz9H4l3nB08T9RsIk4movjNGU3jvRh/F7
Xuj22jrep4Lmt9sL45y3lbbKMfPvDe1ZuTPOGlF8yHtDjbW7alkf+Ttlb2Qc
cS74tZbiS9sbVbFWZWvDKP7gjZ/WKh3VeRSfJt4wf9r1bOtN8nO23rBfrVGe
eJf8nJs3Qvpslm++Sn6O5Q0/telNDpm03+J4Q//Sl55dXdep/94I1H1wXTH4
CvXfG96vaiTv9zL7O2/0nuvQMzUl/1btjUEmZbdWLD5F/ffG+6CzUaeXH6X+
e+OpcabwWhzlAwkfXO0/cOv6oxDKfz5w2Pn9r/B9OuU/H3i3Vy7Ik6L9rrYP
dhzP6x2pcJbynw8mW8+tfqVJ+2cTH/i2dU8ftZH8ma0PjqlvtilazOQ/H0R4
ZDgYVlJ+ZPlg7ZtERw1Lyp8cH5yxmVG+uJ3ya6YP3k3Mk1rjRX6syAcJm3VM
tP6QHyvzwSAz4feqEMrn1T4wNP3s+fcP5ftmH7zQZR/fpEv60O2DWepJzqsO
kn5I+GLuoQMPNh4lfZH3Rfm6brXX90l/lH1he/JWwr5u0idtX+hk/uiwH8XU
i3yRXXfIYQ1T3zLxxTnjKlHkYtJHW180uQ1/dsyA9NPNF3kOVvYTDRj/5IuT
dWp3Dy4kfeaI3yflfc9sxh9l+iJGejDnkTSj/+L3WVWk091IXOaLrINPjEeZ
kZ+o9kXnSM2PPy4wfscXqxOyN/yVf0P990Xj62Xq3/YSS/iB451+O7+YWN4P
C6Y3fPrRT6ws/vcpdovOLn9L/ffDyZRRn8/6EcMPz1xdNz4vJDbxQ+avzb6S
DcS2fviyZJRorOQ76r8fNs483v51GjHLD8L+pLK4xcQcP4x+8TH93jriTD84
lQzTSDUhLvJDzGg5m64txGV+uB/e4VC2gbjaD2/Oez8atpy42Q+F73P87qoS
d/uheP3S899liSX80VqZOe9IK72vvD+MPXwnll8lVvbHWB23fg82039/TDWb
9rRkI9N/f0hN/CuRI8v03x+9Hk1Ltt6i8bP1R1zUIM4Td2I3f2hld+xdNYmY
5Y+hmhkHbl+l+eL44/K9oyc9txNn+sPgt8zFvjpm/v1xfRx7wZBuxv/5Y1fH
TkvnAYqfanH7ktyJLAnG//nj/UYVwenvFH/d/mCFrpfc9YbiUyIAj2dMOSB5
k+JXPgCjvNKzZAUU38oBOBJ8R/KnLfk17QCc0v+63eg/pt4dAMHFmjuRL2n9
mARg/elfxxfF0vqyDYCvRqNx1zxaf24BmNia9XP5E6a+GIBfowt7Y5/TfooT
gC1H2O36A+S/MgMgPeCv3TCR/FdRAGKuRWSdnkP1wbIA8ObHDJVdSPu76gDY
Pa6PWs/km+YAXG3r2pfieIX6HwDJAst5TebF1P9AzHP5kxUfUUD9D8TGpz/H
m5pmUv8DwRrisWlLNNXvtANheCI6dokCh/J/INwOblDKVs+m/B+ItHUHKj9P
Jv9kG4gYz3X/fVO8SPk/EFUWB2pch5BfYgUibJXnscU95Jc4gUjYozlM6inp
Q2Yg7rxovzWrkPxRUSAKpxyL0vIlvSkLhJPLqJYzOg8p/wfCqnz1kBVvSL+a
A1HZl7/E4DrjfwIRkN+zO3IQU/8KwmvJA7n39Eg/5YMwzVdwwMaFqccEYbZK
6aSTHNJn7SCM1Z8a9DeX0f8g9JdmzakuJr9gEgT3tTP7ws7XU/+DsK4/0Imd
/YL6HwSfAxe0zKNfUv+D4Nroz3OxaqD+B2FvbsojY+VG6n8QTtYvnRf+lLgo
CB/1ldYe92+i/gdBuXpJ1apRr6j/QegcXnVZhkvcHIQS13PLRYNfU/+DoG/m
9DvbgVgiGB88zbe8u0AsH4yev16NY78SKwejfG1c8F+5Zup/MMxuNM1ZpkSM
YJzfOjJVfSqxSTB2P/ukXzaB2DYYG6rXOH0dSuwWjOFI+iLer1L/g7HojqST
sZCYEwwFzUmyZiDODMZnYdyjvKfUn6JgTH0gX+lgQVwWjLQG/di8ChqP6mAM
kdiflalC3ByMewFb9IM8aPy6g2Ee3xUXXEDjLRGCQ2FqPzvraD7kQyAHmy+T
Omm+lEPw7KLWLvsvNJ/aIYhh895ottF8IwR7LL7LtVQx/i8E/qrFtb+ymHpl
CMa7Pp7ZtY/iyS0EnIwLw/VnMPW7EDyZsLL3UBX5MU4IhoW/U5+xj6nnhuDM
7NUHK76S/yoKwd32MwrnflE9rUzM9hvyzDvIb1WHwMicM35KOe0vmkNwPGmK
pWcM+avuEGhOufD1kg9T/2bBTiZtxlWmHibDwsOav9MWlBTSeLCAD8/ZC9nk
nxRZSOh7/seu0ZnGhwXrERrjJzlRfUuVhefvJ4wMVs+nfMFCZ1bJ89WvKd/o
suC6euXLKB3a/4GFmXVfZp2voHqVIQvzdTy8J/sx+0kW9r5RjjihRvnPgoWS
w/UpbvVMPYqFYU9jLR6toHzqxMKbb+lqWQpMvmVhjP73IeXvKB/7sqAms6xG
/zRzvsTCrovh16ccovzOZuHH8H4Tj3mkBxwW+qe1HjBuI70QsiBM7N9fJmDq
PSz06Ra0flhGepQrbn/t6vlNzxi9YkEz0yJrz3nSsxLx+6jL5+7xIv0rY+G/
hCd+UvNIPytY6F6VY9bwnrhaPN4FA3dCuaTX9SxMVlrXnLSkhfI7Cwt3TP+U
+Zy4jYVFk3O8TA+8p3wv7l+LnZfRL+I+FuRdHyRrBX+g/B8Kr/EXP57uI5YJ
xbUcBYdQ51bSg1CEtY5etaeaWDEUxkdTtMZqtpE+hIIVkNe3I4RYNRRfzC/a
/r1LrB2KAsnB2x9JtdP8h8I92PwndyExQlE896SPsjWxYSgk3OSEhj7EJqHY
feHtkdYoYotQ3CsKlHkTS2wbingT5azp4cROoXhjGl1y1JXYLRQ/0xOWWpoQ
+4ZiRsG8ueaziFmheG7tVH3sE70vOxRRS7M6DAuIOaHIvjj3y04bYmEomqc4
jv4mTZwZivFGJqoqmTQ+uaFY8G68m5w2cVEotsVvXfukmMa3JBRZ06anH9Ei
LgvFE+mt6acO0/xUhML56vb98wcRV4di8pRbI1nWNL/1ocixCn/wuoDxd6Gw
VXTnZn2leGkLxbTwQbeUmXjqDsWgSL+MM4zf7QuFzTG15Pxkpv4Xhj+5USpt
+yheZcIwfNFy/4bj5J/kw5DxojNnyEPyT4phqGkszTdupfWhHIaxjoE3D3+j
9aMaBjPl2PffftD60g5D99vxzpafaf3phmFz8fxlzxuZ89YwNNb3L/gZRvsX
wzDU/6z3v6pH/sckDDuqAkOnt5PfsRD//WyfnbtimfpSGGYpS7c6raF84hSG
2w8TSpqcqH7kFobl42VmXhhK9SLfMGz/Pbip8rwfzX8YElz0bCZpUz2IHYYZ
Kuc4XRrkXzhhMG/NeeE3iM4PhGHwC8ob8fodc94QBgP1y2+/LqP9bW4YnhkX
/lWOZuo1YVCIn+SheJvyd0kY7gVvOFP5nTmfC8Mr+2XpswaRHlSI239zrNVv
EOlHtXh8R8oYZXwnfakXj/+CReq7mkiPmsNwN+5WP+8C6VdbGEIVYoLHBTN6
F4bZT9NO3l5IetkXhojtQxpSGhj9D4fuDBXZNZdIn2XC0WxjNPGt9xvK/+E4
fnBCwSKNt5T/w2F90E3r9TNi5XBMGNJwLcD73T9WDUfF7A2Sp4e3kF6GY1bK
fVVFLrFuOE6NkXDbOeo96Wc4tALHys0MITYMR1Xh0rGKb4lNwrEjIdD10+IP
/9giHAeO95s6sohtw7FScbXp5qvETuFwkNYbHNJG7BaOWG3unhdDW/+xbzgm
3u9yWD+RmBUOU5H5xRuTidnh4D1kf9MeQ8wJx1/XsNX8n/R5wnDMttD+1PaE
ODMcct7XpbSOEOeG45pRguVBK+KicKgmKG+5Npy4JBxDij426BZQ/8rC8Xvm
H9EwEFeEw3D4qD+779J4VYej1XVOTaABcX04CoaJeOn5NN7N4VhsuGfMYFni
tnDMV7LiSdvQ/HSHI8JxaXV7Ns1nXzjSDQ2DhjXTfEtEwPtVlen1Ucz8R0C8
3A3qnChe5CMwtbv1v64MiifFCDS6VYzLL6V4U47AA2HjYclKikfVCOTMGz3v
C1Mf046A+sEHcTH55H90IxB2euK5xnDy34iA9dVPOkM20nowjIB9WAnfUJ78
vEkETse9WV/kQv7GIgJl5b9MEs4y5/ERWNFoJHK+dZXmPwK6Xp5bJ/ZTPcgt
AvNSDV1Wq9N9At8IXBi77XdPXTCt/wjIDRyce1aW6jvsCCwuvOrarkX1HE4E
MkKPhTjNo/2UMALSW6wy2zeSP8mMwLs13zOn7aP6TG4E2jfI26wIp3xWFIEh
A4OSN24gP1ISgXHtypfuVTP3WSJgfHicVKUJ5c+KCLxXmTdt1H3Kr9URmPss
299sGfmN+ghktTjd3pxFfqM5AjfOPzAyZVE+b4vAok/ST3/nMvWOCLzsmPCz
8z7pQV8E/JLuB3m8Z/b/kbALXPGn8Qfpi0wkWhOTZ0ZJkj7JR+K+0DGtVpLR
/0gYBIfVLO4jVo6ESUbNYe0WRv8jUXo7VHr1HdJX7UisMjc36E/roPwfCdXj
hTNa7D9S/o9E85wz/RH/dVL+j8Rg6UQ/h1pik0jMb0q4IO/TRfk/Euaq9vdG
jfxE+T8SvEvpjT94xE6R8N71stJJ7jPl/0g46O6ZK+9H7BuJ6Y15d07VEbMi
cdxvzM9g+W6a/0gMDdtx5LMWMScSk52ty7hriIWRKPt+vt5yG3FmJCxzntst
siLOjcTa+UelJ1kSF0Xi7cwji/tNiEsiUeulbvrcgLgsEpfnLQ7PUyGuiES/
CifAfzBxtXj8rkw+lFVC71sfCdNeo1zWduLmSLi8Pdh7sYX63xYJj+qt2X52
xN2R8OE0NUrV0vj1ReJKpPT31AXEElHoLKuyDomk8ZaJQuzf66+GV9L8yEeh
YIHkNO4AzZ9iFO4sZnf5qhArR2Hpbg2jWStovlWj8Ch9iuSwzYz/i0KOWsCP
dBOKF90olO5av9t6LcUXomBUf1vtkTb5HcMo7LVXr/KXp3g0iUJ7b/6NHsYP
W0Th2xbJ9ZVnmfpSFGYd14g+6knx7xSF5O72TYtsaH24RSFs7rS7z26Tf/GN
QsTSWe0JSsz9uii8cRg3os6B6jnsKHDWbHmjkkN+hROF3yXL30i9ov2FMAoJ
gZaLKybS/iMzCut+rjzktY/8SW4UGicrCruKKF8URUHDXma7cvMFmv8oXD/F
OqSRT+f/ZVG4+NP5tHzAIcr/UZhcM7D+chjVr6vF728mV/0AdN5ULx6fFUor
uM9pP9cs/nt+cOP1MMqPbVGYtKJ3jf9U8hvdUVhSKxh1xZT2l31RUDr7bcuq
kZSPJaLh0n8kwOYK5WuZaBwOuT9wcgftf+WjMfRZjO69dtovK0ZjndKgea7O
pA/K0Qhaua/zxH7SD9VoLDa/elFCRHqjHY1vjS/sx5WSHulGI7neaUCrjvQK
0bAcFhuc1kz6ZhiNTx0NowqaGf2PBvfExzu3axn9j8bEQTsyTS6TPttG4/eu
73NrOG2U/6OhdcPsU82Odsr/0Tj/qkeyY2wH5f9oXNd8xLl0nZgVjUdq+6oa
d3wk/Y9GrNdu0UALMScac2+ajbyzq5P0PxpvjM4dbqokzozGZKe6qQP/dZH+
R2PMMsfLrfuIi6LxZ7biL6djxCXReDb7RrDNXeKyaOiFfF907gVxRTSe990V
7Wggro7GkBBXb9MHxPXiz9ueOebkKeLmaJRN6Zhi403cFg3t7dLnE+cRd0fD
NMV73dYGet++aFjZvpr58BCxBBubYyZ/UPtN/ZVhozVIMSDbnVieje23+nax
ntN4KbIxwK7tGaFJrMzGhyGzhmV50HirsnHA0mB+Vi7NhzYbP/s8vh56TPOl
y0amxeoEVivNJ9iYZisdqdvD+D82olIMlOS7KB5M2FjXrM4PbaB4sWCL92uv
Bo+6RvFky8ZbyeOKq1Mo3pzYOM/esPmSFVNvYkP2d2Sggg7Fqy8bg8XyUZNO
8cxiw/+GiZFsN/kXNhtD62+dXsCcP3LYsPvmfemaHflzIRspmy9oTYpi6jNs
3J+84oTjQjoPy2Vj9bT2Q6/W0H6giA2uqqbMZRadZ5WwkbvK6cWOzXRfsYyN
TbLrsjnf6D5RhXg8+uo6dpRSPaWajfh1rtOzP9N9oHo2Jgzcs3ELovs+zeL2
X5x2zpeh/NPGxqP+cSOlt1J+6mYjIybaLnED7bf62NgRtVpz4T7m/mwMNEd3
i9aGk/+QiUG97lRlDT7VO+RjUGaoLdp7hPaDijHYHT/fs2wTcz8kBh++LVgZ
XUH5WDUGSxa8mfBgGfkL7RjsVKoU3MuhfK4bg2Mvc1TOyDL5PwbGMx+sLHQg
fTCMge3VG8EfL5F+mMTAcHNbd+oAs/+PgVLY9W0fl5A+2cag/+x7c01n0i+n
GLiHHFG8GEf65haD9hfx5zozSQ99Y+Bs/CphVS6j/zHgX/3eJGL0mR2DsOJk
l4w7jP7HILhkp2nr/B7K/zGIORfnryskzozBSdUvrzZ9I86NgZEey7xz/RfK
/zHoHrjEfs4nLolBW/+O4KZ64rIYCF3vJjwZ85X0X9w/1yX2KauIq2Ow6PgJ
+7/7iOvF/fNJOyEZQ9wcgyLLrK7Iw8RtMeh0s+8PzCXujoGl1jijhlPEfTHY
7z9dT3SMWCIWcVameeeTiGVisUl3XJCGJ7F8LJyvOWnJbiZWjMUtN8lhO5WJ
lWNxteGJ0sI26o9qLILt7b7mnyTWjsVR1Oi9tiLWFf/9m6sBPUOJEYsyHaUv
w/Jp/AxjEfq07Na2NcQmsTjZa75M6jnNh0Ustu67pWRsS2wbi+sTnEye36L5
dIqFWWhS6doLNN9usUj9mxjuIaR48I3F4eNWF7pcKF5YsRga/Gq5yQKKJ3Ys
bt+qnLewk+KNE4tf2gWjlwqZ+k8sLFzWh/xdTPGaGYsm/Rz9OQ/Jv+TGot/6
7vT9ZhTvReL+yy2Z5VtH/qUkFna9tacUjZj6XywUjtxUXXmQ6i8VsfBRFAa3
6JLfr46Fqdvh7I/f6DyqPha8xpkb5udQfaVZ3F+zvuNJm2h/0RYLb+27kocb
6D5PdyxqJB5c3TKSzpP7YrH03g25lIXkTyTi0Osz0WrFGcovMnFw6PcvVbrI
pfmPQ7dS3yLByWOU/+Pwskq9QSmeznOU45Abyb1VPIn2Y6pxKP7z5eupd3R/
RTsOcZPzJjRn0H0U3TisbDdxmzGduT8Sh/UnBA++OlK+NYyD8oIFGMgk/2ES
B+txwpvB92n/aREHn8M25x6/pfqFbRzYLxSK5nky+T8OqYl40thJ+uAWB4MH
zgF5lqQnvnHgVy7970Up6Q0rDsMXin4eZ/b77Dgk5We5GFiRfnHiMKzEfmIr
n/RNGIehKoOnvLhJ+pcpHp+4dwttX5Fe5sahQGG647MO0teiOJRefLf15AdG
/+Mw75OanlHNJ8r/cVgrnLNlfd5nyv9xCDkaMDtNt5v0Pw6s+WO31KQQ18dh
ykdDd+E74mZxf3cJwsvUe0j/49C4fL38VCfi7jhsCT4QGJtO3BeHmgfVu9+X
E0vE4+SnjvhxLcQy8Qjc92H3sJ/E8vH4lF+ZdlHqC81/PGzuSrEmShMrx8M8
mP9qwS/6e9V41PobjhjxgVg7HjKv9qwouEesGw+TNVc9/jtKjHh82/vkDMuF
2DAeQXkn3jTNJTaJx68b/Pzt7dRfC/G/TzqtIicito1H3KWRS7UMiJ3iEfUx
8MWjSzSebvGQOtxq3fyKxts3Hss4s/cP7aX5YMXD4GXVtps/aL7Y8VDrdHqQ
1MH4v3g0vJ6h8OMhzbcwHhMWFdsHHaV4yIzH3xidvPw9FC+54vd5/Kpg1ASK
p6J4vHf0mWNwjeKtJB6bTikubTCjeCyLx/jDqwZx31C8VsSjxHzCsFm7KZ6r
4/HcI/puaR7Fe308+oy2Osxl6nvN8XicOPqS7XJaL23xSNnTmze6i+qH3fHY
+7a24Vcc1Vv64nFzxfGW2CV0PiqRAL/Jy76NWUn7B5kEXLyu/DZbh+qb8gni
/UxfX7Yq+RXFBKScmLBAfXUizX8CnCNqZ9XZUn1VNQH+G4rX9C+l75doJ+DQ
avPbpa10Pq2bgLZD/S4v51N9FwlIKOLu2KxP/sQwAYsKr31xbGLO0xPw+1Bf
xSkfyn8W4n+3bl0/YzjlR9sEHNcJ2S7FpfzplIA1PlO6jNjMfYMEmCLqZgbI
j/gmQDuusTO3h/IzKwEbPlZ9y0gjP8JOwM6oqguHlzL1/wQoDHTvuVtNeiAU
f37W+bVzrEkvMsXPv3Y0fN1AepIr7v+zved/bSL9KUrATL8q+2PFpE8lCZh+
dtNBqShm/5+AKmnZ4sXqpHcVCeJ8pIbUu8TVCbg/QTazxpL0sj4Bo7f+/S/t
A3FzAiIGjDVPOjP6n4Cjl70dC94x+p8Ai2Umvfbbein/J2Bz0vqo2KvEEomY
aJHc3aD4jfJ/Ihawgq9McSGWT0TVsVBjpQvEionQ7kwOyPlKrJwInYmP3DJm
f6f5T8SIyzVKDSbE2okI1Xnha+RKrJuI4MiLX56FESMRQzNuyHvEERsmIqTT
K2hMDLFJIubypm0pDiC2SMSP3yVeO+yIbROhMp7dOwzETomYs232sLrRxG6J
WKY0q+tBPb2vbyIKFk3aL8snZiUiXeHxrrNridni933cbvWmi8aHk4j7Pxby
bscSCxOxaoXyksgpxJmJKNmcN2fHSRrv3ER8vNP22ncWcVGi2P20TJuVzvi/
RDxW9N1xkvE/ZYnwHHV2ofF+Zv7F/dsxyMHlLlP/SURH2p3HthOJ6xPBjVb4
NLyS4qs5EU9bBRYHTMjftCXi4pghEplM/aY7EWdK1c5YLKR6TV8iojo4bpt4
FN8SSdCM+SC/vJU5/0vC5BN/vT9rkZ+RT8LPi9V7lrrQ+lFMEvvLe2rDMpn7
UUloK3z2pkhA6081CXvvFOo7vmLuSydh33j/xTsn0vrVTcJH6fEepeuZ+/1J
0DodO+G4O9VXDJNgsLb7l5oKnfeaJGG+2m+fwbZ0PmyRhMJvN+6PVqPzHdsk
KA7/XaXnFU/zn4Qel31KN0flUv5PwpMVH33bU6g+7JuEku+OZjqRtD9jJeH0
m4ebuudTvYQt7s/98HNTHSlfcpJQ1fK3dJMa+RNhElbs7uE9bqJ8m5mENf2Z
nKAwum+Qm4SFcUv6T8XS/rMoCR4mWwfrGlF+L0nCwYZDrCF/aT9blgSdGt9g
/Vym/p8E88GpssPXkH5UJ+Fi0/4EUR3pS30SUsIVd07YTnrUnATl2WEGhRWk
V21JkI1V84uaw+z/kyDQ9A+sCyL960vCqVDrx7XXSR8lOOCrCDpavUk/pTlw
7Vqxecxgxg9wcHaL3NqjMcQjONis9WSKMaP/8hwoNK+sa/AkVuDgi+uiO+Ma
GL/AgbLLh3fli77+48kc1Lj1nLsUTazMwbOGNd1lVcQzOTjhhwslMr3/WJWD
+ODJZ4J0iTU4MFq9btx3a2JtDhISb0yR9ybW4cBwq2T9zXBiXQ5+F85iyUQR
63Ew/L9Vga2BxOCgfFSMoaMT8WoOJnaNEvEMiQ05KB70tiNkCrExB2M7Fx7X
b6X3NeHAmMU98+EE8TYOLr/STBbtILbg4JSR9f6AQcTWHGyx1W8vyaTxseXg
rc6CzCgdYnsOZmtvvK98ncbbiQOTv3ab7+sTu4jHJ7986YPzNF9uHNz1Km46
qEzsyYHcMatuKRmaX18OXv/3R3j8GsVDIAfvT2d+27KH/A6LgxAtvXunvlM8
RXBwaeH2xasDyN+wOTAwK3O/1U3xGM+BmnTNzxpzqt9wOMi9scN53lnyMzxx
fwbbLz3/h+JdyMGwlVUc/eXkZzI4eLml0yihleoxmeL2y5bnZCynekw2B/21
CfoF4XS/JpcD5xMFKudLaL9QwEFBxsDTGTdoP1HEgdc2bsPUXvIvxRwcf173
pXQs+ZcScX+G3K3MW0nnuaUclP6Y8PGwmgmtPw4u1up8PXmavt9azoGs3hi2
yx+qr1RwIP99eBtfoeIfP+QgfZKZtr0C5atqDmwSalxMlSif1XGw9tO3h+WT
mf0aB591bSZ5jye/0sjB4pctt6ZLMfdTORhzXl92/DfKpy0clA2deEylmfJt
Gwf6ZSHP9t+mfNzJwTtdSw+JI7T/7BaP56pHa34fJH/Sy8HA1BaL/Qsp//dx
sGaw8mnzbvIn/Rzsbo8Ju3WE9EMiGZFnGvyeTyN9kU5GzOOMorHtxDLJGPem
dd+xPNKnEckYqjNlqoI96Zd8MuwdJLyGjiO9U0jGhairB6ZeY+oFyQg6Mvmh
pDXp5eRkOPp98LfpIVZOxlPVaPuWQNLfmcl45L947NoBYtVk5G5fMn2JF+m5
RjKKGj6u9HnD+ItkmN0vSbqx8sc/1knGa8Wrec+FxLrJ+PD1ZkT8O2I9cf9u
W6Sf+6+P9CcZgwyX3pm1nXh1Ml6MUr5eEURsmIwDLKOiCBGxcTJqz1l+NjxF
bJKMv1ff/R5eSLwtGcXuOnfuZhNbJMOlcI9UCIfYOhmHg6N89N2IbZNhazLs
w5jVxPbJ2JVxoXj8CGKnZAiOZyx0qKD3d0nGVU7BvRl+xG7JOJZXOMJ7KrFn
MoSDevyiS2h8fJMx5Km7X9Q64sBkWBiGa558wPgf8fglNZdMW0MckYzUEytK
FxTT/LDF8ZEwRjRnInF8Ms6b90pZMvUhTjLqT47lTLpL8cBLxuZB0ZOq5YiF
ybDJ/7Xh7SaKn4xkTDvmcvYK438zk7H6xdVFEQfIH2eL53ucQse16+RncsXx
9StPrUOS4rdAPH7rl1s9Wkx+pigZWquHLFqwm/xMcTJMz/eVfmTuN5WI40t2
0IOGZPL7pcn4+k5o1Z9G9Zgy8ft03NexTqf1WJ6M6dL1vbqqVO+sEPeXNSe6
dgSdFz1MxoisgvAPH2i9VydjXs+dJeUllA/qkmFdLzhiPIz8S30yljdl9W4R
Ub2lMRn53uWmehuKaP0no1y5r0PNz+5fPmpJxvvwbl6yP51ft4njYefxkuCZ
dN7TmQznXUUnEUL3S7qTcb9pfX1UC9Wje5MRsWmEVPoAne/0idfjAr6Jvyz5
lf5k9N7PO3dPhvyKRArmXI5fM8Wf/Ip0CjzH1bjU7aX8LZMCvWlfELmW8vuI
FJw073y+VInyv3wKokNDNGXfkT4opODT65oxYw6TfiimQOXC2kEHDMmfTE5B
RvNn5SUtpD/KKZhq+LOH60r+ZGYKVldGORxpJ/1STQF/Q3F2WS7pm4b436fP
btQ1ZeoLKZA+clvv5VdinRRo5ltc3hxLeqqbAo0XY7jG40l/9VJg2BVpGZdK
jBSE9t86/nAko/8peDjs2uunvoz+p+DVwqAqt3pG/1Ow8eeRmP0a30j/UzDi
QeQmkSfxthRErP3JqS0itkhBh/pv1d/NxNYp0ObenvdT+jvpv3j8e1Udbkwm
tk9BeeySlnWqxE4peDvQ6sSbTeySgs2rr88vnETsloI0tkzVUUlizxQctvIc
HtxI7fmmoD/E/eDOfOLAFMwf1q5lfpCYlYINK1WfsWcRR4j5jOzecTXUX3YK
SpoTzqq4E8enoC9of86nwcScFLRt2C6Xm0TjyUtB7pwb8QI5YmEKvifybg8O
p/nISMGoH7+S1nXRfGWmIOXho3NnNxJnp6B+Q+369Gya79wUcKcnrrrQQvFQ
kIKfSU/rog9SvBSlYGRTkcvWVoqn4hQk6ak1X9pM8VYinj/VOLVduRSPpSnQ
OeG1+VcPxWtZChaKgsdv1KR4Lk/BF7ujp+ZZUbxXpCBZs++SKJDWw8MUfP7l
vDUuhdZLtXg8z6vUL9Cj9VSXgm8aqr2XQeutPgWJes/bHjLf72pMQV61q4nP
JOb3GFIwYdoglfWttJ5bUnDfVP2AUQSt97YUmC/aNq5nKtVfOlPg3TPbKCbe
ndZ/CuyvzrDbPYjySW8KzpxVHK3Lp3zTlwJLt+ghG+dQPupPQVhAceku5vug
Elyc4ExmW8yierI0F6NnlY+ZupfynQwXWQk7J27MoHw4ggv9CzN7N7cw3xfm
wurRre8/mfuHClwY1RROmtFP+VZR/O+yj+3rflM+nsxFW5edw6QvzP1RLriT
V78faKJ8PpOLWmmrgYjrlO9VuThw2r4sN4X8igYXY6Tax5zVIP3Q5kJmmq72
UxnSFx0uHH1nf0YTsS4Xk/QWXPQ/RXqkx8WTrd258gdIv8DFHeHYAeFs0rfV
XGiaWRqdrSc25MLYQHP+nxDSR2MubBc/HzFrClOf4OLdR6PuujPE27goX891
Kl1MemzBRb/dh1eJxcTWXFzsmB0ircLoPxdr4gI3NsQx+s9FeEHu5Pr3jP5z
ob72lMa9BT9J/8XjueOXdaAXsRsXS5QSpGrziD25ENaE8AtriX254v31aYtv
n4kDuSi+rW+U9peYJZ7PleeMuIN+kf6L48F+SfCrPvp3Nhc6+zWLQ98Sx3Px
8dWew7E3iDlc7Cj1PibHIeZxseJTt776NmIhF7OOhP/9K0ucwQV/iPOGS5eo
f5lcDHcJWx9gTpzNhcO902v8P9J45XLxc8mMB+8PEReI5ztMLflrN413ERcq
ezjjX+8hLhaPZ+a1xI+VNF8lXNgM9Ujbq0JcysXBGzf1s31pfsu4uCfFypa5
SfFQzsX07/Wx/X8pXiq4mMDd7P95IfFDLhT9vtqZ2jH1OXH7D9p2itgUj3Vc
jBrBPm1jzNzXET9/ZXTNgC/5mUYuWpzKR71NJX/ezMVfRcf656fIv7dwYbko
oeXSGfL3bVxUP9GQ3ZfH+H/x/OUa/PyYxnyfi4v1q/ynm4bR/qGXi1+qTSt4
t+n+Sx8XcoE/ZRW86Dy3X8xxlcOPKzG/38WDpYZMxdnLVH+V5qG5YNAH/Sy6
zybDg0/5skRj5vckRvDgtmyYz9HX9P1HeR6Uh2WevfpuNa1/Hva9wZobYeRf
FMWf52o1+F4i5bPJPFTe7ZrXuYm+v6DMg//TFzKpwZQPZ/LA3onRO+9TvlTl
IenzPu2tMnTfUIOHL1vb7aQW0f5Rmwdebd2XaFXaX+rwsFJtYEjaHKqv6PIg
ehNSoTKD6it6PDyY1u6pIUf5Hzz0sI3fFH+k+spqHr6++Xap+grthw15mPT9
zj6uP+mLMQ8R/M7/RquT/pjwELxFqLergvRpGw/DRqpFbchjzit4mLolYVCX
A+mbNQ/3VbdI5U9k9v/iv5e5YD7zFrP/54kHb1aAhC3ppxMPS50Ou3/+QuzC
w4WBzNZcf9JfNx7stJb87vhO7MmDV89HZT9HRv958KyeGab0kNF/Hj5WTJM+
OpP8AouHrYWJn5+6EUfwsHO05yBRETGbh1jFk2kV74jjeZDoUTixcfgP0n8e
ft9THzNpJjFP/H7Xd5xVnUcs5OGXnHRAIMMZPMy9utN12iziTB5qPQ6unT6C
OJuH9t5tuoIP1F4uDzeXPpghKCYu4OGtwRMjPW/iIh5cQk+U5cwhLhaPl8bR
wP466m8JD/IeD1/aexCX8vBit7b2WGniMh44yBi6KpbGr5yHivd9x5cw/qaC
hwM2iwLXeNH4P+Rhy7A5xaUvab6qecjwPJX+ayFxHQ9DLgwts46m+a7nwWTv
izF4TPHQyINF8bDnAyOZ8zse3ixIqHkdTfHUIn6/ubtcHr+leGvjod9yQ4mX
JvmZTh4GLXxXG+5EfqabhwVWGY1XeBTPveLxetnC+nKO4r2PB5WnA0qTy2k9
9PMwLvSHxopKWi8SfNxZu8HoVxSdL0nzESo3cKLVkeoxMnzUvRjkmLCY6jEj
+Dhq4nxnQh/VR+X52Bog1J9pTvVTBT7GhN7SeZxD3z9S5EPK5oHR5QeXaP3z
cbvg0NPDOUJa/3w4LHpoxZqcQ/rPx84L2avStl0j/eejysjYTZ1D59cafCSH
9U8eWEL+RZsPgxlX5zvk0n5Mh48XS9VlK+TJv+jyoe6U9z3HjfyLHh+Cix4T
n7xlfr+Ejys7pU5cH0L5dDUfLkPTjwyfwdxH5CMhcLTj+UWUj43Fn7+9cm4p
mO+n8OE1qctlNiifbxOPl9EEoy/M/UoLPuxnnrccq0R6YM3H+68qFsv9mfsL
4vYNjFdwdpGe2PPxPFjR77ce6Y0THyaGITmSzP0QFz6+OZXXznlF7MbHtifO
w2SPkZ558jFZGNSz2JI57+DDznB42ZZhzP6fj8xpxd/6C4lZfLjnHNn3dh3p
awQfq0LzP55+RszmQ3rLVr+xlqTP8XzETveSultDzOGjpjjcJkyf0X/x3+cP
qMoeZvSfD2XbF87q3Yz+81ERve7x2UXkNzLFn2egLPR3I87mYzgGb9p7mDiX
j8ejq8N3XCMu4OPAlMw7a6qJi/gY23X78bRnxMV8PG3J+9vyiLiEj8OmT5+k
XSEuFY/nzdRFm0XEZeL4VRW6Ku4nLufD2faTr4I2cQUfDUuy3zq20fs/5EMi
QMNOj0dczUfBzgUeNxh/VsfH9xCDLdPv0fjU87HmZmE9bxNxIx+eO4MWmtyn
8W3mY0KvQ1TiUuIW8Xr8Ey2VcpTmp00cr21WKid/0nx28uF9cP+86euJu8Xt
Ob6PtU+k+e/lg7WmNL2hkrnvI/68z3Erfv6meOrnY/n4zjU6s4glBNgycOeI
1FqKP2kBVtoY7GqwYep/AvyMiNuyvZn89wgBZvVM1b7WS/5cXoBGz3yLG7/J
vysIENEz3WDhd/L3igIUDr3tKf2e8f8CBB4/069SSfsDZTGHTV9+Jov2DzMF
2NZvbnbPi9anqgAs1LqYh1L9VEMA+XefClfLUn1VWwD3bOOxb+Lovq6OAHs0
RlkZytL3qXUF2HHYacbjb/T7iXoCmDlF+/Mv0e9pQYAE/wptyRECWv8CDMgU
P/Yxpfu3hgLoHMt5pnSX7u8ZC/BmrJtzlj3dbzER4Km2lygwj+ov2wQQ+X+Z
lTaB/IuFAIsrNvHm+NB+0FqAduNazpm7tF+0FSBgk9/3eknKx/YCJMq+G985
jvK1kwDVIw1Hek6lfO4iwPeT7Et2kyjfuwkw4r587xUZ0gNPAZDwY35YG3Pf
Vfz5LssX3y0hPQkUoIAndOP7kt6wBAgpmfcyZCzpUYQAdz80qca/IWYL8NhW
433/CdKzeAE6j3fL7LUlveMIoHZh6/hd8sz+X4CDJu1qiReY/b8Atue3zTyy
mfQ0Qzx/q6KGrnpFnClAr//phsW7SY+zxf0ROMXo1xPnCjBj09ORk1Yx+i/A
/KHzDYXHGP0X4Nr5aQfYXxn9F2D4ilW/ynTJT5QIoFjb92aaO3GpAJfX1KTF
ZRCXCfAyw7Hy6xXicgGeaaeab3lIXCGAVcC07hPVxA8FMCws/vHrHnG1ACfG
P19ke464Tvz3wu2+HUnE9QLInRc6nLMlbhTA/875j7WMX2oWj2/501UHG+n9
W8TjdX3so+xo4jYBTptNDMhUIe4UYNGZm/HJl2l8usXj1/tqyVkQ9woQV1l/
Y2UpjW+fAIKPw4O5GsT94vW1zvXdz2SaH4lUtMm8WFzbSfMpnYoWa80Ulj6x
TCpUAvYm2EUw53+p+FNc69Vwk+JDPhXLfLw2R3eS/1VIxYiB3ZtbV1F8Kabi
bjlveVgsxd/kVBQ+0n01hLk/pZwK9fx907XbyH/PTMW+zj0OVRIU36qpsD7T
/faeLMW/RiocSzUSZgyn9aGdCsuhk5t/9VM9RicVilvmeXbep/Wlm4r170bk
h8bQ+tNLhd/HpSv6FzO/L5mKrwP3vSPqaf2uFn9eppPt8pe0vg1TES/Rc/rJ
K/p9UONUTHVdbDG4hn4f0CQV56oO7olJ55D+i//9vYql5Tr6/pBFKiqa+v5O
1aX8Y50KF7x5MMmY7ufZpkJjZ4/zdk3KX/apOKO6c/POM3Qf10nMP1ZW8tUo
/7mkQs3+QOhtY+b31FJx6fbQpv3BlD89UzGQFV+cm0v51TcVR8eetT5wn/Jv
YCqmH1z388Jbys+sVLzr9a1kdVP+jkjFt0EPTld8ofzOTsXcsTtDw9oo/8en
YuYUTssmJ+Z+bCoUHiroSJuRfvDE8eE9q//FEqb+n4ofN/JObBxPepSRio6m
+dvftRNnpiIivkZmNnPekJ2K/pzF3AJP0rfcVEgGSjXKzSE9LEjFl4T+C5+e
Mfv/VGhprK7v8SH9LE7F+zmTNtwaSXpbkorgRTtc5ITEpakwuhjrFzOe9Los
FTu8Pzp2sonLUzHJdOGd75+IK1LRHly819WQ/MBD8ecnfbk2k09cnYoDSpc+
dNYR16VCbvslxxNDf5P+p2LK5l8/5msSN6aiaMkK+9A1xM2pMBy75Eq4CXGL
uD+vzl/S2UTclgqbsWmWqcuJO1Mx2zbK7NJ04u5ULC95O/vUD2q/NxVbbebm
xZQR96VinM1c6aBA4v5UhBxJnlc4h1hCiNHtH+wNH1F/pYWQGZR8LsSeWEaI
hvbH+6M+0fiNEOKHppZ7iguxvBC/Nl1mN72i8VcQ4mJbZWDOGmJFIc5XqETp
HqP5mizE1i8TrN/1MPeHhMis0F8zRJc5/xPigda+c8M9KR5UhbDbKb3Sjrlf
oyFEv2LsIfZj5n6xELuT7xb3fmbqf0Jw538uUmbqgbpCqG30fMxSpHjVE+LI
Cl/1YasoniFEGvfkVu11FO+rhTiz8+buzctpPRgK8WpxmMM6NVovxuLPdzCu
GD6M1pOJEIIFZ7dmvaL9wzYhzOexvi/Ip3qMhRDqE6+pfXxN9RhrIco5Y7/a
WDO/jyTEu40rCi0fUf3VXoj4i2/j9ulSPcZJiAuq5hsll1L91kWIqxfufLry
k86n3cTjObjKbNOPPFr/QqwpeX868zv9nrKvEA4z2mqznWn/FSiE66y5jTdf
M78/J0Rkm9aSYb9p/xYhFO9vhSYfmd/7ZQux+PCQt/wftP+LF0KpZ0Txbxu6
f8gRx8fNprkbLSn/8oRQPJM2IBnAnP8LESb9cJUnh+rpGUL81fHYEC9ivj8r
jieb2nfgU/7PFmLtZ/UAbhjpQ64Q9rpOJXG2pB8FQtTeaZuoo8XU/4X4EN9y
SthB+lMsROGz0SPt75M+lYjHu8LG5SOf9KtUiNAhR7ju5qRvZUIMupAdFc+c
V5QL8fVGB+/lFeIKIbqmmbUPYu6bPBTHyz7L5Rd6iKuFaNa0/ZIbQPpbJ/73
4Sdfp/8krhdi45H63Vv2k343CtH3Z1pDcjVxs3j8n21rUlcjP9AixIgLf9s+
exK3CaFiOz/m6nniTiGSh10LcHtP3C3EyoIq3q9hfaT/QgxJVp++eTpxnxDf
Ds3Pd5lD3C+EkZqtuqUqsYQIFjcf3Z6lSCwtwpbKdRbvftHny4iwQbdfNZ/x
PyNEWMnqbhKKiOVFeF1jrfnAjFhBhE2ujevsBxMrirD/6zWpuFzq72QRWmIu
JLsYECuLcCRvquXy+zReM0XwKt7JNlhPrCpC/tD39y8zfkZDBDe79C6JWcz9
HxF+3zLVcg+j+dIR4eRUeW+Xp8z5nwirV634tH0qsZ4I/nZjTnB3MvePxe+X
bzcijEvxslqElzvk5H6xKJ4MRfgVJ/f8UiXdnzEWwcb0RFOHJMWjiQinG9kP
1qlTvG4T4WjOouvcVRTPFiIsDHa+l7+J4t1ahER9fQ7bmNaDrQh7N2XW6i2n
9WIvws3Zmy9+mknryUkE2UnVL9KkaL25iBAwepeHbAGtRzcRpt4c5Oy2htar
pwjV0k9rHmfRevYVj/cJ0cWGk7TeA0XQqb028uhcygcsEVKs3g4Lr6V8ESF+
P7N5eTYXKJ+wxfEgXdxdeJHyTby4/3/1Q6RkKR9xRFhQ/XdCmRLlK54IuTly
qxoKKZ8JRVA2vrB7+RLKdxki2GdNHbfrKvP7biIsibmS+0FI+TJbzAsEwilV
lE9zReiX3luj/5PqMQUiNPasLtObTPm4SIRsm4fbxjH3G4vF491iVXZzJeXz
EhEEa2W3LF5N+b5UBOfZrTfmT2bu34qwfpXL1MmjSC/KRQg+G2a06RdzH1ME
rVmrpq5qYur/IhSEVC33v8R8P0eEkaauJf5s0qs6Ec5b1EXXbiY9qxch5Eet
ttJI0r9G8fglvrv16QZxs/jvb0y93e3I7P9FuCN0sKuQJn1tE2HK0HcrpguI
O0V40XHwYr4S6XO3CCpJgqgpfOJecbxHJJXNZ85z+kSYOXdV0Ok9jP6LUBi/
z9rqIqP/aQhg78iX/UMsnYaKiJ41okXkL2TScHnR/B3v9xCPSEP/nyzd+lBi
+TTo6ym77uYSK6Rhpc2Nib6pxIppeDSmxFcpkXhyGk4Pcgwz9SFWToPblDs6
80yJZ6ZBe0Dd6RHjb1TFz4efktr4jt5PIw3LVWwzn6YSa6dhiPDbC74BsU4a
+j4oF11/SeOhmwZbfYn94c7EemnIEunumdjJ3P9JwzTrWc9K9jD3f9JQmRFa
fqSK5sMwDaO3fTMfpUlsnIY54ydZWIQy539p2PJ5SPuT+zTf29IgmSiQaBlG
bJEGx23uer+XU3xYi59/vEmVw3yfyzYN42qmuU1NoPiyT4PmCUH19ByKP6c0
FB3TvzHmMsWrSxpaB1WZVkYx329Pg8SuHzkjEqje6JkGOdnC7IpIqkf6pmH3
W8s5L92pXhmYhtUv2iTmbKV6JisNrsLCrMuzaX1FpCHv5KnDh5nzXHYalGa+
lRh6ifYb8WnoklDod/9A+xFOGgyKTE5LmlI9hpeGiZH3X2+/SPsZYRoSrl0K
6p5F9ZiMNDzm6c/PeEb7ocw0+K7SexM2hOox2WkIO7+7SiosmdZ/Gpb8NUtz
8C0g/U+D9YLWi+52dL+vKA2JxfvyVqbT+XlxGrxu2NY52tJ5UkkadO+FlXBb
ab9XKn4/012P0m3pPKksDddfVn3sraDzpPI0/Bjxq1A+ieoxFWlomz6J/eo0
7TcfpuFrxaXOm7doP1otHh/3mT65lbRfrUvDOafxkfG3qB5Tn4aGGRHdbgVU
v28Ux2O6j9zOKOb7u2lQTl6z3nIz6U1LGmReDx+8NJz0qC0N4yMOdlubkV51
iuN1/VjRsSmkZ93i9WS7N0/E3LftTcPg3fXhrxJJD/vSoHohZ+mYxcz+Pw3b
ncaUvq4llkiH3om3Gr/sSW+l0zFk3ZTnSh3EMulYYf1MbrAd6fWIdFjqPz8Y
8JhYPh37nzzMWz+X0f90TLB7LIUwRv/Tsd2sc9nCCuLJ6SjYWXVrqCT5DeV0
HFGwrjiiQTwzHXvz9n/sMCJWTcfP8E1mH6yINdLx1GviIt4uYu10zNKPu/TX
jFgnHRo9l1OXGhDrpsNMbtwZKyVivXR0KU06HdRB74N0JPwYZH29gHh1Ok4O
e5KwfA+xYTqS9Ro6/pMlNk7HqrXBe/k51H+TdGzWvTHl3mLibemYcTdM78tV
5v5POs6W+Kyx0mHu/6TjwIpx+7cco/G3TUfw0E0ZmlLE9umIef/X0MSSOf9L
R0+q1pypOTS//6vpysNq+rpwEg36ZYgUSZKkQpIUYamkSFHJ0CBRQpKkksqU
kKE0Sd3pDPfcECoUmUKFSoXKFBIqSUiShO88z7f2n+8T95yz1/Cutfbaawdl
gRc98XzfR9SHkCwouZh2w3k84rAs0MyNqQh1Q/2JzAKjU5oeB35gvBydBfn9
dnYZTSfnn/j1mllKxfuifsZlQa/6qCdusaT/NwtmW/rN8TtG+n+zICAiX1lw
HPU/KQsW3Pjno7gf7SM1Cz64cjF3NqP9ZPD6pWVv3k3mEQqyoFB0p7d0Dtqf
JAtqD2olOz5F+2SzIFJRObPQD+03OwvW9Hg42JWgfefw75Mjb//rPLH/LIh5
FJDmMwHvg7mUBWeC88qoownI/1mw/VO45a0ynL9wnf//IXUlKnrkPp0sUIvL
pYf7Yj2mJAsSD56fOtcJ/df9LPgYkVw/6B3WYyqz4PU3G+mrbeR8ZhZ86owe
r7kL/WNtFpTX54qrC9B/PssC9V/LXLrasB7TkAWT19n92a6B/rcxC27m5zEL
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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 2999.}, {-1.7470434857, 1.53982403922}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 2999.}, {-1.7470434857, 1.53982403922}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"cumulant\"", "\"srt\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.673179212453184*^9, 3.6731792493137703`*^9}, 
   3.673179334162771*^9, {3.6731793751058598`*^9, 3.673179421894968*^9}, {
   3.673179627808655*^9, 3.6731796404487123`*^9}, {3.6732538661033173`*^9, 
   3.6732538819570217`*^9}, {3.6732539417327757`*^9, 3.6732539577705383`*^9}, 
   3.6732540103387623`*^9, 3.673254044037732*^9, 3.673254697431169*^9, 
   3.673254743639769*^9, 3.673414524643612*^9, {3.6734146458173656`*^9, 
   3.673414706364491*^9}, 3.6734147444549627`*^9, {3.673436556297564*^9, 
   3.67343657417741*^9}, {3.6734366210874567`*^9, 3.6734366359084787`*^9}, {
   3.673436718004656*^9, 3.673436819005183*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"bothDragMeansPlotReady", ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<cumulant\>\"", ",", "\"\<srt\>\""}], "}"}]}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQbRrg5P8g9rVjjksamF60MykWRMc8v5IMokMXyWSA
6A7RI2D6hH1gN5j/qR1Mf3M41Q+iAye/BNOXy/4sBJvzf+FiED2nYuMqEM1Q
3LwWRP/O/HYaRDMp3TsHoo1Nnr0A0QYbxV6C6LT4o5wPgXRbgT0XiNZ7sU4f
RD9pMTMA0ce+9duD6KDECjcQrbRSyRtEM+w9GgSiY3oz00F056HZGWD9Nuqr
HgHpc2sM1oNovcbfyk+BtMeKbxogesXcyI0cca8drQIngmkHic7iNiB9JiGs
HERvscnpANFh/1Z0g2gG6ctrQXT+hKPrQDQAkYyuAw==
  "]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3., 0.7512656353438469}, {4., 0.5880592175879853}, {5., 
         0.3402264017391703}, {7., 0.3039455115669636}, {10., 
         0.26118071280039423`}, {15., -0.028866016465211253`}, {20., 
         0.04037996671030353}, {25., -0.10128021363411843`}, {
         30., -0.1339623191132846}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3., 1.0583108923399998`}, {4., 1.1881826511968745`}, {5., 
         0.09969561465895627}, {7., 0.18910116130690557`}, {10., 
         0.2669774900299995}, {15., -0.04453308584915483}, {
         20., -0.021183352720140824`}, {25., -0.14247858092358623`}, {
         30., -0.1606177278048495}}]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {2.578125, 0}, 
     PlotRange -> {{3., 30.}, {-0.1606177278048495, 1.1881826511968745`}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {2.578125, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{3., 30.}, {-0.1606177278048495, 1.1881826511968745`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"cumulant\"", "\"srt\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.673097031154768*^9, 3.673097345446083*^9, 3.6730974600575943`*^9, 
   3.673097503935734*^9, {3.6730975434208727`*^9, 3.67309756272398*^9}, {
   3.673097829486786*^9, 3.67309785767553*^9}, 3.673097905464336*^9, 
   3.673098057869245*^9, {3.673098315435607*^9, 3.673098322857152*^9}, 
   3.67309842275972*^9, {3.673098600232211*^9, 3.673098642375711*^9}, 
   3.67309872670199*^9, {3.6730987961918592`*^9, 3.6730988046103373`*^9}, {
   3.673098847191062*^9, 3.67309890392924*^9}, 3.6730990783656387`*^9, {
   3.673101681134211*^9, 3.673101691366282*^9}, {3.673106749700079*^9, 
   3.673106815199127*^9}, {3.67317826865147*^9, 3.673178285929949*^9}, 
   3.6731794621372623`*^9, 3.673179533942894*^9, {3.673179629326338*^9, 
   3.673179641637088*^9}, {3.6732538674054613`*^9, 3.6732538828352118`*^9}, {
   3.673253938003955*^9, 3.6732539587980824`*^9}, 3.673254011096438*^9, 
   3.67325488059746*^9, 3.673255081906571*^9, 3.6732552521444473`*^9, 
   3.673414527340437*^9, 3.673437044099391*^9, {3.673437086722638*^9, 
   3.6734371159819937`*^9}, 3.673437278825179*^9, 3.673437560148391*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Drop", "[", 
      RowBox[{"#", ",", "4"}], "]"}], "&"}], "/@", "bothLiftMeansPlotReady"}],
    ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<cumulant\>\"", ",", "\"\<srt\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.673179673115848*^9, 3.67317967471574*^9}, {
  3.673437567574448*^9, 3.6734375930374727`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{10., -0.15096347835986054`}, {15., -0.09885289391089568}, {
         20., -0.053553954527530936`}, {25., -0.047734652527188795`}, {
         30., -0.014705256870567927`}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{10., -0.09562273075362572}, {15., -0.08911705293001156}, {
         20., -0.04699456427481928}, {25., -0.04375495641502736}, {
         30., -0.02504239616876406}}]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {9.687500000000002, 0}, 
     PlotRange -> {{10., 30.}, {-0.15096347835986054`, 0}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {9.687500000000002, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{10., 30.}, {-0.15096347835986054`, 0}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"cumulant\"", "\"srt\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.673179676120957*^9, {3.673253868952506*^9, 3.6732538837351*^9}, {
   3.6732539434727507`*^9, 3.67325395999235*^9}, 3.673254011892273*^9, 
   3.6734145286222363`*^9, 3.673437121916119*^9, {3.6734375767983637`*^9, 
   3.6734375948075438`*^9}}]
}, Open  ]]
},
WindowSize->{1297, 1005},
WindowMargins->{{-9, Automatic}, {Automatic, -2}},
FrontEndVersion->"10.3 for Linux x86 (64-bit) (October 9, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 670, 13, 55, "Input"],
Cell[1253, 37, 673, 10, 32, "Output"]
}, Open  ]],
Cell[1941, 50, 2626, 62, 209, "Input"],
Cell[4570, 114, 8284, 202, 451, "Input"],
Cell[12857, 318, 110, 1, 55, "Input"],
Cell[CellGroupData[{
Cell[12992, 323, 1187, 27, 55, "Input"],
Cell[14182, 352, 94839, 1606, 560, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109058, 1963, 678, 14, 32, "Input"],
Cell[109739, 1979, 12724, 255, 225, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122500, 2239, 459, 13, 32, "Input"],
Cell[122962, 2254, 11621, 240, 255, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
