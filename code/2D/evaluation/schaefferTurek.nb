(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    121974,       2628]
NotebookOptionsPosition[    119717,       2560]
NotebookOutlinePosition[    120055,       2575]
CellTagsIndexPosition[    120012,       2572]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ParentDirectory", "[", 
      RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", "\"\<out\>\"", ",",
      " ", "\"\<schaeferTurek\>\""}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.672580864567045*^9, 3.672580918227888*^9}, {
  3.6727427728111067`*^9, 3.672742773818266*^9}, {3.673092250885898*^9, 
  3.6730922623248997`*^9}}],

Cell[BoxData["\<\"/home/florian/Projects/university/masters_thesis/code/2D/\
out/schaeferTurek\"\>"], "Output",
 CellChangeTimes->{3.672580921609523*^9, 3.672742774503965*^9, 
  3.673092266565982*^9, 3.673092399911118*^9, 3.67309487776821*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"srts", " ", "=", " ", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"FileNames", "[", "]"}], ",", " ", 
     RowBox[{"FileNames", "[", "\"\<*time\>\"", "]"}], ",", " ", 
     RowBox[{"FileNames", "[", "\"\<cumulant*\>\"", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cumulants", " ", "=", " ", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"FileNames", "[", "]"}], ",", " ", 
     RowBox[{"FileNames", "[", "\"\<*time\>\"", "]"}], ",", " ", 
     RowBox[{"FileNames", "[", "\"\<srt*\>\"", "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.673092281613497*^9, 3.673092290876423*^9}, 
   3.673094976793765*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"values", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "3", ",", "4", ",", "5", ",", "7", ",", "10", ",", "15", ",", 
     "20", ",", "25", ",", "30", ",", "40"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6725836881381207`*^9, 3.6725837161947536`*^9}, {
  3.672583877797408*^9, 3.672583907657569*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"loadCSV", "[", 
    RowBox[{"collision_String", ",", "size_Integer"}], "]"}], ":=", 
   RowBox[{"Delete", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"collision", "<>", "\"\<_Re100_size\>\"", "<>", 
        RowBox[{"ToString", "[", "size", "]"}]}], ",", "\"\<CSV\>\""}], "]"}],
      ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"loadDragData", "[", 
     RowBox[{"collision_String", ",", "size_Integer"}], "]"}], " ", ":=", " ", 
    RowBox[{"Drop", "[", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Delete", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}], ",", 
        RowBox[{"loadCSV", "[", 
         RowBox[{"collision", ",", "size"}], "]"}]}], "]"}], ",", "1000"}], 
     "]"}]}], ";", 
   RowBox[{
    RowBox[{"loadLiftData", "[", 
     RowBox[{"collision_String", ",", "size_Integer"}], "]"}], " ", ":=", " ", 
    RowBox[{"Drop", "[", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Delete", "[", 
          RowBox[{"#", ",", "2"}], "]"}], "&"}], ",", 
        RowBox[{"loadCSV", "[", 
         RowBox[{"collision", ",", "size"}], "]"}]}], "]"}], ",", "1000"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dragDataFrequency", "[", 
    RowBox[{"collision_String", ",", " ", "size_Integer"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"Abs", "[", 
    RowBox[{"Fourier", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
      RowBox[{"dragData", "[", 
       RowBox[{"collision", ",", "size"}], "]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"liftDataFrequency", "[", 
     RowBox[{"collision_String", ",", " ", "size_Integer"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"Abs", "[", 
     RowBox[{"Fourier", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
       RowBox[{"liftData", "[", 
        RowBox[{"collision", ",", "size"}], "]"}]}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maximaPositions", "[", "list_", "]"}], " ", ":=", 
   RowBox[{"1", "+", 
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{"Differences", "[", 
       RowBox[{"Sign", "[", 
        RowBox[{"Differences", "[", 
         RowBox[{"list", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
      
      RowBox[{"-", "2"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"minimaPositions", "[", "list_", "]"}], " ", ":=", 
   RowBox[{"1", "+", 
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{"Differences", "[", 
       RowBox[{"Sign", "[", 
        RowBox[{"Differences", "[", 
         RowBox[{"list", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
      "2"}], "]"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lastWavelimits", "[", "data_", "]"}], ":=", 
   RowBox[{"Flatten", "[", " ", 
    RowBox[{"Take", "[", 
     RowBox[{
      RowBox[{"maximaPositions", "[", "data", "]"}], ",", 
      RowBox[{"-", "2"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"lastWavelength", "[", "data_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Differences", "[", 
      RowBox[{"lastWavelimitsLift", "[", "data", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"lastWaveLift", "[", "data_", "]"}], "  ", ":=", " ", 
    RowBox[{"Take", "[", 
     RowBox[{"data", ",", 
      RowBox[{"lastWavelimitsLift", "[", "data", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getCumulantAndSRT", "[", "size_Integer", "]"}], " ", ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"getDragData", "[", 
       RowBox[{"\"\<cumulant\>\"", ",", "size"}], "]"}], ",", 
      RowBox[{"getDragData", "[", 
       RowBox[{"\"\<srt\>\"", ",", " ", "size"}], "]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotCumulantVsSRT", "[", "size_Integer", "]"}], " ", ":=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"getCumulantAndSRT", "[", "size", "]"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<cumulant\>\"", ",", "\"\<SRT\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getCumulantAndNextSRT", "[", "position_Integer", "]"}], " ", ":=",
    " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"getDragData", "[", 
      RowBox[{"\"\<cumulant\>\"", ",", 
       RowBox[{"values", "[", 
        RowBox[{"[", "position", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"getDragData", "[", 
      RowBox[{"\"\<srt\>\"", ",", " ", 
       RowBox[{"values", "[", 
        RowBox[{"[", 
         RowBox[{"position", "+", "1"}], "]"}], "]"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotCumulantVsNextSRT", "[", "position_Integer", "]"}], " ", ":=",
    " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"getCumulantAndNextSRT", "[", "position", "]"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<cumulant\>\"", ",", "\"\<SRT\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getCumulantAndShiftSRT", "[", 
    RowBox[{"position_Integer", ",", "shift_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"getDragData", "[", 
      RowBox[{"\"\<cumulant\>\"", ",", 
       RowBox[{"values", "[", 
        RowBox[{"[", "position", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"getDragData", "[", 
      RowBox[{"\"\<srt\>\"", ",", " ", 
       RowBox[{"values", "[", 
        RowBox[{"[", 
         RowBox[{"position", "+", "shift"}], "]"}], "]"}]}], "]"}]}], "}"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotCumulantVsShiftSRT", "[", 
    RowBox[{"position_Integer", ",", "shift_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"getCumulantAndShiftSRT", "[", 
      RowBox[{"position", ",", "shift"}], "]"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<cumulant\>\"", ",", "\"\<SRT\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getCumulantsFromTo", "[", 
    RowBox[{"start_Integer", ",", "end_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"getDragData", "[", 
      RowBox[{"\"\<cumulant\>\"", ",", 
       RowBox[{"values", "[", 
        RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"start", ",", "end"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotCumulantsFromTo", "[", 
    RowBox[{"start_Integer", ",", "end_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"getCumulantsFromTo", "[", 
      RowBox[{"start", ",", "end"}], "]"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"ToString", " ", "/@", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"values", "[", 
           RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", " ", 
         RowBox[{"Range", "[", 
          RowBox[{"3", ",", "8"}], "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"getSRTFromTo", "[", 
    RowBox[{"start_Integer", ",", "end_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"getDragData", "[", 
      RowBox[{"\"\<srt\>\"", ",", 
       RowBox[{"values", "[", 
        RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"start", ",", "end"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotSRTFromTo", "[", 
    RowBox[{"start_Integer", ",", "end_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"getSRTFromTo", "[", 
      RowBox[{"start", ",", "end"}], "]"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"ToString", " ", "/@", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"values", "[", 
           RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", " ", 
         RowBox[{"Range", "[", 
          RowBox[{"3", ",", "8"}], "]"}]}], ")"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getCumulantsFrequencyFromTo", "[", 
    RowBox[{"start_Integer", ",", "end_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"getDragDataFrequency", "[", 
      RowBox[{"\"\<cumulant\>\"", ",", 
       RowBox[{"values", "[", 
        RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"start", ",", "end"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotCumulantsFrequencyFromTo", "[", 
    RowBox[{"start_Integer", ",", "end_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"getCumulantsFrequencyFromTo", "[", 
      RowBox[{"start", ",", "end"}], "]"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"ToString", " ", "/@", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"values", "[", 
           RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", " ", 
         RowBox[{"Range", "[", 
          RowBox[{"3", ",", "8"}], "]"}]}], ")"}]}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"plotCumulantsFrequencyFromToClip", "[", 
    RowBox[{"start_Integer", ",", "end_Integer", ",", "clip_Integer"}], "]"}],
    " ", ":=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{"#", ",", "clip"}], "]"}], "&"}], "/@", 
      RowBox[{"getCumulantsFrequencyFromTo", "[", 
       RowBox[{"start", ",", "end"}], "]"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"ToString", " ", "/@", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"values", "[", 
           RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", " ", 
         RowBox[{"Range", "[", 
          RowBox[{"3", ",", "8"}], "]"}]}], ")"}]}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"getSRTFrequencyFromTo", "[", 
    RowBox[{"start_Integer", ",", "end_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"getDragDataFrequency", "[", 
      RowBox[{"\"\<srt\>\"", ",", 
       RowBox[{"values", "[", 
        RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"start", ",", "end"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotSRTFrequencyFromTo", "[", 
    RowBox[{"start_Integer", ",", "end_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"getSRTFrequencyFromTo", "[", 
      RowBox[{"start", ",", "end"}], "]"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"ToString", " ", "/@", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"values", "[", 
           RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", " ", 
         RowBox[{"Range", "[", 
          RowBox[{"3", ",", "8"}], "]"}]}], ")"}]}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotSRTFrequencyFromToClip", "[", 
    RowBox[{"start_Integer", ",", "end_Integer", ",", "clip_Integer"}], "]"}],
    " ", ":=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{"#", ",", "clip"}], "]"}], "&"}], "/@", 
      RowBox[{"getSRTFrequencyFromTo", "[", 
       RowBox[{"start", ",", "end"}], "]"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"ToString", " ", "/@", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"values", "[", 
           RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", " ", 
         RowBox[{"Range", "[", 
          RowBox[{"3", ",", "8"}], "]"}]}], ")"}]}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6725823422599573`*^9, 3.672582435965885*^9}, {
   3.672582483626233*^9, 3.672582580297577*^9}, {3.6725826157311993`*^9, 
   3.6725826514299593`*^9}, 3.672582733238015*^9, {3.67258285577174*^9, 
   3.6725828768205357`*^9}, {3.672582915434342*^9, 3.672582931154652*^9}, {
   3.672583051520362*^9, 3.672583143445752*^9}, {3.6725834005312138`*^9, 
   3.672583443083358*^9}, {3.672583723379056*^9, 3.6725838574641533`*^9}, {
   3.672583942786408*^9, 3.672583952521698*^9}, {3.672584061564065*^9, 
   3.672584103662696*^9}, {3.672584260547956*^9, 3.672584260693316*^9}, {
   3.672584337701766*^9, 3.6725843395023746`*^9}, {3.672742877666991*^9, 
   3.672742909546678*^9}, {3.672742969026902*^9, 3.672743080769724*^9}, 
   3.672743136959605*^9, 3.6727432439745407`*^9, {3.672743275275635*^9, 
   3.672743351439465*^9}, 3.672743512564859*^9, {3.672743580048732*^9, 
   3.6727435968908243`*^9}, {3.672743729873472*^9, 3.672743747047391*^9}, {
   3.672743873490389*^9, 3.6727439252413282`*^9}, {3.672744110911214*^9, 
   3.672744184442321*^9}, {3.6727442495330753`*^9, 3.672744251723825*^9}, {
   3.672744452428982*^9, 3.672744462862565*^9}, {3.6727445693917313`*^9, 
   3.672744577239976*^9}, {3.6727446198354807`*^9, 3.672744631925819*^9}, {
   3.6727447879928637`*^9, 3.672744803917776*^9}, {3.672744857740005*^9, 
   3.672744888976384*^9}, {3.672744971699565*^9, 3.672744989726317*^9}, {
   3.6727450621841087`*^9, 3.6727450730437717`*^9}, {3.673092323618346*^9, 
   3.673092355657235*^9}, 3.6730924225991573`*^9, {3.67309470161208*^9, 
   3.6730947930644617`*^9}, {3.673095397154846*^9, 3.673095497779792*^9}, {
   3.673095586671095*^9, 3.673095706470841*^9}, {3.673095740710279*^9, 
   3.673095807921278*^9}, {3.6730958656464243`*^9, 3.6730960781827183`*^9}, {
   3.673096127297567*^9, 3.673096208592517*^9}, {3.673096242238391*^9, 
   3.673096255410585*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"getLastWaveLift", "[", 
  RowBox[{"\"\<cumulant\>\"", ",", "15"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"getLastWavelengthLift", "[", 
  RowBox[{"\"\<cumulant\>\"", ",", "15"}], "]"}]}], "Input",
 CellChangeTimes->{{3.673095711889996*^9, 3.673095723527009*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1751", ",", "1873"}], "}"}]], "Output",
 CellChangeTimes->{{3.673095682370983*^9, 3.673095694389471*^9}, 
   3.673095725086493*^9, {3.6730957606966467`*^9, 3.673095810951503*^9}}],

Cell[BoxData["122"], "Output",
 CellChangeTimes->{{3.673095682370983*^9, 3.673095694389471*^9}, 
   3.673095725086493*^9, {3.6730957606966467`*^9, 3.673095810985146*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotCumulantsFromTo", "[", 
  RowBox[{"4", ",", "9"}], "]"}]], "Input",
 CellChangeTimes->{{3.6727431405810823`*^9, 3.6727432065993*^9}, {
  3.6727432462935867`*^9, 3.672743253126706*^9}, {3.672743357635051*^9, 
  3.672743381757711*^9}, {3.6727436577482233`*^9, 3.672743667546939*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Drop", "::", "drop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot drop positions \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\[NoBreak] through \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1000\\\"}]\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Drop/drop\\\", \
ButtonNote -> \\\"Drop::drop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673092400245929*^9, 3.6730948781970577`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListLinePlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\)\
\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListLinePlot\\\", ButtonNote -> \
\\\"ListLinePlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673092400245929*^9, 3.67309487845632*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListLinePlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\)\
\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListLinePlot\\\", ButtonNote -> \
\\\"ListLinePlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673092400245929*^9, 3.673094878728497*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"ListLinePlot", "[", 
          RowBox[{
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton",
             DisplayFunction->(FrameBox[
               
               RowBox[{
                "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
               Background -> GrayLevel[0.75], 
               BaseStyle -> {
                "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                 ShowStringCharacters -> False}, BaselinePosition -> Baseline,
                ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
               GrayLevel[0.75], RoundingRadius -> 7]& )], "}"}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"{", 
             
             RowBox[{"\<\"4\"\>", ",", "\<\"5\"\>", ",", "\<\"7\"\>", 
              ",", "\<\"10\"\>", ",", "\<\"15\"\>", ",", "\<\"20\"\>"}], 
             "}"}]}]}], "]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{74., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{67., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 285, 19054491327423057745, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{73., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 285, 19054491327423057745, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 285, 19054491327423057745, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{100., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[285]]], "Output",
 CellChangeTimes->{{3.6727431522624817`*^9, 3.672743207080489*^9}, 
   3.6727432539092693`*^9, {3.672743359747994*^9, 3.6727433833485317`*^9}, 
   3.672743517073566*^9, {3.6727436603361187`*^9, 3.672743669081156*^9}, 
   3.6727437509859343`*^9, 3.673092400699881*^9, 3.67309487884697*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotSRTFromTo", "[", 
  RowBox[{"10", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.672743604669063*^9, 3.672743640086053*^9}, {
  3.673095104220311*^9, 3.673095116774014*^9}},
 NumberMarks->False],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
nbGK/JdB+bRfUU4c+S9DvUO997zi+blOaM+Ss91LeH6eLsPIjQnhESXkvwyN
lSaelyvJfxnKfH6/Tm8k2n+WDLVn9l1dm/72bBkerux69o6nqHNl8G0VOaQm
18unZSiJej1xPf3teYI9lk436c31dr4MO/rljrHievyyDP/5PP9gzvX6dRmc
pkckm3E9XyTDxekBj424Py+WoesDrd8N7gdKZNhwb+jBRdyfl8lgqbuzrID7
82cyzFraY8Fl7s/LZXBbNHNdAHleIcPTjgsvbiTPPwj2tOyn2pI8/yKMry+l
OQ3I8+8yHI8Oa9CR82eVDC4zqsv/8dxIjjkjbMO8OP8ayzFJdv/VYc7PdeQ4
MCMrYA/nbxM5Gm+8kNeqH/kvx6m8A52aDCH/5Zg+38YujDy3lMM0++LaMYxv
s5FD3rxr4g7y3F6Ox6VHGnXleXAbOQJ+9W/Ulf51Bznyls2030b/uqMcsSHG
7n15Hu4sx+a8mNJ+3N+6yLHlSVz5Du5/XeXInVPr9D//uJsc1U2t+1lyPw05
vk9MPTCUPB4kh3R+vfI88tpTDuX0vq03xZL/cpTsvGMbQz1ajj358+uW8vve
crxbPGb7Uv7eJDle7hhyfizv5yPH7tMP+4fxeXzliC/bXfXxn/9fjvvX+887
wvcJlCPz2+9Zl/+d/8sxfuyuLr143h4sx1qjW6t+sr1C5NAeazDJiucVoXLM
s67sK+f5epgch37U+bme/vdwOWKOjzxzawz5L0f7Jg8skzzJfznqLGlXctWd
/JdjcI3BvSJdyH85PLr+0eQyvkIiR99Jl8vWMv5CKse1d/mVN8zJfzmWJm3t
dILn6So5fFd+qfHvPF0nx6PHQ+Z9uS/qdDm8XMwDj54WdYbwvJblfV7pyX85
3lczrJBtJf/lGNmwS/WSheS/HJcm96l5aiz5L4fT646vvXuS/3I4B7wava85
+S9H4oKTtcsYH5cvx68ouxo/GO96WY63Hf3GmzAe9rowHgZPbudo4PgX7rdk
3+55W8h/OULrNbG+H0T+y1G4rvme6NHkvxyal/vXSVzIfznCW3jrazQn/wX7
8jpQs+I343/lONP0hc+Mp6L+IMeL7b2dFhWI+oscrvMnZTvuJ//lqKls+Co9
mfyXo2vtraO/rCP/FQhKsLVoMZf8V+CkIqvMdRz5r0CVRVnJaHfyX4EO+Ydl
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
A88nrLT4UC9gwkmeX9ho8ftzje3WP8h/Lf74mhQd5PmHvRbDt85Qh/J8pJUW
17a9OO3L85M2WpxfmD9jOs9X2mnx8mazZv48f3HQoprnh6+zeD7TUYtpB99u
HcXzG0ctzgbWfduM5ztOWgRXFJ/bm0X+a7FGOnhUNZ4PddNi38IrC6vz/MhF
C9s5s9NV1UV77yk83wvbLoW2onbVYsfMPa+Ce4u6jxaP5G9Dw8eT/1pMCk1z
L2e9V3ct4ht4+ifFkP9aHM3e8SR0D/mvRfNuZlvW5JP/WnQec6RW/HPyX7CP
CRc+aauL84GnFg/Stt5RtRD1UC0aBBzutZznd8O1uJy5WNuI53sjtUiPs8rx
5fnfaC2OF+/oO4bng2OF/n1tanGD54feWuy+uGbuVZ4vTtBi6Jo6u3o9If+1
KHr6RfLrF/mvxde8/3ZF1hPnTx8tKgIr+qaz/sd0LfwXHo/2pb/UV4t3b+6+
0Xcm/7WI2nPgazD9rf5aaIPsUnLojw3QYoOljW0Y/bWBWjgO7NxuH/2584T2
kg86PoL+3iAtGo91HTqW+8eFWtjUzt5zlP7iYC0y659pt5L7zyVaLFbELY3n
/jREi/dXbE7+pT96uWAv24zST3B/G6qF7pHx0ALuf1cJn6/v0MOePA3TwjzG
a+lp8nytFvW/Tt2cTh6HC+Or15QFd8nrCC0Sim6lDCfPI7X42aTHj3/+901C
+3e+9K7uP/5r8Xxf+Lhx//b/WrxZszDkOe8frcXKW/aNzpLnMVr8SDg8+Q15
HivMD4dOV8zieUK8Fv29/hY58bxBokU3ffGmUTyPSNIicktGaQF5LhX6/84n
Sw3PM2RapHR1uFfC8w6FYE/GO2zW8TwkVbCP/DN9Y3heohKeR2n7oiHjIzRa
9G1a264e4yd0Wtz6a9JjA+MrDML1Mz5cXM/4i3Qt2h6T5JgwPmO3MB91Kuve
ifEbGVpYz9yR8ozxHZmC/StqWa6v4Pm1Fq+srfO2Mx/9oDD+uq7y+sv4kSwt
Auv7N33BerBHhPkg4nXFWNZHzhb6L+vg/QmzyX9hfA445VyD8ai5WhTc91g9
l/WeTgrj/cW2lXLWgzottK8ss8meT+L4PqvFsHpLfHbf5nm4MP6OPAvZky3q
C1rs8nyafFpO/gt6v3/tKtaXuSTMR36bawYzHveyFo8PeRU6MV73qtAe0eVr
hzKe97oW3R/f7HDblPzXovqNTplln8X5r0iLGuqrx9feE/Udwf4ybuedPsXz
dS3mmaV+PGog/7VwaOllsSyG/Ndi5rECeZ0V5L8W9mfWbIpg/FOZFs4e870/
MT7qifB8h7v/CGD81DNBh9+88o7xVS+02NxwVEQy46/KBf7tX9lwIeOzXgvz
Yf8n6WsZv1WhRb9xTvuKykT9TouuU/9oVjH+64MwPnpvtVzF+LBPwvu97JDx
gOfNXwQe1Pj0zcDz6Eot0t7u2PqEPP+uhVe/6EcJ5PlPLfakN518ijyvEuz1
e3DfQPL8jzB/9WuyO5b8NtLh11S5oTd1dR2a2Po1mkWeG+vgYfixpz55XkuH
s+Z9bLuS53V0WLX8XeU1xufV02FLQGXuU8bvmejw4/jBtwGMBzDVod2dmPrj
GP9npkPfT8t3qhgfaK6Dl1O1oCGs/2qhQ3YTyw7u5eS/Du96vHq0ivGHljr8
bP/u6ifGJ1rp8HLE7TUyxi/a6DB5Z8eC2YxvtNPh42Pp2yGMf7TXQeuwM747
4yNb6fDgwZMiK8ZPttFBnjB/1Pv15L8Ob7WlbTQp5L8OllpV7TaMz+yow7jN
ewfMLiT/dbhY/e7x8c/Jfx3urz9q/Pwv+a9D6LFJE6szPrSb0L6jT6gVPUXt
okN76znbNGPJfx1WTjcKq76I/NfBUNdDs3sb+a/DuexRv6JYv91NB+vjY6ds
Yz1ndx0emn0NTntC/utQsty9+OBf8l+H9ZU9rQ7ZiPPDIKH9G/XM3c74Wg8d
8rY+8XJm/K2n0J8ri32jGJ87VIdpbd7nbmD87nCdYM81B5vtJv91CHo4yNLm
PPkv2FfRIXki672OFa5/VDdq/g/yX+iPsQWrPRiPNEHof88aOSGMV5qkQ8xY
qwhXxjNN0eH0lj02Wxnv5KPD1ik/bP0YDzVdh9rOjYKOMV7KV4f4b8mDtjCe
yk+HDUu7DixkvJW/8PmRFTNXMh4rQGgv/9U1YxivFSj0T+0Lv2qQ5/N0OONb
su4O472CdGgb7e5ejTxfqINtZfmEcPI8WIeBxyfMGE2eL9GhZusG/gv/1XMR
7KdT1qu7PL9erkP1ZuffbiXPQ3V45ln0YiN5vkqHNpXheRfJ5zAdVmjN3o8i
v9cK9jH+hIcddbgODV+catX9H/+F5/vddPQO8jxSh+j1FmYujI/bpMNa3YGm
rRnvHqXDAJ/MqOmsf7NVh0ZvV/0oJ8+jdZh760PgefI8RoeWo4vx7V/9eB2c
b7qNjWA8YbwOJjE7bs5j/oBEh+A7skmHGY+YJMw3fh73Aph/INXhea6TLpL5
CTIdKlY09rVgPqJCB0mjFrVtmK+YqkNqd9OnauY/qHQw7u66JYP5ERqh/7w2
3Bn4Lx9dh7Ktg97MZ76kQRgPj5q078J8ynQdXEs8vByYb7lbh/GJ7+cNZj5m
hg4OR+KOn2e+ZqYOy5tJVMeYz7lfh4mN6hZ1Zf2Ggzrofs336c/6Dlk6FAcF
RX5mvugRHYyyz9ycwfoQ2cJ49qpZPYn5pjk6/Hc04vtO5qPmCvb0pdrpncxX
PSn8XumiNTuZz3pamD8i5gQeY77rWR2aL9t49v2/fFgdNNdDr/owX/aCDl0r
L14wZ32ZfB1Uq3sVtWa+7SUdrmQW1NAwH/eyDudrDndLY77uVR0Kn83t3pn5
vNd16Pign9805vve1MF3of8P/KunLcwfX7YWlbNe3B0d7mzdvGA268UV61Ap
qbp6gflJ93V41UG9yYb14kp0+HC4Z/Iy5jc9FMZb7Oh5Zcx/KtPhj3W1s/OY
H/VEsK+JibtbMn/qmQ45XzcENWJ+1QsdNm08unYw86/KdXhSx29lfhH5L8y3
iKyryyf/hf4YOP15GePB3+kw7+jrM5sYL/5Bh0WpKV4KxpN/0kE2doFFe+aP
fRHmlysydSfGo1cKfJlROHYvef5dh0utGs/NJL9/Cry9k17DmbpKh/evZ9p3
I8//6OA26L3yEOPljfS48yy//0Hmx1XXI838wKGO5LmxHuc7HZJakue19Fg/
bcHm5cy/q6OH9eMIa3fm59XTo37lz99zmL9noseVC1M+vGF+n6keG0cOLj7N
/D8zPZq0CygsYX6guXB9u1DrHswftNDj3bxefieZX9hUj/bVzLYHMf/QUo9O
X+aWd2N+opUe+b9COxozf9FGj7uvl6y5GUj+6+GS7LRlB/Mf7fWQhtiEOTI/
spUeRZ6GxrJ95L8eIzyNdPn55L8eXq7hLdKfkP96ZLrF2jowP7OjHr766Y97
WYr276hHY9cA3wvdRe2kR/9LXz3PjhK1sx7lE2/VsWJ+aDc9/D/bFB2PIv/1
mNktKiNRT/7rcalBk7mJZ8l/PYxWjjuZzvzUPnqc6DJgyAnmr7rpUdj+Xsxp
5re669FvxUgrFfNfocd/7j+Xeo0T9UA9Sgd/6rl7Efmvx8jc/tb7t5H/ejSc
klrdayf5r0fvMwdrzjpL/uux54lsfQXrYQ/XY3/e0bZFleS/Hh0bXwo3Zr7Q
aD1qv5jh1Y/5RGMFe8t2n2vCfCNvPWqejG85j/lIE/QYeGDzn5HMV5qkx3FD
aOkh5jNN0ePolbxPccx38tHj2eKB154wH2q6HrN2DZytYr1XXz0CB9k2OM96
7X5Cez7ClmGMz/bXY17zs3W7kOcBenT4NrfLfMZ3B+pRUjzAtIrx3/MEe1bp
ujxkfHiQHk43ihJMyfOFenxe0/LQVvI8WI+LFcq1o8nzJXq8bLfCdzp5HqLH
nB5v+h4in5frsbvX26CR5HeoHuo/qy92oV6lRxfnA0kT//FfGA/3YuUXyPO1
ephGyOuvJc/D9bjg6rDjX/5ahB6VZVH9r5DnkXp8Kv+hm8v8tU16dM6YkTWR
+WtRehwbe+OyjPnoW/UIr/cpq+di8l+PpgstpV2Yjx6jx/2oITW2Mh89Vo/0
Z5WPhzIfPV6PLYrMVSuYjy7Ro+X+lfObMB89SY+IB10NHZmPLhXa60V60AnW
85fpcWDx4eFF/PstCj2al7S3WW5L/uvRoEXGl12s764S7KmDusuKmuS/Hqe3
Xj536SPj0fW4Hjti33fWlzEI8+Oo0fZRJxifrseNF92XbmF9md3C87cpndxg
M/mvxyj34FttWF8mUxjvDW3aPGZ9mf16OKrfXR7H+jIH9TgzdfeGGNaXydIj
dbSyo/a7OJ6P6DH/75x87QPGtwvPY5axTnNS1Dl6LJ2VsumAmvzX4/IWD7un
keS/MJ8cKtjiFUj+C9+fXKvmt2Hkv9BfV2yP/2Z9yzw9mh1bmbvIgvzXI/57
wJfp/+pjCvbxq6tdKettXdJD2/fSsV//6mXrMW5g6d9C1uu6Ksx/NZffns56
XteF971pdyqP9b5u6nGvc9ytBqwHVqSH8nLNTC/WC7ujRx37br6bWS+uWA/F
LnP/26xPcl+P1kUp2wewXlyJMH+dC6wqZn2Th3r0bXe4QTrrn5TpsX3R1pE5
rI/yRODP5q0LrVg/5ZnAB3f/7jeZj/1CmD8NbRa8Zr52uR5WvWVv5rE+y2th
PLZ/FTKF+d4Vwvt6RZ44SZ6/E+xziXamgjz/oMcXtyllleT5Jz1MZs2QXie/
v+gxbbj0QkfqSj0eTw3YVJM8/67HhKqsWzPI85/CeJhyPKYXeV4ljNf6k9Zv
YX2ZP3rU218+ewzz5Y0MSL+9/P0W1sepbkD9gfVvObJ+jrEB86r9uNGN9XVq
GWBs+yIvgfV36hjwfb3vTg/W56lnwIsJedoBrN9jYsC7twNarGJ9H1MDdkfd
PP+M9eLMDCip/ilxGesDmRswoezrmxasH2RhwIf08ug7rP/a1ICfg4r2b2P9
IUsDzsoXmHRlfSIrA4bltrh/lPVfbYTf37fqiRnrG9kZ8Ht4o0hH1j+yN2BM
YGnOz0fkvwHb1vduP5/1k9oYUHkx2WIB6yu1M6BRiEn4e2dROxhwVX3T7vFw
UXc0IGtUhb8z6zc5GrC2WdW2wo3kvwG7SpbLVKz/5Cy07+wR85WsD9XNAEdj
uyP7WD/KxYDzR2pZnmd9qZ4G3O9ja1vIv6/mKvxeqXzovu6i7mNAq+vHO8wY
LWo3A6Z96zsuP4j8N6Bh602ri6PIfwOKNvitW6Mj/w1Qn2uzWH+K/DdghL+z
wZ31ODwMMI85l9eL9To8Dbhx5k35KdbzGGqAzYzwFjX491iGG9DzpXnYv7+f
NdKAvwOXug7pSP4LOrWw2LUH+S+015K7Xff0J/8F+yw7szCZ9cAnGHAoW9v0
G+uFTzIg4WZ8ozzmP08xoP3jPnu/Mz/aR/j8yQ/VDuZPTzeg2qI1jSKZX+1r
wKihpQk3mH/tZ4CnqodzCHnub0CXPedmBZLnAcL1gVta7flXn92AZl9WF/cm
z+cZkDfQc545eR4k6D77e3Qnzxca8Ot8dCM5+RxsQD3tyhFe5PcSAwoedTvQ
jzrEgJy+GatD//FfGH8BL2b+JM9DDfB7sWl7Hnm+yoBAH1f5v/pxYQY0Sbkl
deXzrjWgT/XxNV7++/svBuyzTst7QZ5HGODds17Xvv/qwQr2df2scTl5vkno
r/RK34/keZQBztNu5E9le2814HChl50j+yPagEtfz6bOYX/FGBBsFfGoMfsz
VrC/Dn8KerK/4w046GgivcP6MhID3q99f+0H68skGdD67Sjs/FdfxgCn4XZV
z1lfRmbA5J/zJvyrL6MwYFm9oNy5tNdUAyI/LMlKpz2rDJD1W7RlCOvLaIT5
YJAkZgLry+gEe+8csuDFFvJfmM9q5djWYX2ZdAOqYj6UXB5D/gv9u2BSO48e
5L/Q/k1P7N5oSf4bsMFomKfylzie9xsQFz25etpDUR80oF9Xux+KM6LOMsCs
b5+Zu3Tkv/B7j6xX39lM/hvgMM1ua8/55L8Bf+5PK3wwkvwX5q90l6DibuS/
AW/9RoW7NyP/DYg/P/ZbiypxvjtrwPbedeJjHos6zwC30rp35RdFfcGAl0Hv
a03OJP8NePbqW8O7rBd3SZgPevVa324t+W/AelPvNRPnkP/CfHatNGMl68Vd
N8Auc5yzgvP9TWH8mn+Mu0IeFBlQu/uMo9asF3fHgFV2824lkCfFwv2PP544
kLy5b4CV++WX3cijEmH+cbIZGkxePTRgdmGDacbkWZkBi4751fvOempPDBj6
WOc2jjx8ZsC1tYrbNuTlC2F+vvb/ejrfWKriMI4jZJZcDZnJtdudEYv5E72o
nuwy648aMlTXIpdS2ag1LBebyppabygr0ew8a3XVnV22kLtm4tYddhSzuSVS
SpKEYXRe9L0vf9s5Ozvnd/Z8vt/z4nN8hXTw9Js0X1czctzA2+/S8/MZNajA
4xlp/jj+cFkCv2cFEjNCTIFYzwlkjGzcOYb1vECbNMXhMpy/INAOtWnRaO3/
0jxWctIM8sSyQJoH4/LbyBsrAlV1ugU2Io+sSe9vyrt9ctzfukAZppEoW/ji
bJgaYgM2H0DesWNynFd39iMP2TP5vWm5/wR5yZFpQFx0f4085cQ00lf10wV5
y5lpeFgeXo48toWp2qxIdEVe28pUVlrn+xS+OBlT7cx1Sxz8wNuY6rsfJg3B
F+fOlPo3q1sFv7AnU7CNzr4K/mEvpjMxN6/dhZ/Ym8ndRReRAH+xD1OlsUJs
ht/Yl+nRwLDuMfzHfkx9Jwp7veB/VTAdDbn3cQPft5RM0WL9xTj4X/2ZdNpe
/Sj8rwFM2pWcNqvPfRfTVEvJ6Sb4X4OZbukH1Qb4X3cztWp709/C/xrKZHQ1
WET4X8OYhtLW8ztC/68jmMILJ2sK8H/HPUw3opemJ86B/9L+tAZ5r1eC/0zt
dyo2mhvBfyZNZoAwCR/mfqYXhxdOVqPPEJN9edCrWvSdGGl/9+qzitCHVEyU
+Hy2B30pjilNyM1/hj4Vz2QxZXspMJ8PMcVs/5zth/l9RHo/upyVDehrCUw9
Y18v16HPHWfybJ147wQ+JDI5XJlSfkEfTGYyh602BYIvKUwFi0V2g+BPKpNH
uz7lA/iUzqSQyYIiwa9TTL/z+kqmwTc100ay7ctf1v+vMHUtF5tV4GMm06co
0WMK/DwrXb/0WN4g+KphEsdj5Q7geS6TU4f/mhZ8Ps/U1h8WexD8viDtz5zF
EI/1Jen+rv4pq5GO/wfFNATR
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {1036.8125, 3.5474073140905}, 
     PlotRange -> {{1067., 2999.}, {3.57576330144, 4.14288304843}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1036.8125, 3.5474073140905}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{1067., 2999.}, {3.57576330144, 4.14288304843}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"4\"", "\"5\"", "\"7\"", "\"10\"", "\"15\"", "\"20\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.672743261835088*^9, {3.672743611908935*^9, 3.6727436410607452`*^9}, 
   3.6727437533176622`*^9, 3.67309240114188*^9, 3.6730948794466753`*^9, {
   3.673095114250951*^9, 3.673095117232378*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"plotCumulantsFrequencyFromToClip", "[", 
  RowBox[{"2", ",", "8", ",", "3"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"plotSRTFrequencyFromToClip", "[", 
  RowBox[{"2", ",", "8", ",", "3"}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQPd9m0+0nMa8db0TG3wHRhxLO6D8F0s8f+xuA6NCN
tj4g+t6Pn34gWuXPqyAQ/eJGZTCI1qh5EwmiV33kiQLR249MSQPRDV/788Hq
NXfXgugbHq11IFpNLrUdRO+zs+sG0bUbJk8F0ftXnZsJokN+Ny0G0RZP1TeC
aJ6zc66AzXm06BqIXmB47TGI1tJpeQaizyqe+AqiFQIFv4PoN74sf0D0uvlO
TM+ANNfLBAEQ3fE5RhxEP3w3p8A49rWjX2doGYhW/9akYAKk4259BdNqobWa
IHrtLwUtEK0Qbe0Koje1tLmB6IRP87xA9IOnC8H0vGPWFSC6I5SrEkTnSRxs
A9ENl292gOgtx//1gWifXKOpIBoAdpPGdg==
  "]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Drop", "::", "drop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot drop positions \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\[NoBreak] through \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1000\\\"}]\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Drop/drop\\\", \
ButtonNote -> \\\"Drop::drop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673092401467306*^9, 3.673094879714365*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\[NoBreak] \
of \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\)\[NoBreak] does not \
exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673092401467306*^9, 3.673094879749215*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1000\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\)\[NoBreak] is longer than depth \
of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673092401467306*^9, 3.673094879881877*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Drop", "::", "seqs"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Sequence specification (+n, -n, {+n}, {-n}, {m, n}, or {m, \
n, s}) expected at position \[NoBreak]\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\
\[NoBreak] in \[NoBreak]\\!\\(\\*RowBox[{\\\"Drop\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"{\\\", \\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", \
\\\"2\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"1000\\\", \
\\\"\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]}], \
\\\"]\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/seqs\\\", ButtonNote -> \
\\\"Drop::seqs\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673092401467306*^9, 3.673094879882711*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Fourier", "::", "fftl"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\(\\*RowBox[{\\\"Drop\\\", \
\\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"{\\\", \\\"}\\\"}], \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\
\", RowBox[{\\\"1000\\\", \\\"\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\
\[RightDoubleBracket]\\\"}]}], \\\"]\\\"}]\\)\[NoBreak] is not a non-empty \
list or rectangular array of numeric quantities. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Fourier/fftl\\\", ButtonNote -> \
\\\"Fourier::fftl\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673092401467306*^9, 3.673094879883759*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Take", "::", "take"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot take positions \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\[NoBreak] through \
\[NoBreak]\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Abs\\\", \\\"[\\\", RowBox[{\\\"Fourier\\\", \
\\\"[\\\", RowBox[{\\\"Drop\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"{\\\", \\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", \
\\\"2\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"1000\\\", \
\\\"\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]}], \
\\\"]\\\"}], \\\"]\\\"}], \\\"]\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Take/take\\\", ButtonNote -> \
\\\"Take::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673092401467306*^9, 3.673094880015256*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListLinePlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"87.64988912031906`\\\", \\\",\\\", \
\\\"0.1271661671379601`\\\", \\\",\\\", \\\"0.06979635826205641`\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"166.78792247019126`\\\", \\\
\",\\\", \\\"0.030785422759435202`\\\", \\\",\\\", \
\\\"0.033050851982609535`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"126.77879886651066`\\\", \\\",\\\", \\\"0.0856377582677493`\\\", \
\\\",\\\", \\\"0.0871543708892888`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"128.55228173593852`\\\", \\\",\\\", \
\\\"0.017964555027323935`\\\", \\\",\\\", \\\"0.02106981619306883`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"Take\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Abs\\\", \\\"[\\\", RowBox[{\\\"Fourier\\\", \\\"[\\\", \
RowBox[{\\\"Drop\\\", \\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"{\\\", \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"1000\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]}], \\\"]\
\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"3\\\"}], \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"148.95511950134764`\\\", \\\",\\\", \
\\\"0.03311333090908165`\\\", \\\",\\\", \\\"0.04724231120920593`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"151.16438410093326`\\\", \\\",\\\", \\\"0.32041063446045465`\\\", \
\\\",\\\", \\\"0.2624886770524508`\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]\\)\
\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListLinePlot\\\", ButtonNote -> \
\\\"ListLinePlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673092401467306*^9, 3.673094880157056*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListLinePlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"87.64988912031906`\\\", \\\",\\\", \
\\\"0.1271661671379601`\\\", \\\",\\\", \\\"0.06979635826205641`\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"166.78792247019126`\\\", \\\
\",\\\", \\\"0.030785422759435202`\\\", \\\",\\\", \
\\\"0.033050851982609535`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"126.77879886651066`\\\", \\\",\\\", \\\"0.0856377582677493`\\\", \
\\\",\\\", \\\"0.0871543708892888`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"128.55228173593852`\\\", \\\",\\\", \
\\\"0.017964555027323935`\\\", \\\",\\\", \\\"0.02106981619306883`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"Take\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Abs\\\", \\\"[\\\", RowBox[{\\\"Fourier\\\", \\\"[\\\", \
RowBox[{\\\"Drop\\\", \\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"{\\\", \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"1000\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]}], \\\"]\
\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"3\\\"}], \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"148.95511950134764`\\\", \\\",\\\", \
\\\"0.03311333090908165`\\\", \\\",\\\", \\\"0.04724231120920593`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"151.16438410093326`\\\", \\\",\\\", \\\"0.32041063446045465`\\\", \
\\\",\\\", \\\"0.2624886770524508`\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]\\)\
\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListLinePlot\\\", ButtonNote -> \
\\\"ListLinePlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673092401467306*^9, 3.673094880307102*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListLinePlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"87.64988912031906`\\\", \\\",\\\", \
\\\"0.1271661671379601`\\\", \\\",\\\", \\\"0.06979635826205641`\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"166.78792247019126`\\\", \\\
\",\\\", \\\"0.030785422759435202`\\\", \\\",\\\", \
\\\"0.033050851982609535`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"126.77879886651066`\\\", \\\",\\\", \\\"0.0856377582677493`\\\", \
\\\",\\\", \\\"0.0871543708892888`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"128.55228173593852`\\\", \\\",\\\", \
\\\"0.017964555027323935`\\\", \\\",\\\", \\\"0.02106981619306883`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"Take\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Abs\\\", \\\"[\\\", RowBox[{\\\"Fourier\\\", \\\"[\\\", \
RowBox[{\\\"Drop\\\", \\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"{\\\", \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"1000\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]}], \\\"]\
\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"3\\\"}], \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"148.95511950134764`\\\", \\\",\\\", \
\\\"0.03311333090908165`\\\", \\\",\\\", \\\"0.04724231120920593`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"151.16438410093326`\\\", \\\",\\\", \\\"0.32041063446045465`\\\", \
\\\",\\\", \\\"0.2624886770524508`\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]\\)\
\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListLinePlot\\\", ButtonNote -> \
\\\"ListLinePlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673092401467306*^9, 3.673094881158132*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ListLinePlot\\\", \\\"::\\\", \\\"lpn\
\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673092401467306*^9, 3.673094881224751*^9}],

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "87.64988912031906`", ",", "0.1271661671379601`", ",", 
       "0.06979635826205641`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "166.78792247019126`", ",", "0.030785422759435202`", ",", 
       "0.033050851982609535`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "126.77879886651066`", ",", "0.0856377582677493`", ",", 
       "0.0871543708892888`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "128.55228173593852`", ",", "0.017964555027323935`", ",", 
       "0.02106981619306883`"}], "}"}], ",", 
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"Fourier", "[", 
         RowBox[{"Drop", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", "}"}], "\[LeftDoubleBracket]", "2", 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "1000", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "]"}], "]"}], "]"}], ",", "3"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "148.95511950134764`", ",", "0.03311333090908165`", ",", 
       "0.04724231120920593`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "151.16438410093326`", ",", "0.32041063446045465`", ",", 
       "0.2624886770524508`"}], "}"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"4\"\>", ",", "\<\"5\"\>", ",", "\<\"7\"\>", 
      ",", "\<\"10\"\>", ",", "\<\"15\"\>", ",", "\<\"20\"\>"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.672583362636249*^9, 3.672583375088365*^9}, {
   3.672583459260908*^9, 3.6725835622834806`*^9}, {3.672583848344823*^9, 
   3.672583861670388*^9}, {3.67258395542725*^9, 3.672583988975717*^9}, {
   3.672584325223703*^9, 3.672584380398028*^9}, {3.672742782672997*^9, 
   3.672742835246909*^9}, 3.6727442014728117`*^9, {3.672744258003236*^9, 
   3.6727442738587923`*^9}, {3.67274447399254*^9, 3.672744501852025*^9}, 
   3.672744534036628*^9, {3.672744580684453*^9, 3.672744587264413*^9}, 
   3.67274490533171*^9, {3.6727449937144012`*^9, 3.672745031476213*^9}, {
   3.672745085527198*^9, 3.672745130452311*^9}, 3.673092401843918*^9, 
   3.673094881226088*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 70.67531219163409}, {2., 0.0016612014850579074`}, {3., 
         0.001224010340757297}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 141.8458128693737}, {2., 0.07046804431436002}, {3., 
         0.07127394018802054}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 131.17924153757497`}, {2., 0.22957074323141197`}, {3., 
         0.23199193554138633`}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 154.5931433252963}, {2., 0.2140861398173562}, {3., 
         0.21710249464667017`}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 184.68932681986027`}, {2., 0.1352435870410017}, {3., 
         0.13412432806476}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 191.83658207787664`}, {2., 0.046746991732823505`}, {3., 
         0.047177193540969956`}}]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 167.37889167719683`}, {2., 0.1446139789042399}, {3., 
         0.16278130203112165`}}]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0.96875, 0}, 
     PlotRange -> {{1., 3.}, {0, 191.83658207787664`}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.96875, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{1., 3.}, {0, 191.83658207787664`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"4\"", "\"5\"", "\"7\"", "\"10\"", "\"15\"", "\"20\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.672583362636249*^9, 3.672583375088365*^9}, {
   3.672583459260908*^9, 3.6725835622834806`*^9}, {3.672583848344823*^9, 
   3.672583861670388*^9}, {3.67258395542725*^9, 3.672583988975717*^9}, {
   3.672584325223703*^9, 3.672584380398028*^9}, {3.672742782672997*^9, 
   3.672742835246909*^9}, 3.6727442014728117`*^9, {3.672744258003236*^9, 
   3.6727442738587923`*^9}, {3.67274447399254*^9, 3.672744501852025*^9}, 
   3.672744534036628*^9, {3.672744580684453*^9, 3.672744587264413*^9}, 
   3.67274490533171*^9, {3.6727449937144012`*^9, 3.672745031476213*^9}, {
   3.672745085527198*^9, 3.672745130452311*^9}, 3.673092401843918*^9, 
   3.673094881574991*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"points", " ", "=", " ", 
    RowBox[{"getLiftData", "[", 
     RowBox[{"\"\<cumulant\>\"", ",", " ", "10"}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"maxima", "=", 
  RowBox[{"1", "+", 
   RowBox[{"Position", "[", 
    RowBox[{
     RowBox[{"Differences", "[", 
      RowBox[{"Sign", "[", 
       RowBox[{"Differences", "[", 
        RowBox[{"points", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"-", "2"}]}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"minima", "=", 
   RowBox[{"1", "+", 
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{"Differences", "[", 
       RowBox[{"Sign", "[", 
        RowBox[{"Differences", "[", 
         RowBox[{"points", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
      "2"}], "]"}]}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"peaks", "=", 
  RowBox[{"Extract", "[", 
   RowBox[{"points", ",", "maxima"}], "]"}]}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"points", ",", 
   RowBox[{"Prolog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", "Red", ",", 
      RowBox[{"Point", "[", 
       RowBox[{"Extract", "[", 
        RowBox[{"points", ",", "maxima"}], "]"}], "]"}], ",", "Green", ",", 
      RowBox[{"Point", "[", 
       RowBox[{"Extract", "[", 
        RowBox[{"points", ",", "minima"}], "]"}], "]"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.673092660075562*^9, 3.6730926737250767`*^9}, {
  3.6730946164502153`*^9, 3.673094635803306*^9}, {3.673094822644943*^9, 
  3.673094858559992*^9}, {3.673094889032515*^9, 3.673094905810412*^9}, {
  3.67309503616821*^9, 3.6730950417911253`*^9}, {3.6730952572231197`*^9, 
  3.6730952634780693`*^9}, {3.6730953030525827`*^9, 3.6730953057394648`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Drop", "::", "drop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot drop positions \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\[NoBreak] through \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1000\\\"}]\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Drop/drop\\\", \
ButtonNote -> \\\"Drop::drop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673095306132786*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\[NoBreak] \
of \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\)\[NoBreak] does not \
exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673095306160742*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Differences", "::", "listrp"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"List or SparseArray or StructuredArray expected at \
position \[NoBreak]\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\[NoBreak] in \[NoBreak]\\!\
\\(\\*RowBox[{\\\"Differences\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Drop\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", \\\"1000\\\"}], \
\\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\
\"2\\\"}], \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/Differences\\\", ButtonNote -> \
\\\"Differences::listrp\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.67309530620222*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Differences", "::", "listrp"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"List or SparseArray or StructuredArray expected at \
position \[NoBreak]\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\[NoBreak] in \[NoBreak]\\!\
\\(\\*RowBox[{\\\"Differences\\\", \\\"[\\\", RowBox[{\\\"Sign\\\", \
\\\"[\\\", RowBox[{\\\"Differences\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Drop\\\
\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", \
\\\"1000\\\"}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", \\\"2\\\"}], \\\"\[RightDoubleBracket]\\\"}], \
\\\"]\\\"}], \\\"]\\\"}], \\\"]\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Differences\\\", ButtonNote -> \
\\\"Differences::listrp\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673095306244379*^9}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.67309267521004*^9, {3.673094617932722*^9, 3.673094636113677*^9}, {
   3.6730948538970213`*^9, 3.67309489867176*^9}, 3.673095044523508*^9, {
   3.673095259568239*^9, 3.6730952746239634`*^9}, 3.673095306245722*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\[NoBreak] \
of \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\)\[NoBreak] does not \
exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6730953062759943`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Differences", "::", "listrp"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"List or SparseArray or StructuredArray expected at \
position \[NoBreak]\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\[NoBreak] in \[NoBreak]\\!\
\\(\\*RowBox[{\\\"Differences\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Drop\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", \\\"1000\\\"}], \
\\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\
\"2\\\"}], \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/Differences\\\", ButtonNote -> \
\\\"Differences::listrp\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673095306317521*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Differences", "::", "listrp"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"List or SparseArray or StructuredArray expected at \
position \[NoBreak]\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\[NoBreak] in \[NoBreak]\\!\
\\(\\*RowBox[{\\\"Differences\\\", \\\"[\\\", RowBox[{\\\"Sign\\\", \
\\\"[\\\", RowBox[{\\\"Differences\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Drop\\\
\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", \
\\\"1000\\\"}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", \\\"2\\\"}], \\\"\[RightDoubleBracket]\\\"}], \
\\\"]\\\"}], \\\"]\\\"}], \\\"]\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Differences\\\", ButtonNote -> \
\\\"Differences::listrp\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.67309530635912*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"2", ",", "2", ",", "2", ",", "4"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.67309267521004*^9, {3.673094617932722*^9, 3.673094636113677*^9}, {
   3.6730948538970213`*^9, 3.67309489867176*^9}, 3.673095044523508*^9, {
   3.673095259568239*^9, 3.6730952746239634`*^9}, 3.673095306360482*^9}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.67309267521004*^9, {3.673094617932722*^9, 3.673094636113677*^9}, {
   3.6730948538970213`*^9, 3.67309489867176*^9}, 3.673095044523508*^9, {
   3.673095259568239*^9, 3.6730952746239634`*^9}, 3.673095306361212*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Extract", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"2\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
\\\"4\\\"}], \\\"}\\\"}]\\)\[NoBreak] is longer than depth of object. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partd\\\", \
ButtonNote -> \\\"Extract::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673095306391255*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListLinePlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"Drop\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", \\\"1000\\\"}], \
\\\"]\\\"}]\\)\[NoBreak] is not a list of numbers or pairs of numbers. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListLinePlot\\\", ButtonNote -> \
\\\"ListLinePlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673095306450102*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListLinePlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"Drop\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", \\\"1000\\\"}], \
\\\"]\\\"}]\\)\[NoBreak] is not a list of numbers or pairs of numbers. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListLinePlot\\\", ButtonNote -> \
\\\"ListLinePlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673095306507537*^9}],

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "1000"}], "]"}], ",", 
   RowBox[{"Prolog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", "}"}], "]"}], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"Extract", "[", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{
           RowBox[{"{", "}"}], ",", "1000"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "2", ",", "4"}], "}"}], "}"}]}], "]"}],
        "]"}]}], "}"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.67309267521004*^9, {3.673094617932722*^9, 3.673094636113677*^9}, {
   3.6730948538970213`*^9, 3.67309489867176*^9}, 3.673095044523508*^9, {
   3.673095259568239*^9, 3.6730952746239634`*^9}, 3.673095306513232*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"getWavelengthLift", "[", "]"}]], "Input",
 CellChangeTimes->{{3.673095610251685*^9, 3.6730956213098383`*^9}}]
},
WindowSize->{1501, 911},
WindowMargins->{{861, Automatic}, {Automatic, 29}},
FrontEndVersion->"10.3 for Linux x86 (64-bit) (October 9, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 460, 10, 32, "Input"],
Cell[1043, 34, 243, 3, 32, "Output"]
}, Open  ]],
Cell[1301, 40, 707, 18, 55, "Input"],
Cell[2011, 60, 357, 8, 32, "Input"],
Cell[2371, 70, 14779, 385, 847, "Input"],
Cell[CellGroupData[{
Cell[17175, 459, 289, 5, 55, "Input"],
Cell[17467, 466, 219, 4, 32, "Output"],
Cell[17689, 472, 170, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17896, 479, 309, 5, 32, "Input"],
Cell[18208, 486, 604, 12, 23, "Message"],
Cell[18815, 500, 585, 11, 23, "Message"],
Cell[19403, 513, 586, 11, 23, "Message"],
Cell[19992, 526, 8276, 212, 89, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28305, 743, 227, 5, 32, "Input"],
Cell[28535, 750, 33386, 583, 327, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61958, 1338, 679, 13, 55, "Input"],
Cell[62640, 1353, 602, 12, 23, "Message"],
Cell[63245, 1367, 541, 11, 23, "Message"],
Cell[63789, 1380, 582, 12, 23, "Message"],
Cell[64374, 1394, 858, 15, 23, "Message"],
Cell[65235, 1411, 796, 14, 23, "Message"],
Cell[66034, 1427, 948, 17, 23, "Message"],
Cell[66985, 1446, 1995, 31, 59, "Message"],
Cell[68983, 1479, 1995, 31, 59, "Message"],
Cell[70981, 1512, 1995, 31, 59, "Message"],
Cell[72979, 1545, 588, 12, 23, "Message"],
Cell[73570, 1559, 2330, 55, 77, "Output"],
Cell[75903, 1616, 29816, 603, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105756, 2224, 1916, 50, 165, "Input"],
Cell[107675, 2276, 580, 12, 23, "Message"],
Cell[108258, 2290, 519, 11, 23, "Message"],
Cell[108780, 2303, 820, 14, 23, "Message"],
Cell[109603, 2319, 924, 16, 23, "Message"],
Cell[110530, 2337, 282, 5, 32, "Output"],
Cell[110815, 2344, 521, 11, 23, "Message"],
Cell[111339, 2357, 821, 14, 23, "Message"],
Cell[112163, 2373, 923, 16, 23, "Message"],
Cell[113089, 2391, 354, 7, 32, "Output"],
Cell[113446, 2400, 282, 5, 32, "Output"],
Cell[113731, 2407, 587, 11, 23, "Message"],
Cell[114321, 2420, 573, 11, 23, "Message"],
Cell[114897, 2433, 573, 11, 23, "Message"],
Cell[115473, 2446, 4092, 107, 32, "Output"]
}, Open  ]],
Cell[119580, 2556, 133, 2, 32, "Input"]
}
]
*)

(* End of internal cache information *)
